begin_compilation
  name " HotSpotCompilation-10839[java.net.URI$Parser.scan(int, int, String)]"
  method "HotSpotCompilation-10839[java.net.URI$Parser.scan(int, int, String)]"
  date 1724269730163
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i130 v81 ?88 i90 v151 j188 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?10 v11 v213 v81 ?88 i202 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 6]
profileData: PROFILED designatedSuccessorProbability: 0.9444898942815649
stamp: void
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v83 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a313 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a313  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.net.URI$Parser
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?10 ?88 v325 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a313 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.String
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: URI$Parser.input
memoryOrder: PLAIN
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 10]
stamp: n# java.lang.String
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v325 
lastLocationAccess: - 
=== Succesors ===
next: a314 
=== Usages ===
v327 v326 
=== Predecessor ===
v83 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v325 lastLocationAccess: - #next: a314  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?10 v331 ?88 v330 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String)>
localsSize: 6
locksSize: 0
sourceFile: URI.java
sourceLine: 3095
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 a4 
=== Succesors ===
=== Usages ===
v271 a314 i316 a317 i319 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a313 
=== Succesors ===
=== Usages ===
a314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a314 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-34827|0xffffffffffff77f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v327 
lastLocationAccess: - 
=== Succesors ===
next: i315 
=== Usages ===
v333 v328 v329 
=== Predecessor ===
a313 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v327 lastLocationAccess: - #next: i315  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a313 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v326 
lastLocationAccess: - 
=== Succesors ===
next: i316 
=== Usages ===
v187 
=== Predecessor ===
a314 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v326 lastLocationAccess: - #next: i316  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a314 
=== Succesors ===
=== Usages ===
i316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i316 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-36875|0xffffffffffff6ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v328 
lastLocationAccess: - 
=== Succesors ===
next: v227 
=== Usages ===
v210 v151 j201 
=== Predecessor ===
i315 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v328 lastLocationAccess: - #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i316 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i316  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
i316 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v224 #falseSuccessor: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a317 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a317  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a317 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-40971|0xffffffffffff5ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v331 
lastLocationAccess: - 
=== Succesors ===
next: i318 
=== Usages ===
a166 v332 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v331 lastLocationAccess: - #next: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v330 
lastLocationAccess: - 
=== Succesors ===
next: i319 
=== Usages ===
v323 
=== Predecessor ===
a317 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v330 lastLocationAccess: - #next: i319  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a317 
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-43019|0xffffffffffff57f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2461) [bci: 14]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v332 
lastLocationAccess: - 
=== Succesors ===
next: v243 
=== Usages ===
i114 i70 v117 
=== Predecessor ===
i318 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v332 lastLocationAccess: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 v323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i186 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i315 y: i186  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i319 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v241 #falseSuccessor: v242  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i186 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i318 y: i186  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v245 #falseSuccessor: v246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 7]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i320 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i320  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j188 
index: a314 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j188 index: a314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v329 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
i189 
=== Predecessor ===
v245 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v329 lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i320 
=== Succesors ===
=== Usages ===
?88 i114 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i320  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 2]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 v31 i114 v117 i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i319 
y: i26 
=== Succesors ===
=== Usages ===
v113 v67 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i319 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid a166 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a317 
=== Succesors ===
=== Usages ===
i70 i114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a317  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 i114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
i320 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i114 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a166 
arrayOffset: j69 
arrayLength: i319 
fromIndex: i26 
searchValues: i189 
=== Succesors ===
next: v121 
=== Usages ===
i120 
=== Predecessor ===
v112 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a166 arrayOffset: j69 arrayLength: i319 fromIndex: i26 searchValues: i189 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
i114 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v118 
values: i68 i114 
=== Succesors ===
=== Usages ===
v89 ?106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v118 values: i68 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v119 v121 
=== Succesors ===
next: v303 
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v119 v121 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 i90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
stamp: i32
=== Inputs ===
x: i2 
y: i36 
=== Succesors ===
=== Usages ===
i131 i202 j322 v210 v213 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i3 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i90 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v302 #falseSuccessor: v299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i90 
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i202 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i202  <|@  <|@
f <@~|@floating>@ <|@
tid j322 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i90 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i90  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j205 
y: j322 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j205 y: j322  <|@  <|@
f <@~|@floating>@ <|@
tid j206 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j263 
y: j206 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j263 y: j206  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i316 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i316  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j264 
y: j201 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j264 y: j201  <|@  <|@
f <@~|@floating>@ <|@
tid j289 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 2584
stableDimension: 0
stamp: i64 [2584]
stampKind: i64
value: long[2584|0xa18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j291 j291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -44316
stableDimension: 0
stamp: i32 [-44316]
stampKind: i32
value: int[-44316|0xffffffffffff52e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i290 i290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v310 #falseSuccessor: v307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i316 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i316  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v300 #falseSuccessor: v308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v297 v298 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v297 v298 #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i26 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i120 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i90 i37 i37 
=== Succesors ===
=== Usages ===
?10 v11 i37 i130 j190 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: i90 i37 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v7 
=== Succesors ===
next: v17 
=== Usages ===
i131 v13 v38 v262 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v7 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i131 
y: i3 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i131 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.941227422278923
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v16 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
stamp: i32
=== Inputs ===
x: i131 
y: i36 
=== Succesors ===
=== Usages ===
i131 i131 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i131 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v65 #falseSuccessor: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i321 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i321  <|@  <|@
f <@~|@floating>@ <|@
tid j190 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i131 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i131  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j190 
index: a314 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j190 index: a314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i321 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v333 
lastLocationAccess: - 
=== Succesors ===
next: i70 
=== Usages ===
i191 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v333 lastLocationAccess: - #next: i70  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i321 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a166 
arrayOffset: j69 
arrayLength: i319 
fromIndex: i26 
searchValues: i191 
=== Succesors ===
next: v255 
=== Usages ===
v31 
=== Predecessor ===
i321 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a166 arrayOffset: j69 arrayLength: i319 fromIndex: i26 searchValues: i191 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i26 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
i70 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v258 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: iload
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String)>
localsSize: 6
locksSize: 0
sourceFile: URI.java
sourceLine: 3096
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 i131 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 i131  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x4788151d]: UnreachedCode@6[HotSpotMethod<URI$Parser.scan(int, int, String)>, 29]}
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 10]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -63507
stableDimension: 0
stamp: i32 [-63507]
stampKind: i32
value: int[-63507|0xffffffffffff07ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v250 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i32 [-63507 - -44316] bits:1...10x0x0x1x1110x10x
valueDescription: i32
=== Inputs ===
merge: v286 
values: i288 i294 i288 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v286 values: i288 i294 i288  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i64 [20 - 2584] bits:0...0x0x00001xx00
valueDescription: i64
=== Inputs ===
merge: v286 
values: j289 j132 j289 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v286 values: j289 j132 j289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v287 v293 v312 
=== Succesors ===
next: v292 
=== Usages ===
i290 j291 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v293 v312 #next: v292  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
sourceFile: URI.java
sourceLine: 3098
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 i2 i189 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 i2 i189  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.indexOf(int)>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2405
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?88 
=== Succesors ===
=== Usages ===
?106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?88  <|@  <|@
tid ?106 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: goto
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
sourceFile: String.java
sourceLine: 2461
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: i120 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i120  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?106 
actionAndReason: i290 
speculation: j291 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?106 actionAndReason: i290 speculation: j291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -62483
stableDimension: 0
stamp: i32 [-62483]
stampKind: i32
value: int[-62483|0xffffffffffff0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i281 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -61459
stableDimension: 0
stamp: i32 [-61459]
stampKind: i32
value: int[-61459|0xffffffffffff0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -38172
stableDimension: 0
stamp: i32 [-38172]
stampKind: i32
value: int[-38172|0xffffffffffff6ae4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i32 [-62483 - -38172] bits:1...10xx01x1x1110x10x
valueDescription: i32
=== Inputs ===
merge: v265 
values: i277 i281 i284 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v265 values: i277 i281 i284  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i64 [0 - 1300] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v265 
values: j268 j282 j285 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v265 values: j268 j282 j285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v276 v280 v283 
=== Succesors ===
next: v271 
=== Usages ===
i269 j270 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v276 v280 v283 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i269 
speculation: j270 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i269 speculation: j270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v125 
values: i131 i2 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v125 values: i131 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v126 v127 
=== Succesors ===
next: v39 
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v126 v127 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 40]
stamp: void
=== Inputs ===
memoryMap: - 
result: i130 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i130  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i130 v81 ?88 i90 v151 j188 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?10 v11 v213 v81 ?88 i202 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 6]
profileData: PROFILED designatedSuccessorProbability: 0.9444898942815649
stamp: void
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v83 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a313 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a313  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.net.URI$Parser
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?10 ?88 v325 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a313 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.String
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: URI$Parser.input
memoryOrder: PLAIN
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 10]
stamp: n# java.lang.String
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v325 
lastLocationAccess: - 
=== Succesors ===
next: a314 
=== Usages ===
v327 v326 
=== Predecessor ===
v83 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v325 lastLocationAccess: - #next: a314  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?10 v331 ?88 v330 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String)>
localsSize: 6
locksSize: 0
sourceFile: URI.java
sourceLine: 3095
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 a4 
=== Succesors ===
=== Usages ===
v271 a314 i316 a317 i319 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
result [v4|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a313 
=== Succesors ===
=== Usages ===
a314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a314 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-34827|0xffffffffffff77f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v327 
lastLocationAccess: - 
=== Succesors ===
next: i315 
=== Usages ===
v333 v328 v329 
=== Predecessor ===
a313 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v327 lastLocationAccess: - #next: i315  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
result [v4|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a313 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i315 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v326 
lastLocationAccess: - 
=== Succesors ===
next: i316 
=== Usages ===
v187 
=== Predecessor ===
a314 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v326 lastLocationAccess: - #next: i316  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a314 
=== Succesors ===
=== Usages ===
i316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i316 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-36875|0xffffffffffff6ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v328 
lastLocationAccess: - 
=== Succesors ===
next: v227 
=== Usages ===
v210 v151 j201 
=== Predecessor ===
i315 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v328 lastLocationAccess: - #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i316 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i316  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
i316 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v224 #falseSuccessor: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a317 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a317  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
result [v3|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a317 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-40971|0xffffffffffff5ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v331 
lastLocationAccess: - 
=== Succesors ===
next: i318 
=== Usages ===
a166 v332 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v331 lastLocationAccess: - #next: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i318 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v330 
lastLocationAccess: - 
=== Succesors ===
next: i319 
=== Usages ===
v323 
=== Predecessor ===
a317 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v330 lastLocationAccess: - #next: i319  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
result [v8|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a317 
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i319 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-43019|0xffffffffffff57f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2461) [bci: 14]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v332 
lastLocationAccess: - 
=== Succesors ===
next: v243 
=== Usages ===
i114 i70 v117 
=== Predecessor ===
i318 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v332 lastLocationAccess: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 v323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i186 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i315 y: i186  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i319 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v241 #falseSuccessor: v242  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i186 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i318 y: i186  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v245 #falseSuccessor: v246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 7]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i320 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i320  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
result [v11|QWORD + v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j188 
index: a314 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j188 index: a314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v329 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
i189 
=== Predecessor ===
v245 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v329 lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i320 
=== Succesors ===
=== Usages ===
?88 i114 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i320  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 2]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 v31 i114 v117 i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i319 
y: i26 
=== Succesors ===
=== Usages ===
v113 v67 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i319 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid a166 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a317 
=== Succesors ===
=== Usages ===
i70 i114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a317  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 i114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
i320 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i114 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i114 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a166 
arrayOffset: j69 
arrayLength: i319 
fromIndex: i26 
searchValues: i189 
=== Succesors ===
next: v121 
=== Usages ===
i120 
=== Predecessor ===
v112 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a166 arrayOffset: j69 arrayLength: i319 fromIndex: i26 searchValues: i189 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
i114 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i120 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v118 
values: i68 i114 
=== Succesors ===
=== Usages ===
v89 ?106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v118 values: i68 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v119 v121 
=== Succesors ===
next: v303 
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v119 v121 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 i90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
stamp: i32
=== Inputs ===
x: i2 
y: i36 
=== Succesors ===
=== Usages ===
i131 i202 j322 v210 v213 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i3 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i90 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v302 #falseSuccessor: v299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i90 
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i202 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i202  <|@  <|@
f <@~|@floating>@ <|@
tid j322 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i90 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i90  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j205 
y: j322 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j205 y: j322  <|@  <|@
f <@~|@floating>@ <|@
tid j206 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j263 
y: j206 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j263 y: j206  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i316 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i316  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j264 
y: j201 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j264 y: j201  <|@  <|@
f <@~|@floating>@ <|@
tid j289 <|@
result long[2584|0xa18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 2584
stableDimension: 0
stamp: i64 [2584]
stampKind: i64
value: long[2584|0xa18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j291 j291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result int[-44316|0xffffffffffff52e4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -44316
stableDimension: 0
stamp: i32 [-44316]
stampKind: i32
value: int[-44316|0xffffffffffff52e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i290 i290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v310 #falseSuccessor: v307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i316 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i316  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v300 #falseSuccessor: v308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v297 v298 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v297 v298 #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i26 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i120 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i131 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i90 i37 i37 
=== Succesors ===
=== Usages ===
?10 v11 i37 i130 j190 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: i90 i37 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v7 
=== Succesors ===
next: v17 
=== Usages ===
i131 v13 v38 v262 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v7 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i131 
y: i3 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i131 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.941227422278923
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v16 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
stamp: i32
=== Inputs ===
x: i131 
y: i36 
=== Succesors ===
=== Usages ===
i131 i131 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i131 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v65 #falseSuccessor: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i321 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i321  <|@  <|@
f <@~|@floating>@ <|@
tid j190 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i131 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i131  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
result [v23|DWORD + v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j190 
index: a314 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j190 index: a314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i321 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v333 
lastLocationAccess: - 
=== Succesors ===
next: i70 
=== Usages ===
i191 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v333 lastLocationAccess: - #next: i70  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i321 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i70 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a166 
arrayOffset: j69 
arrayLength: i319 
fromIndex: i26 
searchValues: i191 
=== Succesors ===
next: v255 
=== Usages ===
v31 
=== Predecessor ===
i321 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a166 arrayOffset: j69 arrayLength: i319 fromIndex: i26 searchValues: i191 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i26 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
i70 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v258 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3100) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: iload
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String)>
localsSize: 6
locksSize: 0
sourceFile: URI.java
sourceLine: 3096
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 i131 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 i131  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x4788151d]: UnreachedCode@6[HotSpotMethod<URI$Parser.scan(int, int, String)>, 29]}
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3098) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 10]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
result int[-63507|0xffffffffffff07ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -63507
stableDimension: 0
stamp: i32 [-63507]
stampKind: i32
value: int[-63507|0xffffffffffff07ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v250 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i290 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i32 [-63507 - -44316] bits:1...10x0x0x1x1110x10x
valueDescription: i32
=== Inputs ===
merge: v286 
values: i288 i294 i288 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v286 values: i288 i294 i288  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i64 [20 - 2584] bits:0...0x0x00001xx00
valueDescription: i64
=== Inputs ===
merge: v286 
values: j289 j132 j289 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v286 values: j289 j132 j289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v287 v293 v312 
=== Succesors ===
next: v292 
=== Usages ===
i290 j291 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v293 v312 #next: v292  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
sourceFile: URI.java
sourceLine: 3098
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 i2 i189 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 i2 i189  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.indexOf(int)>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2405
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?88 
=== Succesors ===
=== Usages ===
?106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?88  <|@  <|@
tid ?106 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: goto
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
sourceFile: String.java
sourceLine: 2461
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: i120 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i120  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?106 
actionAndReason: i290 
speculation: j291 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?106 actionAndReason: i290 speculation: j291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
result int[-62483|0xffffffffffff0bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -62483
stableDimension: 0
stamp: i32 [-62483]
stampKind: i32
value: int[-62483|0xffffffffffff0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i281 <|@
result int[-61459|0xffffffffffff0fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -61459
stableDimension: 0
stamp: i32 [-61459]
stampKind: i32
value: int[-61459|0xffffffffffff0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result int[-38172|0xffffffffffff6ae4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
rawvalue: -38172
stableDimension: 0
stamp: i32 [-38172]
stampKind: i32
value: int[-38172|0xffffffffffff6ae4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i269 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i32 [-62483 - -38172] bits:1...10xx01x1x1110x10x
valueDescription: i32
=== Inputs ===
merge: v265 
values: i277 i281 i284 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v265 values: i277 i281 i284  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: i64 [0 - 1300] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v265 
values: j268 j282 j285 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v265 values: j268 j282 j285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v276 v280 v283 
=== Succesors ===
next: v271 
=== Usages ===
i269 j270 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v276 v280 v283 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3097) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i269 
speculation: j270 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i269 speculation: j270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i130 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v125 
values: i131 i2 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v125 values: i131 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v126 v127 
=== Succesors ===
next: v39 
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v126 v127 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3102) [bci: 40]
stamp: void
=== Inputs ===
memoryMap: - 
result: i130 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  162  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  166  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  272  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  376  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  458  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  522  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  162  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  166  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  272  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  376  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  458  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  522  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v31|d [0, 1[[160, 162[[340, 342[[394, 396[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v10|d [0, 30[[154, 161[[334, 341[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 28[[152, 161[[332, 341[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v13|q [0, 26[[150, 161[[330, 341[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 32[[156, 160[[336, 340[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v12|d [0, 1[[158, 160[[338, 340[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [26, 366[[408, 479[[480, 501[[502, 543[26 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [28, 262[[398, 407[[408, 479[[502, 543[28 MustHaveRegister 34 ShouldHaveRegister 62 ShouldHaveRegister 118 ShouldHaveRegister 178 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [30, 366[[408, 479[[480, 501[[502, 543[30 MustHaveRegister 34 MustHaveRegister 180 MustHaveRegister 214 MustHaveRegister 282 MustHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|d [32, 366[[408, 479[[480, 501[[502, 543[32 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [54, 58[54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [56, 366[[408, 418[56 MustHaveRegister 60 MustHaveRegister 120 MustHaveRegister 328 MustHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [58, 86[58 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [60, 182[[192, 238[[408, 418[60 MustHaveRegister 62 MustHaveRegister 224 ShouldHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [80, 122[80 MustHaveRegister 84 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [82, 98[82 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [84, 366[[408, 418[84 MustHaveRegister 124 MustHaveRegister 154 ShouldHaveRegister 298 MustHaveRegister 334 ShouldHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [120, 262[[408, 418[[428, 479[120 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v8|d [122, 366[[408, 418[122 MustHaveRegister 150 ShouldHaveRegister 330 ShouldHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d rax|d [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [166, 262[[428, 479[260 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v1|d [178, 271[178 MustHaveRegister 180 ShouldHaveRegister 214 ShouldHaveRegister 218 ShouldHaveRegister 238 ShouldHaveRegister 270 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v2|d [214, 216[214 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [216, 220[216 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v16|d [218, 220[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v18|q [220, 222[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|q [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v7|d [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v24|d [272, 346[[366, 375[[480, 501[282 ShouldHaveRegister 296 ShouldHaveRegister 328 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v23|d [296, 355[[356, 365[296 MustHaveRegister 354 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [328, 338[328 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d rax|d [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [458, 474[474 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [458, 476[476 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [522, 538[538 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [522, 540[540 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v23|d [376, 394[394 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v31|d [0, 1[[160, 162[[340, 342[[394, 396[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v10|d [0, 30[[154, 161[[334, 341[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 28[[152, 161[[332, 341[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v13|q [0, 26[[150, 161[[330, 341[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 32[[156, 160[[336, 340[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v12|d [0, 1[[158, 160[[338, 340[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [26, 126[26 MustHaveRegister 54 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rbx|d]" v1|d rdx|- [28, 262[[398, 407[[408, 479[[502, 543[28 MustHaveRegister 34 ShouldHaveRegister 62 ShouldHaveRegister 118 ShouldHaveRegister 178 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rbp|d]" v2|d rcx|- [30, 366[[408, 479[[480, 501[[502, 543[30 MustHaveRegister 34 MustHaveRegister 180 MustHaveRegister 214 MustHaveRegister 282 MustHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v3|q QWORD "[r13|q]" v3|q r8|d [32, 126[32 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [54, 58[54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r14|d]" v5|d -1 [56, 366[[408, 418[56 MustHaveRegister 60 MustHaveRegister 120 MustHaveRegister 328 MustHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [58, 86[58 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [60, 126[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d -1 [80, 122[80 MustHaveRegister 84 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [82, 98[82 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [84, 159[84 MustHaveRegister 124 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [120, 159[120 MustHaveRegister 158 ShouldHaveRegister  "OneSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v8|d [122, 151[122 MustHaveRegister 150 ShouldHaveRegister  "SpillInDominator"
  v14|d DWORD "[rax|d]" v14|d rax|d [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [166, 262[[428, 479[260 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d v1|d [178, 271[178 MustHaveRegister 180 ShouldHaveRegister 214 ShouldHaveRegister 218 ShouldHaveRegister 238 ShouldHaveRegister 270 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rdx|d]" v17|d v2|d [214, 216[214 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [216, 220[216 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q v16|d [218, 220[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v18|q [220, 222[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q v20|q [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[r10|q]" v22|q v7|d [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbx|d]" v23|d v24|d [272, 346[[366, 375[[480, 501[282 ShouldHaveRegister 296 ShouldHaveRegister 328 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r13|d]" v24|d v23|d [296, 355[[356, 365[296 MustHaveRegister 354 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r9|d]" v25|d -1 [328, 338[328 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|d [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [458, 474[474 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r11|q]" v28|q -1 [458, 476[476 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r10|d]" v29|d -1 [522, 538[538 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r11|q]" v30|q -1 [522, 540[540 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d v23|d [376, 394[394 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v7|d v7|d [126, 159[ "NoSpillStore"
  v33|d DWORD "[r11|d]" v10|d v10|d [159, 366[[408, 418[298 MustHaveRegister 334 ShouldHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[vstack:3|d]" v12|d v12|d [159, 262[[408, 418[[428, 458[ "OneSpillStore"
  v35|q QWORD "[vstack:2|q]" v13|q v13|q [151, 157[ "SpillInDominator"
  v36|d DWORD "[r13|d]" v7|d v7|d [159, 182[[192, 238[[408, 418[224 ShouldHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[vstack:2|q]" v13|q v13|q [157, 272[ "SpillInDominator"
  v38|q QWORD "[r8|q]" v0|q v0|q [522, 543[ "OneSpillStore"
  v39|q QWORD "[vstack:0|q]" v0|q v0|q [126, 366[[408, 479[[480, 501[[502, 522[ "OneSpillStore"
  v40|q QWORD "[r13|q]" v3|q v3|q [522, 543[ "OneSpillStore"
  v41|q QWORD "[vstack:1|q]" v3|q v3|q [126, 366[[408, 479[[480, 501[[502, 522[ "OneSpillStore"
  v42|q QWORD "[rdx|q]" v13|q v13|q [272, 331[330 ShouldHaveRegister  "SpillInDominator"
  v43|d DWORD "[r8|d]" v12|d v12|d [458, 479[ "OneSpillStore"
  v44|q QWORD "[vstack:2|q]" v13|q v13|q [331, 339[ "SpillInDominator"
  v45|q QWORD "[vstack:2|q]" v13|q v13|q [339, 366[[408, 418[355 LiveAtLoopEnd 365 LiveAtLoopEnd  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  162  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  166  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  272  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  332  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = STACKMOVE (input: v44|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  376  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  458  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  522  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v31|d [0, 1[[160, 162[[340, 342[[394, 396[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v10|d [0, 30[[154, 161[[334, 341[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 28[[152, 161[[332, 341[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v13|q [0, 26[[150, 161[[330, 341[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 32[[156, 160[[336, 340[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v12|d [0, 1[[158, 160[[338, 340[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [26, 126[26 MustHaveRegister 54 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rbx|d]" v1|d rdx|- [28, 262[[398, 407[[408, 479[[502, 543[28 MustHaveRegister 34 ShouldHaveRegister 62 ShouldHaveRegister 118 ShouldHaveRegister 178 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rbp|d]" v2|d rcx|- [30, 366[[408, 479[[480, 501[[502, 543[30 MustHaveRegister 34 MustHaveRegister 180 MustHaveRegister 214 MustHaveRegister 282 MustHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v3|q QWORD "[r13|q]" v3|q r8|d [32, 126[32 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [54, 58[54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r14|d]" v5|d -1 [56, 366[[408, 418[56 MustHaveRegister 60 MustHaveRegister 120 MustHaveRegister 328 MustHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [58, 86[58 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [60, 126[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d -1 [80, 122[80 MustHaveRegister 84 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [82, 98[82 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [84, 159[84 MustHaveRegister 124 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [120, 159[120 MustHaveRegister 158 ShouldHaveRegister  "OneSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v8|d [122, 151[122 MustHaveRegister 150 ShouldHaveRegister  "StoreAtDefinition"
  v14|d DWORD "[rax|d]" v14|d rax|d [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [166, 262[[428, 479[260 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d v1|d [178, 271[178 MustHaveRegister 180 ShouldHaveRegister 214 ShouldHaveRegister 218 ShouldHaveRegister 238 ShouldHaveRegister 270 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rdx|d]" v17|d v2|d [214, 216[214 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [216, 220[216 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q v16|d [218, 220[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v18|q [220, 222[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q v20|q [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[r10|q]" v22|q v7|d [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbx|d]" v23|d v24|d [272, 346[[366, 375[[480, 501[282 ShouldHaveRegister 296 ShouldHaveRegister 328 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r13|d]" v24|d v23|d [296, 355[[356, 365[296 MustHaveRegister 354 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r9|d]" v25|d -1 [328, 338[328 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|d [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [458, 474[474 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r11|q]" v28|q -1 [458, 476[476 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r10|d]" v29|d -1 [522, 538[538 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r11|q]" v30|q -1 [522, 540[540 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d v23|d [376, 394[394 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v7|d v7|d [126, 159[ "NoSpillStore"
  v33|d DWORD "[r11|d]" v10|d v10|d [159, 366[[408, 418[298 MustHaveRegister 334 ShouldHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[vstack:3|d]" v12|d v12|d [159, 262[[408, 418[[428, 458[ "OneSpillStore"
  v35|q QWORD "[vstack:2|q]" v13|q v13|q [151, 157[ "StoreAtDefinition"
  v36|d DWORD "[r13|d]" v7|d v7|d [159, 182[[192, 238[[408, 418[224 ShouldHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[vstack:2|q]" v13|q v13|q [157, 272[ "StoreAtDefinition"
  v38|q QWORD "[r8|q]" v0|q v0|q [522, 543[ "OneSpillStore"
  v39|q QWORD "[vstack:0|q]" v0|q v0|q [126, 366[[408, 479[[480, 501[[502, 522[ "OneSpillStore"
  v40|q QWORD "[r13|q]" v3|q v3|q [522, 543[ "OneSpillStore"
  v41|q QWORD "[vstack:1|q]" v3|q v3|q [126, 366[[408, 479[[480, 501[[502, 522[ "OneSpillStore"
  v42|q QWORD "[rdx|q]" v13|q v13|q [272, 331[330 ShouldHaveRegister  "StoreAtDefinition"
  v43|d DWORD "[r8|d]" v12|d v12|d [458, 479[ "OneSpillStore"
  v44|q QWORD "[vstack:2|q]" v13|q v13|q [331, 339[ "StoreAtDefinition"
  v45|q QWORD "[vstack:2|q]" v13|q v13|q [339, 366[[408, 418[355 LiveAtLoopEnd 365 LiveAtLoopEnd  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  162  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  166  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  272  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  332  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = STACKMOVE (input: v44|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  376  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [int[-61459|0xffffffffffff0fed], long[660|0x294]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [int[-44316|0xffffffffffff52e4], long[2584|0xa18]] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [int[-63507|0xffffffffffff07ed], long[20|0x14]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  458  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [int[-38172|0xffffffffffff6ae4], long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [int[-62483|0xffffffffffff0bed], long[1300|0x514]] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  522  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v31|d [0, 1[[160, 162[[340, 342[[394, 396[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v10|d [0, 30[[154, 161[[334, 341[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 28[[152, 161[[332, 341[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v13|q [0, 26[[150, 161[[330, 341[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 32[[156, 160[[336, 340[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v12|d [0, 1[[158, 160[[338, 340[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[160, 161[[340, 341[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [26, 126[26 MustHaveRegister 54 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rbx|d]" v1|d rdx|- [28, 262[[398, 407[[408, 479[[502, 543[28 MustHaveRegister 34 ShouldHaveRegister 62 ShouldHaveRegister 118 ShouldHaveRegister 178 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rbp|d]" v2|d rcx|- [30, 366[[408, 479[[480, 501[[502, 543[30 MustHaveRegister 34 MustHaveRegister 180 MustHaveRegister 214 MustHaveRegister 282 MustHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v3|q QWORD "[r13|q]" v3|q r8|d [32, 126[32 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [54, 58[54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r14|d]" v5|d -1 [56, 366[[408, 418[56 MustHaveRegister 60 MustHaveRegister 120 MustHaveRegister 328 MustHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [58, 86[58 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [60, 126[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d -1 [80, 122[80 MustHaveRegister 84 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [82, 98[82 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [84, 159[84 MustHaveRegister 124 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [120, 159[120 MustHaveRegister 158 ShouldHaveRegister  "OneSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v8|d [122, 151[122 MustHaveRegister 150 ShouldHaveRegister  "StoreAtDefinition"
  v14|d DWORD "[rax|d]" v14|d rax|d [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [166, 262[[428, 479[260 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d v1|d [178, 271[178 MustHaveRegister 180 ShouldHaveRegister 214 ShouldHaveRegister 218 ShouldHaveRegister 238 ShouldHaveRegister 270 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rdx|d]" v17|d v2|d [214, 216[214 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [216, 220[216 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q v16|d [218, 220[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v18|q [220, 222[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q v20|q [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[r10|q]" v22|q v7|d [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbx|d]" v23|d v24|d [272, 346[[366, 375[[480, 501[282 ShouldHaveRegister 296 ShouldHaveRegister 328 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r13|d]" v24|d v23|d [296, 355[[356, 365[296 MustHaveRegister 354 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r9|d]" v25|d -1 [328, 338[328 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|d [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [458, 474[474 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r11|q]" v28|q -1 [458, 476[476 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r10|d]" v29|d -1 [522, 538[538 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r11|q]" v30|q -1 [522, 540[540 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d v23|d [376, 394[394 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v7|d v7|d [126, 159[ "NoSpillStore"
  v33|d DWORD "[r11|d]" v10|d v10|d [159, 366[[408, 418[298 MustHaveRegister 334 ShouldHaveRegister 355 LiveAtLoopEnd 365 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[vstack:3|d]" v12|d v12|d [159, 262[[408, 418[[428, 458[ "OneSpillStore"
  v35|q QWORD "[vstack:2|q]" v13|q v13|q [151, 157[ "StoreAtDefinition"
  v36|d DWORD "[r13|d]" v7|d v7|d [159, 182[[192, 238[[408, 418[224 ShouldHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[vstack:2|q]" v13|q v13|q [157, 272[ "StoreAtDefinition"
  v38|q QWORD "[r8|q]" v0|q v0|q [522, 543[ "OneSpillStore"
  v39|q QWORD "[vstack:0|q]" v0|q v0|q [126, 366[[408, 479[[480, 501[[502, 522[ "OneSpillStore"
  v40|q QWORD "[r13|q]" v3|q v3|q [522, 543[ "OneSpillStore"
  v41|q QWORD "[vstack:1|q]" v3|q v3|q [126, 366[[408, 479[[480, 501[[502, 522[ "OneSpillStore"
  v42|q QWORD "[rdx|q]" v13|q v13|q [272, 331[330 ShouldHaveRegister  "StoreAtDefinition"
  v43|d DWORD "[r8|d]" v12|d v12|d [458, 479[ "OneSpillStore"
  v44|q QWORD "[vstack:2|q]" v13|q v13|q [331, 339[ "StoreAtDefinition"
  v45|q QWORD "[vstack:2|q]" v13|q v13|q [339, 366[[408, 418[355 LiveAtLoopEnd 365 LiveAtLoopEnd  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  162  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  166  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  272  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  332  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = STACKMOVE (input: v44|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  376  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v34|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v34|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v34|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  458  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  522  <|@ instruction [v29|DWORD, v30|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v6|DWORD = MOVSXB input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction v9|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v10|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v11|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v12|DWORD = MOVZXB input: [v11|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  124  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  162  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v16|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = SUB (x: v2|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|QWORD = MOVSXD value: v17|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction v19|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction v21|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction v22|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v22|QWORD, y: v21|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v16|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v24|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v25|DWORD = MOVZXB input: [v23|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  332  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v34|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v34|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v34|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v15|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v1|DWORD v12|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v23|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v29|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v30|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  124  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: vstack:0|QWORD[.] - rbp|DWORD vstack:1|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: vstack:0|QWORD[.] - rbp|DWORD vstack:1|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  124  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: vstack:0|QWORD[.] - rbp|DWORD vstack:1|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: vstack:0|QWORD[.] - rbp|DWORD vstack:1|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction vstack:3|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction vstack:3|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  546  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  284  <|@ instruction r8|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  482  <|@ instruction r8|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: vstack:0|QWORD[.] - rbp|DWORD vstack:1|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: vstack:0|QWORD[.] - rbp|DWORD vstack:1|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  524  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [134, 570[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [132, 568[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [124, 437[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [130, 482[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:56|q]" vstack:0|q -1 [134, 570[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:48|q]" vstack:1|q -1 [132, 568[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:40|q]" vstack:2|q -1 [124, 437[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:28|d]" vstack:3|d -1 [130, 482[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  546  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  284  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  482  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  524  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  546  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  284  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  482  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  524  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rsi:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [r11:0, r13:0, r14:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [r11:0, r13:0, r14:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, r11:0, r13:0, r14:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@reference-map: [r8:0, r13:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B27" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rsi:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [r11:0, r13:0, r14:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B26" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [r11:0, r13:0, r14:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, r11:0, r13:0, r14:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B25" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606679633405813385
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B23" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606682428217159726
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" "B18" 
    successors "B17" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625216590338302427
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624704662825112755
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction r13|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  416  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  420  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624701865439430017
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572379068031930475
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B30" 
    xhandlers
    flags 
    probability 4606682428217159727
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602178828589789230
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 4588160670361517344
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4554359397281508152
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed] <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B12" "B23" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  300  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3098) [bci: 23]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  468  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3096) [bci: 3]
locals: stack:56|QWORD[.] - rbp|DWORD stack:48|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@reference-map: [r8:0, r13:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3095) [bci: 0]
locals: r8|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4] <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        4
     3: iload         4
     5: iload_2       
     6: if_icmpge     38
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         4
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        5
    20: aload_3       
    21: iload         5
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          32
    29: goto          38
    32: iinc          
    35: goto          3
    38: iload         4
    40: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f85010300009090909090909090909048896c24304c8bde8bda8be94d8be83beb0f8eae0100009090909090909090418b7314448b34f5140000000fbe34f510000000468b14f50c000000443bd30f867802000090909090909090418b5514410fbe4d108b3cd50c0000004084f60f85e80100009090909084c90f856802000090909090909090908bf3420fb644f61048c1e203488954241885ff0f84390100004c896c24104c895c24089090909090909090909090488bf248c7c2100000008bcf41b800000000448bc889442424448bdf458beae80000000090909090908bf3ffc63bee0f8fb00000009090909090909085c00f8d010100009090908bde660f1f84000000000066666690488b542418909090903beb0f8e570000009090909090448beb41ffc54585db0f843b00000090909090909090909090909090460fb64cf310488bf248c7c210000000418bcb41b800000000e80000000085c00f8dce000000909090418bddeba0909090418bddeb9890909090909090909090908bc3488b6c24304883c438493ba7500400000f8780010000c5f877c3909090909090909090908bd52bd64863d28bce4803d148ffca458bd54c3bd20f86e200000090909090443bee0f86ea000000909090e919ffffff909090eb9d894424244c896c24104c895c2408448bdf458bea909090b8ffffffffe9dffeffff90909049c7c31400000041baed07ffff448b44242490909090909090458997840400004d899f90040000e8000000000f1f8400000000009090909090909041c78784040000ed03ffff49c7879004000014000000e8000000000f1f8400000000004c896c24104c895c240890909049c7c39402000041baed0fffff4c8b6c24104c8b44240890909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c3180a000041bae452ffffe954ffffff90909049c7c3180a000041bae452ffffe93fffffff4c896c24104c895c240890909049c7c30000000041bae46affffeb8e4c896c24104c895c240890909049c7c31405000041baed0bffffe96fffffff48896c2430e800000000e9f0fcfffff4488d0d6cfeffff49898f68040000e9a2fcfffff441c78784040000f577ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f56fffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f55fffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f557ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD  <||@
  Comment 73 26 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 76 28 rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 78 30 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 80 32 r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 83 34 CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD  <||@
  Comment 91 block B1 null  <||@
  Comment 91 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 91 38 NOP  <||@
  Comment 92 40 NOP  <||@
  Comment 93 42 NOP  <||@
  Comment 94 44 NOP  <||@
  Comment 95 46 NOP  <||@
  Comment 96 48 NOP  <||@
  Comment 97 50 NOP  <||@
  Comment 98 52 NOP  <||@
  Comment 99 54 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 103 56 r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 103 [rsi:0, r11:0, r13:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 58 rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 119 60 r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 119 [r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 119 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 127 62 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD  <||@
  Comment 136 block B2 null  <||@
  Comment 136 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 136 66 NOP  <||@
  Comment 137 68 NOP  <||@
  Comment 138 70 NOP  <||@
  Comment 139 72 NOP  <||@
  Comment 140 74 NOP  <||@
  Comment 141 76 NOP  <||@
  Comment 142 78 NOP  <||@
  Comment 143 80 rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 143 [r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 143 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 147 82 rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 152 84 rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 152 [rdx:0, r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 152 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 159 86 TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26  <||@
  Comment 168 block B3 null  <||@
  Comment 168 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 168 90 NOP  <||@
  Comment 169 92 NOP  <||@
  Comment 170 94 NOP  <||@
  Comment 171 96 NOP  <||@
  Comment 172 98 TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25  <||@
  Comment 180 block B4 null  <||@
  Comment 180 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 180 102 NOP  <||@
  Comment 181 104 NOP  <||@
  Comment 182 106 NOP  <||@
  Comment 183 108 NOP  <||@
  Comment 184 110 NOP  <||@
  Comment 185 112 NOP  <||@
  Comment 186 114 NOP  <||@
  Comment 187 116 NOP  <||@
  Comment 188 118 rsi|QWORD = MOV value: rbx|DWORD size: DWORD  <||@
  Comment 190 120 rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 196 122 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3  <||@
  Comment 200 124 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 205 126 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 213 block B6 null  <||@
  Comment 213 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 213 152 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 218 154 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 223 156 NOP  <||@
  Comment 224 158 NOP  <||@
  Comment 225 160 NOP  <||@
  Comment 226 162 NOP  <||@
  Comment 227 164 NOP  <||@
  Comment 228 166 NOP  <||@
  Comment 229 168 NOP  <||@
  Comment 230 170 NOP  <||@
  Comment 231 172 NOP  <||@
  Comment 232 174 NOP  <||@
  Comment 233 176 NOP  <||@
  Comment 234 178 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 237 180 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 244 182 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 246 184 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 252 186 r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 255 188 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 259 190 r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 262 192 r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 265 194 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 265 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 270 196 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 270 block B7 null  <||@
  Comment 270 198 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 270 200 NOP  <||@
  Comment 271 202 NOP  <||@
  Comment 272 204 NOP  <||@
  Comment 273 206 NOP  <||@
  Comment 274 208 NOP  <||@
  Comment 275 210 rsi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 279 212 CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD  <||@
  Comment 287 block B13 null  <||@
  Comment 287 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 287 306 NOP  <||@
  Comment 288 308 NOP  <||@
  Comment 289 310 NOP  <||@
  Comment 290 312 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 290 block B14 null  <||@
  Comment 290 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 290 316 NOP  <||@
  Comment 291 318 NOP  <||@
  Comment 292 320 NOP  <||@
  Comment 293 322 NOP  <||@
  Comment 294 324 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD  <||@
  Comment 302 block B15 null  <||@
  Comment 302 326 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 302 328 NOP  <||@
  Comment 303 330 NOP  <||@
  Comment 304 332 NOP  <||@
  Comment 305 334 rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 307 338 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 307 block B16 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 307 340 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 320 336 rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 325 342 NOP  <||@
  Comment 326 344 NOP  <||@
  Comment 327 346 NOP  <||@
  Comment 328 348 NOP  <||@
  Comment 329 350 CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD  <||@
  Comment 337 block B17 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 337 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 337 354 NOP  <||@
  Comment 338 356 NOP  <||@
  Comment 339 358 NOP  <||@
  Comment 340 360 NOP  <||@
  Comment 341 362 NOP  <||@
  Comment 342 364 r13|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 348 366 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 357 block B19 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 357 382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 357 384 NOP  <||@
  Comment 358 386 NOP  <||@
  Comment 359 388 NOP  <||@
  Comment 360 390 NOP  <||@
  Comment 361 392 NOP  <||@
  Comment 362 394 NOP  <||@
  Comment 363 396 NOP  <||@
  Comment 364 398 NOP  <||@
  Comment 365 400 NOP  <||@
  Comment 366 402 NOP  <||@
  Comment 367 404 NOP  <||@
  Comment 368 406 NOP  <||@
  Comment 369 408 NOP  <||@
  Comment 370 410 r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 376 412 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 379 414 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 386 416 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 389 418 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 395 420 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 395 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 400 422 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD  <||@
  Comment 408 block B20 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 408 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 426 NOP  <||@
  Comment 409 428 NOP  <||@
  Comment 410 430 NOP  <||@
  Comment 411 432 rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 414 436 JUMP ~outgoingValues: [] destination: B20 -> B16  <||@
  Comment 416 block B18 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 416 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 416 370 NOP  <||@
  Comment 417 372 NOP  <||@
  Comment 418 374 NOP  <||@
  Comment 419 376 rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 422 380 JUMP ~outgoingValues: [] destination: B18 -> B16  <||@
  Comment 424 block B21 null  <||@
  Comment 424 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 440 NOP  <||@
  Comment 425 442 NOP  <||@
  Comment 426 444 NOP  <||@
  Comment 427 446 JUMP ~outgoingValues: [] destination: B21 -> B30  <||@
  Comment 427 block B30 null  <||@
  Comment 427 606 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 427 608 NOP  <||@
  Comment 428 610 NOP  <||@
  Comment 429 612 NOP  <||@
  Comment 430 614 NOP  <||@
  Comment 431 616 NOP  <||@
  Comment 432 618 NOP  <||@
  Comment 433 620 NOP  <||@
  Comment 434 622 NOP  <||@
  Comment 435 624 rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 437 626 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 446 POLL_RETURN_FAR  <||@
  Comment 463 block B8 null  <||@
  Comment 463 214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 463 216 NOP  <||@
  Comment 464 218 NOP  <||@
  Comment 465 220 NOP  <||@
  Comment 466 222 NOP  <||@
  Comment 467 224 NOP  <||@
  Comment 468 226 NOP  <||@
  Comment 469 228 NOP  <||@
  Comment 470 230 NOP  <||@
  Comment 471 232 NOP  <||@
  Comment 472 234 NOP  <||@
  Comment 473 236 rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 477 238 rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD  <||@
  Comment 480 240 rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 482 242 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 485 244 rdx|QWORD = DEC value: rdx|QWORD size: QWORD  <||@
  Comment 488 246 r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 491 248 CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD  <||@
  Comment 500 block B9 null  <||@
  Comment 500 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 500 252 NOP  <||@
  Comment 501 254 NOP  <||@
  Comment 502 256 NOP  <||@
  Comment 503 258 NOP  <||@
  Comment 504 260 CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 513 block B10 null  <||@
  Comment 513 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 513 264 NOP  <||@
  Comment 514 266 NOP  <||@
  Comment 515 268 NOP  <||@
  Comment 516 270 JUMP ~outgoingValues: [] destination: B10 -> B14  <||@
  Comment 521 block B29 null  <||@
  Comment 521 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 521 598 NOP  <||@
  Comment 522 600 NOP  <||@
  Comment 523 602 NOP  <||@
  Comment 524 604 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 526 block B5 null  <||@
  Comment 526 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 526 130 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 530 132 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 535 134 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 540 136 r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 543 138 r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 546 140 NOP  <||@
  Comment 547 142 NOP  <||@
  Comment 548 144 NOP  <||@
  Comment 549 146 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 554 148 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 559 block B23 null  <||@
  Comment 559 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 559 472 NOP  <||@
  Comment 560 474 NOP  <||@
  Comment 561 476 NOP  <||@
  Comment 562 478 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 569 480 r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed]  <||@
  Comment 575 484 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 575 block B24 null  <||@
  Comment 575 486 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 575 300 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 580 488 NOP  <||@
  Comment 581 490 NOP  <||@
  Comment 582 492 NOP  <||@
  Comment 583 494 NOP  <||@
  Comment 584 496 NOP  <||@
  Comment 585 498 NOP  <||@
  Comment 586 500 NOP  <||@
  Comment 587 502 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 594 504 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 601 506 DEOPT info [bci:20, 3, 23]  <||@
  Comment 601 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 606 [stack:8, stack:16]at java.lang.String.indexOf(String.java:2461) [bci: 20, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |rax|DWORD  |   |  
  at java.lang.String.indexOf(String.java:2405) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.net.URI$Parser.scan(URI.java:3098) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2          |3                  |4          |5        
     locals:  |stack:56|QWORD[.]  |-  |rbp|DWORD  |stack:48|QWORD[.]  |rbx|DWORD  |r8|DWORD   <||@
  Comment 614 block B22 null  <||@
  Comment 614 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 614 450 NOP  <||@
  Comment 615 452 NOP  <||@
  Comment 616 454 NOP  <||@
  Comment 617 456 NOP  <||@
  Comment 618 458 NOP  <||@
  Comment 619 460 NOP  <||@
  Comment 620 462 NOP  <||@
  Comment 621 464 MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD  <||@
  Comment 632 466 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 643 468 DEOPT info [bci:3]  <||@
  Comment 643 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 648 [stack:8, stack:16]at java.net.URI$Parser.scan(URI.java:3096) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1  |2          |3                  |4          |5 
     locals:  |stack:56|QWORD[.]  |-  |rbp|DWORD  |stack:48|QWORD[.]  |rbx|DWORD  |-   <||@
  Comment 656 block B26 null  <||@
  Comment 656 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 656 532 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 661 534 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 666 536 NOP  <||@
  Comment 667 538 NOP  <||@
  Comment 668 540 NOP  <||@
  Comment 669 542 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 676 544 r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed]  <||@
  Comment 682 550 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 682 block B28 null  <||@
  Comment 682 574 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 682 568 r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 687 570 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 692 576 NOP  <||@
  Comment 693 578 NOP  <||@
  Comment 694 580 NOP  <||@
  Comment 695 582 NOP  <||@
  Comment 696 584 NOP  <||@
  Comment 697 586 NOP  <||@
  Comment 698 588 NOP  <||@
  Comment 699 590 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 706 592 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 713 594 DEOPT info [bci:0]  <||@
  Comment 713 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 718 [r8:0, r13:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0            |1          |2          |3             |4  |5 
     locals:  |r8|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 726 block B12 null  <||@
  Comment 726 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 290 NOP  <||@
  Comment 727 292 NOP  <||@
  Comment 728 294 NOP  <||@
  Comment 729 296 r11|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 736 298 r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4]  <||@
  Comment 742 302 JUMP ~outgoingValues: [] destination: B12 -> B24  <||@
  Comment 747 block B11 null  <||@
  Comment 747 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 747 274 NOP  <||@
  Comment 748 276 NOP  <||@
  Comment 749 278 NOP  <||@
  Comment 750 280 r11|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 757 282 r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4]  <||@
  Comment 763 286 JUMP ~outgoingValues: [] destination: B11 -> B24  <||@
  Comment 768 block B27 null  <||@
  Comment 768 552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 768 554 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 773 556 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 778 558 NOP  <||@
  Comment 779 560 NOP  <||@
  Comment 780 562 NOP  <||@
  Comment 781 564 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 788 566 r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4]  <||@
  Comment 794 572 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 796 block B25 null  <||@
  Comment 796 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 796 510 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 801 512 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 806 514 NOP  <||@
  Comment 807 516 NOP  <||@
  Comment 808 518 NOP  <||@
  Comment 809 520 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 816 522 r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed]  <||@
  Comment 822 528 JUMP ~outgoingValues: [] destination: B25 -> B28  <||@
  Comment 832 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 857 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 885 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 890 [rsi:0, r11:0, r13:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 920 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 925 [r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 955 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 960 [r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 990 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 995 [rdx:0, r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 1003 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1003 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1009 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1009 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10839[java.net.URI$Parser.scan(int, int, String)]"
  method "HotSpotCompilation-10839[java.net.URI$Parser.scan(int, int, String)]"
  date 1724269730545
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad8c520 448b560849bc0000002b787f00004d03d44d33e4493bc20f85438b9ffe66669089842400c0feff4883ec389041817f20000000000f85010300009090909090909090909048896c24304c8bde8bda8be94d8be83beb0f8eae0100009090909090909090418b7314448b34f5140000000fbe34f510000000468b14f50c000000443bd30f867802000090909090909090418b5514410fbe4d108b3cd50c0000004084f60f85e80100009090909084c90f856802000090909090909090908bf3420fb644f61048c1e203488954241885ff0f84390100004c896c24104c895c24089090909090909090909090488bf248c7c2100000008bcf41b800000000448bc889442424448bdf458beae8d2c8b4fe90909090908bf3ffc63bee0f8fb00000009090909090909085c00f8d010100009090908bde660f1f84000000000066666690488b542418909090903beb0f8e570000009090909090448beb41ffc54585db0f843b00000090909090909090909090909090460fb64cf310488bf248c7c210000000418bcb41b800000000e850c8b4fe85c00f8dce000000909090418bddeba0909090418bddeb9890909090909090909090908bc3488b6c24304883c438493ba7500400000f8780010000c5f877c3909090909090909090908bd52bd64863d28bce4803d148ffca458bd54c3bd20f86e200000090909090443bee0f86ea000000909090e919ffffff909090eb9d894424244c896c24104c895c2408448bdf458bea909090b8ffffffffe9dffeffff90909049c7c31400000041baed07ffff448b44242490909090909090458997840400004d899f90040000e8fce99ffe0f1f8400000000009090909090909041c78784040000ed03ffff49c7879004000014000000e8d2e99ffe0f1f8400000000004c896c24104c895c240890909049c7c39402000041baed0fffff4c8b6c24104c8b44240890909090909090458997840400004d899f90040000e88ce99ffe0f1f84000000000090909049c7c3180a000041bae452ffffe954ffffff90909049c7c3180a000041bae452ffffe93fffffff4c896c24104c895c240890909049c7c30000000041bae46affffeb8e4c896c24104c895c240890909049c7c31405000041baed0bffffe96fffffff48896c2430e8bbe99dfee9f0fcfffff4488d0d6cfeffff49898f68040000e982f79ffef441c78784040000f577ffff49c7879004000000000000e8e0e89ffe0f1f84000000000041c78784040000f56fffff49c7879004000000000000e8bde89ffe0f1f84000000000041c78784040000f55fffff49c7879004000000000000e89ae89ffe0f1f84000000000041c78784040000f557ffff49c7879004000000000000e877e89ffe0f1f840000000000e8f089b3fef4e80ae69ffef4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@26bb6bb1 slotKind: QWORD  <||@
  Comment 73 26 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 76 28 rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 78 30 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 80 32 r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 83 34 CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9444898942815649 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: DWORD  <||@
  Comment 91 block B1 null  <||@
  Comment 91 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 91 38 NOP  <||@
  Comment 92 40 NOP  <||@
  Comment 93 42 NOP  <||@
  Comment 94 44 NOP  <||@
  Comment 95 46 NOP  <||@
  Comment 96 48 NOP  <||@
  Comment 97 50 NOP  <||@
  Comment 98 52 NOP  <||@
  Comment 99 54 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 103 56 r14|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 103 [rsi:0, r11:0, r13:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 58 rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 119 60 r10|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 119 [r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 119 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 127 62 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B27 size: DWORD  <||@
  Comment 136 block B2 null  <||@
  Comment 136 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 136 66 NOP  <||@
  Comment 137 68 NOP  <||@
  Comment 138 70 NOP  <||@
  Comment 139 72 NOP  <||@
  Comment 140 74 NOP  <||@
  Comment 141 76 NOP  <||@
  Comment 142 78 NOP  <||@
  Comment 143 80 rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 143 [r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 143 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 147 82 rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 152 84 rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 152 [rdx:0, r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 152 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 159 86 TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B26  <||@
  Comment 168 block B3 null  <||@
  Comment 168 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 168 90 NOP  <||@
  Comment 169 92 NOP  <||@
  Comment 170 94 NOP  <||@
  Comment 171 96 NOP  <||@
  Comment 172 98 TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B25  <||@
  Comment 180 block B4 null  <||@
  Comment 180 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 180 102 NOP  <||@
  Comment 181 104 NOP  <||@
  Comment 182 106 NOP  <||@
  Comment 183 108 NOP  <||@
  Comment 184 110 NOP  <||@
  Comment 185 112 NOP  <||@
  Comment 186 114 NOP  <||@
  Comment 187 116 NOP  <||@
  Comment 188 118 rsi|QWORD = MOV value: rbx|DWORD size: DWORD  <||@
  Comment 190 120 rax|DWORD = MOVZXB input: [rsi|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 196 122 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4dc77b79 encoding: base: 0 shift: 3  <||@
  Comment 200 124 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 205 126 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 213 block B6 null  <||@
  Comment 213 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 213 152 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 218 154 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 223 156 NOP  <||@
  Comment 224 158 NOP  <||@
  Comment 225 160 NOP  <||@
  Comment 226 162 NOP  <||@
  Comment 227 164 NOP  <||@
  Comment 228 166 NOP  <||@
  Comment 229 168 NOP  <||@
  Comment 230 170 NOP  <||@
  Comment 231 172 NOP  <||@
  Comment 232 174 NOP  <||@
  Comment 233 176 NOP  <||@
  Comment 234 178 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 237 180 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 244 182 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 246 184 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 252 186 r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 255 188 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 259 190 r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 262 192 r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 265 194 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 265 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 270 196 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 270 block B7 null  <||@
  Comment 270 198 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 270 200 NOP  <||@
  Comment 271 202 NOP  <||@
  Comment 272 204 NOP  <||@
  Comment 273 206 NOP  <||@
  Comment 274 208 NOP  <||@
  Comment 275 210 rsi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 279 212 CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 size: DWORD  <||@
  Comment 287 block B13 null  <||@
  Comment 287 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 287 306 NOP  <||@
  Comment 288 308 NOP  <||@
  Comment 289 310 NOP  <||@
  Comment 290 312 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 290 block B14 null  <||@
  Comment 290 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 290 316 NOP  <||@
  Comment 291 318 NOP  <||@
  Comment 292 320 NOP  <||@
  Comment 293 322 NOP  <||@
  Comment 294 324 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B23 size: DWORD  <||@
  Comment 302 block B15 null  <||@
  Comment 302 326 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 302 328 NOP  <||@
  Comment 303 330 NOP  <||@
  Comment 304 332 NOP  <||@
  Comment 305 334 rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 307 338 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 307 block B16 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 307 340 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 320 336 rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 325 342 NOP  <||@
  Comment 326 344 NOP  <||@
  Comment 327 346 NOP  <||@
  Comment 328 348 NOP  <||@
  Comment 329 350 CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.941227422278923 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD  <||@
  Comment 337 block B17 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 337 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 337 354 NOP  <||@
  Comment 338 356 NOP  <||@
  Comment 339 358 NOP  <||@
  Comment 340 360 NOP  <||@
  Comment 341 362 NOP  <||@
  Comment 342 364 r13|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 348 366 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 357 block B19 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 357 382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 357 384 NOP  <||@
  Comment 358 386 NOP  <||@
  Comment 359 388 NOP  <||@
  Comment 360 390 NOP  <||@
  Comment 361 392 NOP  <||@
  Comment 362 394 NOP  <||@
  Comment 363 396 NOP  <||@
  Comment 364 398 NOP  <||@
  Comment 365 400 NOP  <||@
  Comment 366 402 NOP  <||@
  Comment 367 404 NOP  <||@
  Comment 368 406 NOP  <||@
  Comment 369 408 NOP  <||@
  Comment 370 410 r9|DWORD = MOVZXB input: [rbx|DWORD + r14|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 376 412 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 379 414 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 386 416 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 389 418 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 395 420 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 395 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 400 422 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B22 size: DWORD  <||@
  Comment 408 block B20 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 408 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 426 NOP  <||@
  Comment 409 428 NOP  <||@
  Comment 410 430 NOP  <||@
  Comment 411 432 rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 414 436 JUMP ~outgoingValues: [] destination: B20 -> B16  <||@
  Comment 416 block B18 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 416 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 416 370 NOP  <||@
  Comment 417 372 NOP  <||@
  Comment 418 374 NOP  <||@
  Comment 419 376 rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 422 380 JUMP ~outgoingValues: [] destination: B18 -> B16  <||@
  Comment 424 block B21 null  <||@
  Comment 424 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 440 NOP  <||@
  Comment 425 442 NOP  <||@
  Comment 426 444 NOP  <||@
  Comment 427 446 JUMP ~outgoingValues: [] destination: B21 -> B30  <||@
  Comment 427 block B30 null  <||@
  Comment 427 606 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 427 608 NOP  <||@
  Comment 428 610 NOP  <||@
  Comment 429 612 NOP  <||@
  Comment 430 614 NOP  <||@
  Comment 431 616 NOP  <||@
  Comment 432 618 NOP  <||@
  Comment 433 620 NOP  <||@
  Comment 434 622 NOP  <||@
  Comment 435 624 rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 437 626 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 446 POLL_RETURN_FAR  <||@
  Comment 463 block B8 null  <||@
  Comment 463 214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 463 216 NOP  <||@
  Comment 464 218 NOP  <||@
  Comment 465 220 NOP  <||@
  Comment 466 222 NOP  <||@
  Comment 467 224 NOP  <||@
  Comment 468 226 NOP  <||@
  Comment 469 228 NOP  <||@
  Comment 470 230 NOP  <||@
  Comment 471 232 NOP  <||@
  Comment 472 234 NOP  <||@
  Comment 473 236 rdx|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 477 238 rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD  <||@
  Comment 480 240 rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 482 242 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 485 244 rdx|QWORD = DEC value: rdx|QWORD size: QWORD  <||@
  Comment 488 246 r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 491 248 CMPBRANCH (x: r10|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD  <||@
  Comment 500 block B9 null  <||@
  Comment 500 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 500 252 NOP  <||@
  Comment 501 254 NOP  <||@
  Comment 502 256 NOP  <||@
  Comment 503 258 NOP  <||@
  Comment 504 260 CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 513 block B10 null  <||@
  Comment 513 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 513 264 NOP  <||@
  Comment 514 266 NOP  <||@
  Comment 515 268 NOP  <||@
  Comment 516 270 JUMP ~outgoingValues: [] destination: B10 -> B14  <||@
  Comment 521 block B29 null  <||@
  Comment 521 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 521 598 NOP  <||@
  Comment 522 600 NOP  <||@
  Comment 523 602 NOP  <||@
  Comment 524 604 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 526 block B5 null  <||@
  Comment 526 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 526 130 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 530 132 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 535 134 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 540 136 r11|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 543 138 r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 546 140 NOP  <||@
  Comment 547 142 NOP  <||@
  Comment 548 144 NOP  <||@
  Comment 549 146 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 554 148 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 559 block B23 null  <||@
  Comment 559 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 559 472 NOP  <||@
  Comment 560 474 NOP  <||@
  Comment 561 476 NOP  <||@
  Comment 562 478 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 569 480 r10|DWORD = MOVE input: int[-63507|0xffffffffffff07ed]  <||@
  Comment 575 484 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 575 block B24 null  <||@
  Comment 575 486 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 575 300 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 580 488 NOP  <||@
  Comment 581 490 NOP  <||@
  Comment 582 492 NOP  <||@
  Comment 583 494 NOP  <||@
  Comment 584 496 NOP  <||@
  Comment 585 498 NOP  <||@
  Comment 586 500 NOP  <||@
  Comment 587 502 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 594 504 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 601 506 DEOPT info [bci:20, 3, 23]  <||@
  Comment 601 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 606 [stack:8, stack:16]at java.lang.String.indexOf(String.java:2461) [bci: 20, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |rax|DWORD  |   |  
  at java.lang.String.indexOf(String.java:2405) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.net.URI$Parser.scan(URI.java:3098) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2          |3                  |4          |5        
     locals:  |stack:56|QWORD[.]  |-  |rbp|DWORD  |stack:48|QWORD[.]  |rbx|DWORD  |r8|DWORD   <||@
  Comment 614 block B22 null  <||@
  Comment 614 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 614 450 NOP  <||@
  Comment 615 452 NOP  <||@
  Comment 616 454 NOP  <||@
  Comment 617 456 NOP  <||@
  Comment 618 458 NOP  <||@
  Comment 619 460 NOP  <||@
  Comment 620 462 NOP  <||@
  Comment 621 464 MOV x: [r15|QWORD + 1156] y: -64531 size: DWORD  <||@
  Comment 632 466 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 643 468 DEOPT info [bci:3]  <||@
  Comment 643 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 648 [stack:8, stack:16]at java.net.URI$Parser.scan(URI.java:3096) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1  |2          |3                  |4          |5 
     locals:  |stack:56|QWORD[.]  |-  |rbp|DWORD  |stack:48|QWORD[.]  |rbx|DWORD  |-   <||@
  Comment 656 block B26 null  <||@
  Comment 656 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 656 532 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 661 534 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 666 536 NOP  <||@
  Comment 667 538 NOP  <||@
  Comment 668 540 NOP  <||@
  Comment 669 542 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 676 544 r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed]  <||@
  Comment 682 550 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 682 block B28 null  <||@
  Comment 682 574 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 682 568 r13|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 687 570 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 692 576 NOP  <||@
  Comment 693 578 NOP  <||@
  Comment 694 580 NOP  <||@
  Comment 695 582 NOP  <||@
  Comment 696 584 NOP  <||@
  Comment 697 586 NOP  <||@
  Comment 698 588 NOP  <||@
  Comment 699 590 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 706 592 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 713 594 DEOPT info [bci:0]  <||@
  Comment 713 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 718 [r8:0, r13:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0            |1          |2          |3             |4  |5 
     locals:  |r8|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 726 block B12 null  <||@
  Comment 726 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 290 NOP  <||@
  Comment 727 292 NOP  <||@
  Comment 728 294 NOP  <||@
  Comment 729 296 r11|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 736 298 r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4]  <||@
  Comment 742 302 JUMP ~outgoingValues: [] destination: B12 -> B24  <||@
  Comment 747 block B11 null  <||@
  Comment 747 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 747 274 NOP  <||@
  Comment 748 276 NOP  <||@
  Comment 749 278 NOP  <||@
  Comment 750 280 r11|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 757 282 r10|DWORD = MOVE input: int[-44316|0xffffffffffff52e4]  <||@
  Comment 763 286 JUMP ~outgoingValues: [] destination: B11 -> B24  <||@
  Comment 768 block B27 null  <||@
  Comment 768 552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 768 554 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 773 556 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 778 558 NOP  <||@
  Comment 779 560 NOP  <||@
  Comment 780 562 NOP  <||@
  Comment 781 564 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 788 566 r10|DWORD = MOVE input: int[-38172|0xffffffffffff6ae4]  <||@
  Comment 794 572 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 796 block B25 null  <||@
  Comment 796 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 796 510 stack:48|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 801 512 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 806 514 NOP  <||@
  Comment 807 516 NOP  <||@
  Comment 808 518 NOP  <||@
  Comment 809 520 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 816 522 r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed]  <||@
  Comment 822 528 JUMP ~outgoingValues: [] destination: B25 -> B28  <||@
  Comment 832 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 857 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 885 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 890 [rsi:0, r11:0, r13:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 920 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 925 [r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 955 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 960 [r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 990 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 995 [rdx:0, r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3095) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4  |5 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 1003 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1003 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1009 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1009 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
