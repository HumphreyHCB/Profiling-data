begin_compilation
  name " HotSpotCompilation-4624[java.io.BufferedWriter.flushBuffer()]"
  method "HotSpotCompilation-4624[java.io.BufferedWriter.flushBuffer()]"
  date 1724269731820
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a843 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a843  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.BufferedWriter
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v903 ?329 ?14 v908 v907 v909 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a843 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Writer.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v903 
lastLocationAccess: - 
=== Succesors ===
next: v844 
=== Usages ===
a422 v904 v933 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v903 lastLocationAccess: - #next: v844  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
sourceFile: BufferedWriter.java
sourceLine: 159
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v938 a846 v895 v844 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a843 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-173075|0xfffffffffffd5bed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 6]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v933 
lastLocationAccess: - 
=== Succesors ===
next: v679 
=== Usages ===
v884 
=== Predecessor ===
a843 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v933 lastLocationAccess: - #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 6]
rawvalue: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v884 v885 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v844 
y: v883 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v844 y: v883  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v884 
=== Succesors ===
trueSuccessor: v677 
falseSuccessor: v876 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v884 #trueSuccessor: v677 #falseSuccessor: v876  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a845 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a845  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a843 
=== Succesors ===
=== Usages ===
a845 a869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a845 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v904 
lastLocationAccess: - 
=== Succesors ===
next: a846 
=== Usages ===
v905 
=== Predecessor ===
v677 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v904 lastLocationAccess: - #next: a846  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a845 
=== Succesors ===
=== Usages ===
a846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a846 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-109067|0xfffffffffffe55f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v905 
lastLocationAccess: - 
=== Succesors ===
next: v895 
=== Usages ===
a429 v906 v932 v936 
=== Predecessor ===
a845 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v905 lastLocationAccess: - #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a846 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: v936 
=== Succesors ===
next: j847 
=== Usages ===
=== Predecessor ===
a846 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: v936 #next: j847  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j87 
index: - 
=== Succesors ===
=== Usages ===
j847 j860 j866 j872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j87 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j847 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: a848 
=== Usages ===
v899 
=== Predecessor ===
v895 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: a848  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j847 
index: - 
=== Succesors ===
=== Usages ===
a848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a848 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v899 
lastLocationAccess: - 
=== Succesors ===
next: i432 
=== Usages ===
v105 a560 v809 
=== Predecessor ===
j847 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v899 lastLocationAccess: - #next: i432  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a846 
=== Succesors ===
=== Usages ===
i432 i556 v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a846  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 v311 v72 v559 v559 v559 i432 v97 v113 v122 v507 ?157 v380 v193 v516 v516 v516 i463 v212 v228 v237 v473 v249 ?251 v395 ?310 ?394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?255 v262 v558 ?732 v559 i432 i112 ?306 ?734 ?336 v344 v515 ?390 v516 i463 i227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
lastLocationAccess: - 
expectedValue: i47 
newValue: i37 
stateAfter: - 
=== Succesors ===
next: v100 
=== Usages ===
v97 
=== Predecessor ===
a848 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v906 lastLocationAccess: - expectedValue: i47 newValue: i37 stateAfter: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i432 
y: i47 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i432 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a429 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a846 
=== Succesors ===
=== Usages ===
v809 ?118 v558 ?70 ?732 v559 ?111 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a846  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a846 
=== Succesors ===
=== Usages ===
a849 v561 v807 v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a846  <|@  <|@
f <@~|@floating>@ <|@
tid a422 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 1]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a843 
=== Succesors ===
=== Usages ===
?14 ?14 ?330 ?31 ?38 ?26 ?22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a843  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
sourceFile: BufferedWriter.java
sourceLine: 161
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a422 a422 
=== Succesors ===
=== Usages ===
?22 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a422 a422  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?14 
values: a422 
=== Succesors ===
=== Usages ===
?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?14 values: a422  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?22 
=== Succesors ===
=== Usages ===
?70 ?84 ?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?22  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 v516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j77 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 v516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i432 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a849 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a849 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
lastLocationAccess: - 
=== Succesors ===
next: v108 
=== Usages ===
a555 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v932 lastLocationAccess: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a555 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a849 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a849  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a555 
y: a848 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a555 y: a848  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
a849 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v107 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i556 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i556 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
lastLocationAccess: - 
=== Succesors ===
next: v729 
=== Usages ===
i112 ?111 
=== Predecessor ===
v107 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v906 lastLocationAccess: - #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i32
=== Inputs ===
x: i556 
y: i37 
=== Succesors ===
=== Usages ===
v113 v557 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i556 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i112 
y: i47 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i112 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v728 
=== Usages ===
=== Predecessor ===
i556 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v727 #falseSuccessor: v728  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: a429 
=== Succesors ===
=== Usages ===
?111 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: a429  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: i556 a429 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: i556 a429  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?111 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
lastLocationAccess: - 
value: i112 
stateAfter: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v906 lastLocationAccess: - value: i112 stateAfter: - #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i69 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i69  <|@  <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a429 i37 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a429 i37  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: a429 
=== Succesors ===
=== Usages ===
?732 ?733 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: a429  <|@  <|@
tid ?732 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?70 
values: a429 i37 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a429 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v558 
stateDuring: ?732 
=== Succesors ===
next: v75 
=== Usages ===
v72 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v558 stateDuring: ?732 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i47 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i69 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.7081922816519972
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
i69 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v74 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i79 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i79  <|@  <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a429 a76 i37 i47 i47 i47 j77 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a429 a76 i37 i47 i47 i47 j77  <|@  <|@
tid ?733 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?70 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v559 
stateDuring: ?733 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v559 stateDuring: ?733 #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
i79 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
precise: true
stamp: void
=== Inputs ===
address: v932 
value: - 
stateBefore: - 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v932 value: - stateBefore: - #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid a560 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a848 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
lastLocationAccess: - 
value: a560 
stateAfter: - 
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v932 lastLocationAccess: - value: a560 stateAfter: - #next: v809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
precise: false
stamp: void
=== Inputs ===
address: v932 
value: a848 
object: a429 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v932 value: a848 object: a429 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v83 v86 v119 
=== Succesors ===
next: a850 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v83 v86 v119 #next: a850  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a850 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.Writer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedWriter.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 1]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.io.Writer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v907 
lastLocationAccess: - 
=== Succesors ===
next: v851 
=== Usages ===
v934 v910 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v907 lastLocationAccess: - #next: v851  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
=== Succesors ===
=== Usages ===
v763 v851 a854 i856 a859 v897 v857 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a850 
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-174099|0xfffffffffffd57ed]
deoptSpeculation: long[1940|0x794]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v934 
lastLocationAccess: - 
=== Succesors ===
next: i852 
=== Usages ===
v842 
=== Predecessor ===
a850 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v934 lastLocationAccess: - #next: i852  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i852 v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i852 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedWriter.nextChar
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:176) [bci: 5]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v908 
lastLocationAccess: - 
=== Succesors ===
next: v125 
=== Usages ===
v122 ?157 v237 v239 v473 ?251 
=== Predecessor ===
v851 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v908 lastLocationAccess: - #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:176) [bci: 8]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i852 
y: i47 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i852 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?394 ?310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?394 ?310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i392 i308 ?310 ?394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 i360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a570 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v509 v552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:176) [bci: 8]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.01815860517284762
stamp: void
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
i852 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v124 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:177) [bci: 11]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 12]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v851 
y: v841 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v851 y: v841  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v627 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v625 #falseSuccessor: v627  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a853 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a853  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a850 
=== Succesors ===
=== Usages ===
a853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a853 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.StreamEncoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OutputStreamWriter.se
memoryOrder: PLAIN
nodeSourcePosition: at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 1]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n# sun.nio.cs.StreamEncoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v910 
lastLocationAccess: - 
=== Succesors ===
next: a854 
=== Usages ===
a449 v911 v915 
=== Predecessor ===
v625 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v910 lastLocationAccess: - #next: a854  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a853 
=== Succesors ===
=== Usages ===
a854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a854 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: int[-115211|0xfffffffffffe3df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Writer.lock
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 1]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.lang.Object
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v911 
lastLocationAccess: - 
=== Succesors ===
next: a855 
=== Usages ===
a453 v912 v935 
=== Predecessor ===
a853 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v911 lastLocationAccess: - #next: a855  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a855 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedWriter.cb
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 17]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n# char[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
lastLocationAccess: - 
=== Succesors ===
next: i856 
=== Usages ===
a443 v916 
=== Predecessor ===
a854 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 lastLocationAccess: - #next: i856  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a855 
=== Succesors ===
=== Usages ===
i856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i856 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-120075|0xfffffffffffe2af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 10]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v916 
lastLocationAccess: - 
=== Succesors ===
next: v857 
=== Usages ===
v239 
=== Predecessor ===
a855 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v916 lastLocationAccess: - #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a854 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-178195|0xfffffffffffd47ed]
deoptSpeculation: long[3220|0xc94]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v935 
lastLocationAccess: - 
=== Succesors ===
next: v699 
=== Usages ===
v885 
=== Predecessor ===
i856 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v935 lastLocationAccess: - #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v857 
y: v883 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v857 y: v883  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 11]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v697 #falseSuccessor: v880  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 14]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a858 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a858  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a854 
=== Succesors ===
=== Usages ===
a858 a863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a858 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v912 
lastLocationAccess: - 
=== Succesors ===
next: a859 
=== Usages ===
v913 
=== Predecessor ===
v697 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v912 lastLocationAccess: - #next: a859  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a858 
=== Succesors ===
=== Usages ===
a859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a859 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-117003|0xfffffffffffe36f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v913 
lastLocationAccess: - 
=== Succesors ===
next: v897 
=== Usages ===
a460 v914 v924 v937 
=== Predecessor ===
a858 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v913 lastLocationAccess: - #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a859 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?84 
object: v937 
=== Succesors ===
next: j860 
=== Usages ===
=== Predecessor ===
a859 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?84 object: v937 #next: j860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j860 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: a861 
=== Usages ===
v900 
=== Predecessor ===
v897 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: a861  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j860 
index: - 
=== Succesors ===
=== Usages ===
a861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j860 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a861 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v900 
lastLocationAccess: - 
=== Succesors ===
next: i463 
=== Usages ===
v220 a517 v805 
=== Predecessor ===
j860 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v900 lastLocationAccess: - #next: i463  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a859 
=== Succesors ===
=== Usages ===
i463 i513 v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v914 
lastLocationAccess: - 
expectedValue: i47 
newValue: i37 
stateAfter: - 
=== Succesors ===
next: v215 
=== Usages ===
v212 
=== Predecessor ===
a861 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v914 lastLocationAccess: - expectedValue: i47 newValue: i37 stateAfter: - #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i463 
y: i47 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i463 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a460 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a859 
=== Succesors ===
=== Usages ===
v805 v515 ?191 ?734 v516 ?233 ?226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a859  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a859 
=== Succesors ===
=== Usages ===
a862 v518 v803 v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a859  <|@  <|@
f <@~|@floating>@ <|@
tid a443 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 17]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a855 
=== Succesors ===
=== Usages ===
?157 ?251 v473 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a855  <|@  <|@
f <@~|@floating>@ <|@
tid a453 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 1]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a854 
=== Succesors ===
=== Usages ===
?164 ?157 ?162 ?252 ?169 ?157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a854  <|@  <|@
f <@~|@floating>@ <|@
tid a449 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 1]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a# sun.nio.cs.StreamEncoder
=== Inputs ===
value: a853 
=== Succesors ===
=== Usages ===
?251 ?248 ?157 v473 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a853  <|@  <|@
tid ?330 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
sourceFile: BufferedWriter.java
sourceLine: 163
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a422 
=== Succesors ===
=== Usages ===
?329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a422  <|@  <|@
tid ?329 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedWriter.implFlushBuffer()>
localsSize: 1
locksSize: 0
sourceFile: BufferedWriter.java
sourceLine: 178
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?330 
values: a1 
=== Succesors ===
=== Usages ===
?328 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?330 values: a1  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<OutputStreamWriter.write(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: OutputStreamWriter.java
sourceLine: 219
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?329 
=== Succesors ===
=== Usages ===
?157 ?164 ?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?329  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v214 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
i463 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v214 #falseSuccessor: v213  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a862 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a862 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
a512 
=== Predecessor ===
v214 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid a512 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a862 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a862  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a512 
y: a861 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a512 y: a861  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: StreamEncoder.java
sourceLine: 137
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: a449 a443 i47 i852 a453 a453 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: a449 a443 i47 i852 a453 a453  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?157 
values: a453 
=== Succesors ===
=== Usages ===
?235 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?157 values: a453  <|@  <|@
tid ?235 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?162 
=== Succesors ===
=== Usages ===
?191 ?233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?162  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v220 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
a862 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v220 #trueSuccessor: v222 #falseSuccessor: v221  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i513 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i513 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v914 
lastLocationAccess: - 
=== Succesors ===
next: v720 
=== Usages ===
i227 ?226 
=== Predecessor ===
v222 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v914 lastLocationAccess: - #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
=== Inputs ===
x: i513 
y: i37 
=== Succesors ===
=== Usages ===
v228 v514 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i513 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i227 
y: i47 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i227 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v718 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
i513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v718 #falseSuccessor: v719  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
tid ?233 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?235 
values: a460 
=== Succesors ===
=== Usages ===
?226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?235 values: a460  <|@  <|@
tid ?226 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?233 
values: i513 a460 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?233 values: i513 a460  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?226 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v914 
lastLocationAccess: - 
value: i227 
stateAfter: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v914 lastLocationAccess: - value: i227 stateAfter: - #next: v234  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i190 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i190  <|@  <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a460 i37 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a460 i37  <|@  <|@
tid ?191 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?235 
values: a460 
=== Succesors ===
=== Usages ===
?734 ?735 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?235 values: a460  <|@  <|@
tid ?734 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?191 
values: a460 i37 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?191 values: a460 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v515 
stateDuring: ?734 
=== Succesors ===
next: v196 
=== Usages ===
v193 
=== Predecessor ===
v221 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v515 stateDuring: ?734 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i47 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i190 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.7081922816519972
stamp: void
=== Inputs ===
condition: v193 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
i190 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v193 #trueSuccessor: v195 #falseSuccessor: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i198 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i198  <|@  <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a460 a76 i37 i47 i47 i47 j77 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a460 a76 i37 i47 i47 i47 j77  <|@  <|@
tid ?735 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?191 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v516 
stateDuring: ?735 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v516 stateDuring: ?735 #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
i198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v803 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
precise: true
stamp: void
=== Inputs ===
address: v924 
value: - 
stateBefore: - 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v924 value: - stateBefore: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a861 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
value: a517 
stateAfter: - 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - value: a517 stateAfter: - #next: v805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
precise: false
stamp: void
=== Inputs ===
address: v924 
value: a861 
object: a460 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v924 value: a861 object: a460 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 v204 v234 
=== Succesors ===
next: i466 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 v204 v234 #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
displacement: 26
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a853 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.closed
memoryOrder: VOLATILE
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
i467 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v915 lastLocationAccess: - #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i466 
=== Succesors ===
=== Usages ===
v249 ?248 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i467 
y: i47 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i467 y: i47  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 139
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: - - - - - a453 
=== Succesors ===
=== Usages ===
?245 ?251 ?736 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: - - - - - a453  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v701 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
i466 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v701 #falseSuccessor: v702  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:53) [bci: 17]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i852 
y: i47 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i852 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid j789 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j791 j791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v706 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v705 #falseSuccessor: v706  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid i788 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -180243
stableDimension: 0
stamp: i32 [-180243]
stampKind: i32
value: int[-180243|0xfffffffffffd3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v705 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 18]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i852 
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i856 y: i852  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v709 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v709 #falseSuccessor: v710  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid i797 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -181267
stableDimension: 0
stamp: i32 [-181267]
stampKind: i32
value: int[-181267|0xfffffffffffd3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v709 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 26]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)>
=== Inputs ===
arguments: a449 a443 i47 i852 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a449 a443 i47 i852  <|@  <|@
tid ?736 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 158
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
bci: 49
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implWrite
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v473 
stateDuring: ?736 
=== Succesors ===
next: a863 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v473 stateDuring: ?736 #next: a863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a863 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v912 
lastLocationAccess: - 
=== Succesors ===
next: a864 
=== Usages ===
a475 v917 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v912 lastLocationAccess: - #next: a864  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: return
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: StreamEncoder.java
sourceLine: 159
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
=== Succesors ===
=== Usages ===
i482 a864 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a863 
=== Succesors ===
=== Usages ===
a864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a864 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-121867|0xfffffffffffe23f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?245 
guard: - 
address: v917 
lastLocationAccess: - 
=== Succesors ===
next: i482 
=== Usages ===
a479 v918 v919 v920 
=== Predecessor ===
a863 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?245 guard: - address: v917 lastLocationAccess: - #next: i482  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a864 
=== Succesors ===
=== Usages ===
i482 v486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-122891|0xfffffffffffe1ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?245 
guard: - 
address: v918 
lastLocationAccess: - 
=== Succesors ===
next: a865 
=== Usages ===
i278 v262 ?255 
=== Predecessor ===
a864 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?245 guard: - address: v918 lastLocationAccess: - #next: a865  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a864 
=== Succesors ===
=== Usages ===
a865 v509 v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a865 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
=== Succesors ===
next: j866 
=== Usages ===
a485 
=== Predecessor ===
i482 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - #next: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j866 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: a867 
=== Usages ===
v901 
=== Predecessor ===
a865 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: a867  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j866 
index: - 
=== Succesors ===
=== Usages ===
a867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a867 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v901 
lastLocationAccess: - 
=== Succesors ===
next: v715 
=== Usages ===
v260 
=== Predecessor ===
j866 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v901 lastLocationAccess: - #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid a485 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a865 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a865  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a485 
y: a867 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a485 y: a867  <|@  <|@
f <@~|@floating>@ <|@
tid a475 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a863 
=== Succesors ===
=== Usages ===
?179 ?173 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a863  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: StreamEncoder.java
sourceLine: 141
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: - - - - - a453 
=== Succesors ===
=== Usages ===
?169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: - - - - - a453  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?164 
values: a453 
=== Succesors ===
=== Usages ===
?173 ?179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?164 values: a453  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v713 
falseSuccessor: v714 
=== Usages ===
=== Predecessor ===
a867 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v713 #falseSuccessor: v714  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i482 
y: i37 
=== Succesors ===
=== Usages ===
v176 v266 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i482 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v262 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v262 #trueSuccessor: v265 #falseSuccessor: v264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
precise: true
stamp: void
=== Inputs ===
address: v919 
value: - 
stateBefore: - 
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v919 value: - stateBefore: - #next: v509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
value: a570 
stateAfter: - 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - value: a570 stateAfter: - #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
v264 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v270 v272 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v270 v272 #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
=== Inputs ===
x: i482 
y: i277 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i482 y: i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v918 
lastLocationAccess: - 
value: i278 
stateAfter: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v918 lastLocationAccess: - value: i278 stateAfter: - #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.8643527024712085
stamp: void
=== Inputs ===
condition: v262 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v262 #trueSuccessor: v174 #falseSuccessor: v175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a488 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a488  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a864 
=== Succesors ===
=== Usages ===
a488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a488 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v920 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
v921 v798 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v920 lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a488 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a488  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.9993015720569195
stamp: void
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
a488 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v282 #falseSuccessor: v281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a493 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a493  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a488 
=== Succesors ===
=== Usages ===
a493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a493 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
lastLocationAccess: - 
=== Succesors ===
next: v290 
=== Usages ===
a494 v799 v922 v923 
=== Predecessor ===
v281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 lastLocationAccess: - #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a493 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a493  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.8992113780371063
stamp: void
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
a493 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v289 #falseSuccessor: v288  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i498 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i498  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a493 
=== Succesors ===
=== Usages ===
i500 i501 i498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i498 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: v297 
=== Usages ===
v294 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i498 
y: i47 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i498 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
i498 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v296 #falseSuccessor: v295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
tid ?179 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
values: a475 
=== Succesors ===
=== Usages ===
?324 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169 values: a475  <|@  <|@
tid ?324 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?179 
=== Succesors ===
=== Usages ===
?303 ?737 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?179  <|@  <|@
f <@~|@floating>@ <|@
tid a494 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a493 
=== Succesors ===
=== Usages ===
?303 ?310 ?306 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a493  <|@  <|@
tid ?303 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?324 
values: - a494 
=== Succesors ===
=== Usages ===
?306 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?324 values: - a494  <|@  <|@
tid ?306 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?303 
values: a494 i37 
=== Succesors ===
=== Usages ===
?310 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?303 values: a494 i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 204
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v304 
=== Succesors ===
next: i500 
=== Usages ===
v312 v316 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v304 #next: i500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i500 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: i501 
=== Usages ===
i308 i501 ?310 
=== Predecessor ===
v305 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: i501  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i500 
y: i302 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i500 y: i302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
expectedValue: i500 
newValue: i308 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
v311 
=== Predecessor ===
i500 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - expectedValue: i500 newValue: i308 stateAfter: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i501 
y: i47 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i501 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
i501 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v317 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v661  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?306 
values: i47 a300 a494 j301 - i302 i500 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?306 values: i47 a300 a494 j301 - i302 i500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateBefore: ?310 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?310 #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v305 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v305 
=== Succesors ===
next: a868 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v305 #next: a868  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a493 
=== Succesors ===
=== Usages ===
a868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a868 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
a505 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid a505 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a868 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a868  <|@  <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a505 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a505  <|@  <|@
tid ?737 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?324 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v506 
stateDuring: ?737 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
a868 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v506 stateDuring: ?737 #next: v325  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v182 v184 v325 v326 v327 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v182 v184 v325 v326 v327 #next: v507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: BufferedWriter.nextChar
location: BufferedWriter.nextChar
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:179) [bci: 30]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v908 
lastLocationAccess: - 
value: i47 
stateAfter: - 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v908 lastLocationAccess: - value: i47 stateAfter: - #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v332 v333 
=== Succesors ===
next: a869 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v332 v333 #next: a869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a869 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v904 
lastLocationAccess: - 
=== Succesors ===
next: a870 
=== Usages ===
a520 v925 
=== Predecessor ===
v331 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v904 lastLocationAccess: - #next: a870  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: aload_2
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: BufferedWriter.java
sourceLine: 165
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a422 
=== Succesors ===
=== Usages ===
i527 a870 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a422  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a869 
=== Succesors ===
=== Usages ===
a870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a870 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-133387|0xfffffffffffdf6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v925 
lastLocationAccess: - 
=== Succesors ===
next: i527 
=== Usages ===
a524 v926 v927 v928 
=== Predecessor ===
a869 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v925 lastLocationAccess: - #next: i527  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a870 
=== Succesors ===
=== Usages ===
i527 v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i527 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-134411|0xfffffffffffdf2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v926 
lastLocationAccess: - 
=== Succesors ===
next: a871 
=== Usages ===
i360 v344 ?336 
=== Predecessor ===
a870 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v926 lastLocationAccess: - #next: a871  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a870 
=== Succesors ===
=== Usages ===
a871 v552 v806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a871 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
lastLocationAccess: - 
=== Succesors ===
next: j872 
=== Usages ===
a530 
=== Predecessor ===
i527 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v927 lastLocationAccess: - #next: j872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: a873 
=== Usages ===
v902 
=== Predecessor ===
a871 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: a873  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j872 
index: - 
=== Succesors ===
=== Usages ===
a873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j872 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a873 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v902 
lastLocationAccess: - 
=== Succesors ===
next: v724 
=== Usages ===
v342 
=== Predecessor ===
j872 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v902 lastLocationAccess: - #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid a530 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a871 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a871  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a530 
y: a873 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a530 y: a873  <|@  <|@
f <@~|@floating>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a869 
=== Succesors ===
=== Usages ===
?45 ?54 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a869  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: BufferedWriter.java
sourceLine: 165
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a422 
=== Succesors ===
=== Usages ===
?38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a422  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?31 
values: a422 
=== Succesors ===
=== Usages ===
?54 ?45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?31 values: a422  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v722 
falseSuccessor: v723 
=== Usages ===
=== Predecessor ===
a873 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v722 #falseSuccessor: v723  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i527 
y: i37 
=== Succesors ===
=== Usages ===
v51 v348 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i527 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v347 #falseSuccessor: v346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
precise: true
stamp: void
=== Inputs ===
address: v927 
value: - 
stateBefore: - 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v927 value: - stateBefore: - #next: v552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
lastLocationAccess: - 
value: a570 
stateAfter: - 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v927 lastLocationAccess: - value: a570 stateAfter: - #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v352 v354 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v352 v354 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32
=== Inputs ===
x: i527 
y: i277 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i527 y: i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v926 
lastLocationAccess: - 
value: i360 
stateAfter: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v926 lastLocationAccess: - value: i360 stateAfter: - #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.8643527024712085
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a533 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a870 
=== Succesors ===
=== Usages ===
a533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a533 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v928 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
v929 v800 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v928 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a533 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a533  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.9993015720569195
stamp: void
=== Inputs ===
condition: v800 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
a533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v800 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a538 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a538  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a533 
=== Succesors ===
=== Usages ===
a538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a538 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
a539 v801 v930 v931 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v929 lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a538 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a538  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.8992113780371063
stamp: void
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v371 
=== Usages ===
=== Predecessor ===
a538 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v375 #falseSuccessor: v371  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i543 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i543  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a538 
=== Succesors ===
=== Usages ===
i545 i546 i543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i543 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
v380 
=== Predecessor ===
v371 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v930 lastLocationAccess: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i543 
y: i47 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i543 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v380 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
i543 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v380 #trueSuccessor: v383 #falseSuccessor: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?38 
values: a520 
=== Succesors ===
=== Usages ===
?411 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?38 values: a520  <|@  <|@
tid ?411 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?54 
=== Succesors ===
=== Usages ===
?387 ?738 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?54  <|@  <|@
f <@~|@floating>@ <|@
tid a539 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a538 
=== Succesors ===
=== Usages ===
?387 ?394 ?390 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a538  <|@  <|@
tid ?387 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?411 
values: - a539 
=== Succesors ===
=== Usages ===
?390 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?411 values: - a539  <|@  <|@
tid ?390 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?387 
values: a539 i37 
=== Succesors ===
=== Usages ===
?394 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?387 values: a539 i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v388 
=== Succesors ===
next: i545 
=== Usages ===
v396 v400 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v388 #next: i545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i545 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
lastLocationAccess: - 
=== Succesors ===
next: i546 
=== Usages ===
i392 i546 ?394 
=== Predecessor ===
v389 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v930 lastLocationAccess: - #next: i546  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i545 
y: i302 
=== Succesors ===
=== Usages ===
i546 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i545 y: i302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
lastLocationAccess: - 
expectedValue: i545 
newValue: i392 
stateAfter: - 
=== Succesors ===
next: v402 
=== Usages ===
v395 
=== Predecessor ===
i545 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v930 lastLocationAccess: - expectedValue: i545 newValue: i392 stateAfter: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i546 
y: i47 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i546 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
i546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v401 #falseSuccessor: v396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
tid ?394 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?390 
values: i47 a300 a539 j301 - i302 i545 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?390 values: i47 a300 a539 j301 - i302 i545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
stateBefore: ?394 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?394 #next: v400  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
loopBegin: v389 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v389 
=== Succesors ===
next: a874 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v389 #next: a874  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a538 
=== Succesors ===
=== Usages ===
a874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a874 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
lastLocationAccess: - 
=== Succesors ===
next: v405 
=== Usages ===
a550 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 lastLocationAccess: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid a550 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a874 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a874  <|@  <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a550 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a550  <|@  <|@
tid ?738 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?411 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v551 
stateDuring: ?738 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
a874 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v551 stateDuring: ?738 #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v60 v62 v412 v413 v414 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v60 v62 v412 v413 v414 #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:172) [bci: 62]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?38 
values: a520 
=== Succesors ===
=== Usages ===
?361 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?38 values: a520  <|@  <|@
f <@~|@floating>@ <|@
tid a524 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a870 
=== Succesors ===
=== Usages ===
?361 ?336 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a870  <|@  <|@
tid ?361 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?45 
values: a524 
=== Succesors ===
=== Usages ===
?336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?45 values: a524  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?361 
values: i527 a524 i37 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?361 values: i527 a524 i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
reason: UnreachedCode
speculation: {0x0000000000006b94[index: 860, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?336 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
values: a475 
=== Succesors ===
=== Usages ===
?279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169 values: a475  <|@  <|@
f <@~|@floating>@ <|@
tid a479 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a864 
=== Succesors ===
=== Usages ===
?255 ?279 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a864  <|@  <|@
tid ?279 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a479 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a479  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?279 
values: i482 a479 i37 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?279 values: i482 a479 i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
reason: UnreachedCode
speculation: {0x0000000000006b94[index: 860, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid j795 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i794 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -179219
stableDimension: 0
stamp: i32 [-179219]
stampKind: i32
value: int[-179219|0xfffffffffffd43ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [-181267 - -179219] bits:1...1010xxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v786 
values: i788 i794 i797 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v786 values: i788 i794 i797  <|@  <|@
f <@~|@floating>@ <|@
tid j791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i64 [3860 - 5140] bits:0...0xx1xx00010100
valueDescription: i64
=== Inputs ===
merge: v786 
values: j789 j795 j789 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v786 values: j789 j795 j789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v787 v793 v796 
=== Succesors ===
next: v792 
=== Usages ===
i790 j791 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v787 v793 v796 #next: v792  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 151
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
values: a449 a443 i47 i852 
=== Succesors ===
=== Usages ===
?248 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252 values: a449 a443 i47 i852  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: ifeq
code: ResolvedJavaMethodBytecode<StreamEncoder.ensureOpen()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: StreamEncoder.java
sourceLine: 51
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?251 
values: i467 a449 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?251 values: i467 a449  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateBefore: ?248 
actionAndReason: i790 
speculation: j791 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?248 actionAndReason: i790 speculation: j791  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 11]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid j775 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -178195
stableDimension: 0
stamp: i32 [-178195]
stampKind: i32
value: int[-178195|0xfffffffffffd47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
v880 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -113971
stableDimension: 0
stamp: i32 [-113971]
stampKind: i32
value: int[-113971|0xfffffffffffe42cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [-178195 - -113971] bits:1...1xx01000x1x11x01101
valueDescription: i32
=== Inputs ===
merge: v757 
values: i767 i774 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v757 values: i767 i774  <|@  <|@
f <@~|@floating>@ <|@
tid j762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i64 [2580 - 3220] bits:0...01xx0x0010100
valueDescription: i64
=== Inputs ===
merge: v757 
values: j768 j775 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v757 values: j768 j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v766 v773 
=== Succesors ===
next: v763 
=== Usages ===
i761 j762 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v766 v773 #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateBefore: ?84 
actionAndReason: i761 
speculation: j762 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?84 actionAndReason: i761 speculation: j762  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 676
mayConvertToGuard: true
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xb937bae6]: UnreachedCode@6[HotSpotMethod<BufferedWriter.flushBuffer()>, 42]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a843 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a843  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.BufferedWriter
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v903 ?329 ?14 v908 v907 v909 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a843 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Writer.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v903 
lastLocationAccess: - 
=== Succesors ===
next: v844 
=== Usages ===
a422 v904 v933 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v903 lastLocationAccess: - #next: v844  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
sourceFile: BufferedWriter.java
sourceLine: 159
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v938 a846 v895 v844 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
result [v1|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a843 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-173075|0xfffffffffffd5bed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 6]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v933 
lastLocationAccess: - 
=== Succesors ===
next: v679 
=== Usages ===
v884 
=== Predecessor ===
a843 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v933 lastLocationAccess: - #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
result meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 6]
rawvalue: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v884 v885 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v844 
y: v883 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v844 y: v883  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v884 
=== Succesors ===
trueSuccessor: v677 
falseSuccessor: v876 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v884 #trueSuccessor: v677 #falseSuccessor: v876  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a845 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a845  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a843 
=== Succesors ===
=== Usages ===
a845 a869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a845 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v904 
lastLocationAccess: - 
=== Succesors ===
next: a846 
=== Usages ===
v905 
=== Predecessor ===
v677 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v904 lastLocationAccess: - #next: a846  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a845 
=== Succesors ===
=== Usages ===
a846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a846 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-109067|0xfffffffffffe55f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v905 
lastLocationAccess: - 
=== Succesors ===
next: v895 
=== Usages ===
a429 v906 v932 v936 
=== Predecessor ===
a845 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v905 lastLocationAccess: - #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
result [v3|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a846 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: v936 
=== Succesors ===
next: j847 
=== Usages ===
=== Predecessor ===
a846 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: v936 #next: j847  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
result [r15|QWORD + 896] <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j87 
index: - 
=== Succesors ===
=== Usages ===
j847 j860 j866 j872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j87 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j847 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: a848 
=== Usages ===
v899 
=== Predecessor ===
v895 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: a848  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
result [v4|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j847 
index: - 
=== Succesors ===
=== Usages ===
a848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a848 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v899 
lastLocationAccess: - 
=== Succesors ===
next: i432 
=== Usages ===
v105 a560 v809 
=== Predecessor ===
j847 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v899 lastLocationAccess: - #next: i432  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
result [v3|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a846 
=== Succesors ===
=== Usages ===
i432 i556 v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a846  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 v311 v72 v559 v559 v559 i432 v97 v113 v122 v507 ?157 v380 v193 v516 v516 v516 i463 v212 v228 v237 v473 v249 ?251 v395 ?310 ?394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?255 v262 v558 ?732 v559 i432 i112 ?306 ?734 ?336 v344 v515 ?390 v516 i463 i227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
lastLocationAccess: - 
expectedValue: i47 
newValue: i37 
stateAfter: - 
=== Succesors ===
next: v100 
=== Usages ===
v97 
=== Predecessor ===
a848 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v906 lastLocationAccess: - expectedValue: i47 newValue: i37 stateAfter: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i432 
y: i47 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i432 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a429 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a846 
=== Succesors ===
=== Usages ===
v809 ?118 v558 ?70 ?732 v559 ?111 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a846  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a846 
=== Succesors ===
=== Usages ===
a849 v561 v807 v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a846  <|@  <|@
f <@~|@floating>@ <|@
tid a422 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 1]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a843 
=== Succesors ===
=== Usages ===
?14 ?14 ?330 ?31 ?38 ?26 ?22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a843  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
sourceFile: BufferedWriter.java
sourceLine: 161
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a422 a422 
=== Succesors ===
=== Usages ===
?22 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a422 a422  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?14 
values: a422 
=== Succesors ===
=== Usages ===
?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?14 values: a422  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?22 
=== Succesors ===
=== Usages ===
?70 ?84 ?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?22  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 v516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j77 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 v516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i432 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a849 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a849 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
lastLocationAccess: - 
=== Succesors ===
next: v108 
=== Usages ===
a555 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v932 lastLocationAccess: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a555 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a849 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a849  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a555 
y: a848 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a555 y: a848  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
a849 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v107 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i556 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i556 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
lastLocationAccess: - 
=== Succesors ===
next: v729 
=== Usages ===
i112 ?111 
=== Predecessor ===
v107 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v906 lastLocationAccess: - #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: i32
=== Inputs ===
x: i556 
y: i37 
=== Succesors ===
=== Usages ===
v113 v557 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i556 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i112 
y: i47 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i112 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v728 
=== Usages ===
=== Predecessor ===
i556 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v727 #falseSuccessor: v728  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: a429 
=== Succesors ===
=== Usages ===
?111 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: a429  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: i556 a429 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: i556 a429  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?111 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
lastLocationAccess: - 
value: i112 
stateAfter: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v906 lastLocationAccess: - value: i112 stateAfter: - #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i69 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i69  <|@  <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a429 i37 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a429 i37  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: a429 
=== Succesors ===
=== Usages ===
?732 ?733 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: a429  <|@  <|@
tid ?732 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?70 
values: a429 i37 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a429 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i69 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v558 
stateDuring: ?732 
=== Succesors ===
next: v75 
=== Usages ===
v72 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v558 stateDuring: ?732 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i47 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i69 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.7081922816519972
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
i69 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v74 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i79 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i79  <|@  <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a429 a76 i37 i47 i47 i47 j77 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a429 a76 i37 i47 i47 i47 j77  <|@  <|@
tid ?733 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?70 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v559 
stateDuring: ?733 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v559 stateDuring: ?733 #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
i79 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
precise: true
stamp: void
=== Inputs ===
address: v932 
value: - 
stateBefore: - 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v932 value: - stateBefore: - #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid a560 <|@
result v17|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a848 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
lastLocationAccess: - 
value: a560 
stateAfter: - 
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v932 lastLocationAccess: - value: a560 stateAfter: - #next: v809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
precise: false
stamp: void
=== Inputs ===
address: v932 
value: a848 
object: a429 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v932 value: a848 object: a429 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v83 v86 v119 
=== Succesors ===
next: a850 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v83 v86 v119 #next: a850  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a850 <|@
result v20|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.Writer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedWriter.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 1]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.io.Writer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v907 
lastLocationAccess: - 
=== Succesors ===
next: v851 
=== Usages ===
v934 v910 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v907 lastLocationAccess: - #next: v851  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
=== Succesors ===
=== Usages ===
v763 v851 a854 i856 a859 v897 v857 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
result [v20|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a850 
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-174099|0xfffffffffffd57ed]
deoptSpeculation: long[1940|0x794]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v934 
lastLocationAccess: - 
=== Succesors ===
next: i852 
=== Usages ===
v842 
=== Predecessor ===
a850 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v934 lastLocationAccess: - #next: i852  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i852 v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i852 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedWriter.nextChar
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:176) [bci: 5]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v908 
lastLocationAccess: - 
=== Succesors ===
next: v125 
=== Usages ===
v122 ?157 v237 v239 v473 ?251 
=== Predecessor ===
v851 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v908 lastLocationAccess: - #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:176) [bci: 8]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i852 
y: i47 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i852 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a300 <|@
result Object[Unsafe@679697080] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?394 ?310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?394 ?310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i392 i308 ?310 ?394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 i360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a570 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v509 v552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:176) [bci: 8]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.01815860517284762
stamp: void
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
i852 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v124 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:177) [bci: 11]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 12]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
result meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v851 
y: v841 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v851 y: v841  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v627 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v625 #falseSuccessor: v627  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a853 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a853  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
result [v20|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a850 
=== Succesors ===
=== Usages ===
a853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a853 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.StreamEncoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OutputStreamWriter.se
memoryOrder: PLAIN
nodeSourcePosition: at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 1]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n# sun.nio.cs.StreamEncoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v910 
lastLocationAccess: - 
=== Succesors ===
next: a854 
=== Usages ===
a449 v911 v915 
=== Predecessor ===
v625 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v910 lastLocationAccess: - #next: a854  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
result [v23|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a853 
=== Succesors ===
=== Usages ===
a854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a854 <|@
result v24|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: int[-115211|0xfffffffffffe3df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Writer.lock
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 1]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.lang.Object
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v911 
lastLocationAccess: - 
=== Succesors ===
next: a855 
=== Usages ===
a453 v912 v935 
=== Predecessor ===
a853 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v911 lastLocationAccess: - #next: a855  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a855 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedWriter.cb
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 17]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n# char[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
lastLocationAccess: - 
=== Succesors ===
next: i856 
=== Usages ===
a443 v916 
=== Predecessor ===
a854 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 lastLocationAccess: - #next: i856  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
result [v25|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a855 
=== Succesors ===
=== Usages ===
i856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i856 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-120075|0xfffffffffffe2af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 10]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v916 
lastLocationAccess: - 
=== Succesors ===
next: v857 
=== Usages ===
v239 
=== Predecessor ===
a855 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v916 lastLocationAccess: - #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
result [v24|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a854 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-178195|0xfffffffffffd47ed]
deoptSpeculation: long[3220|0xc94]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v935 
lastLocationAccess: - 
=== Succesors ===
next: v699 
=== Usages ===
v885 
=== Predecessor ===
i856 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v935 lastLocationAccess: - #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v857 
y: v883 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v857 y: v883  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 11]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v697 #falseSuccessor: v880  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 14]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a858 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a858  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
result [v24|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a854 
=== Succesors ===
=== Usages ===
a858 a863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a858 <|@
result v27|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v912 
lastLocationAccess: - 
=== Succesors ===
next: a859 
=== Usages ===
v913 
=== Predecessor ===
v697 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v912 lastLocationAccess: - #next: a859  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
result [v27|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a858 
=== Succesors ===
=== Usages ===
a859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a859 <|@
result v28|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-117003|0xfffffffffffe36f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?84 
guard: - 
address: v913 
lastLocationAccess: - 
=== Succesors ===
next: v897 
=== Usages ===
a460 v914 v924 v937 
=== Predecessor ===
a858 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?84 guard: - address: v913 lastLocationAccess: - #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
result [v28|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a859 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?84 
object: v937 
=== Succesors ===
next: j860 
=== Usages ===
=== Predecessor ===
a859 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?84 object: v937 #next: j860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j860 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: a861 
=== Usages ===
v900 
=== Predecessor ===
v897 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: a861  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
result [v29|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j860 
index: - 
=== Succesors ===
=== Usages ===
a861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j860 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a861 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v900 
lastLocationAccess: - 
=== Succesors ===
next: i463 
=== Usages ===
v220 a517 v805 
=== Predecessor ===
j860 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v900 lastLocationAccess: - #next: i463  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
result [v28|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a859 
=== Succesors ===
=== Usages ===
i463 i513 v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v914 
lastLocationAccess: - 
expectedValue: i47 
newValue: i37 
stateAfter: - 
=== Succesors ===
next: v215 
=== Usages ===
v212 
=== Predecessor ===
a861 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v914 lastLocationAccess: - expectedValue: i47 newValue: i37 stateAfter: - #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i463 
y: i47 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i463 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a460 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a859 
=== Succesors ===
=== Usages ===
v805 v515 ?191 ?734 v516 ?233 ?226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a859  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
result [v28|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a859 
=== Succesors ===
=== Usages ===
a862 v518 v803 v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a859  <|@  <|@
f <@~|@floating>@ <|@
tid a443 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 17]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a855 
=== Succesors ===
=== Usages ===
?157 ?251 v473 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a855  <|@  <|@
f <@~|@floating>@ <|@
tid a453 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 1]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a854 
=== Succesors ===
=== Usages ===
?164 ?157 ?162 ?252 ?169 ?157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a854  <|@  <|@
f <@~|@floating>@ <|@
tid a449 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 1]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a# sun.nio.cs.StreamEncoder
=== Inputs ===
value: a853 
=== Succesors ===
=== Usages ===
?251 ?248 ?157 v473 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a853  <|@  <|@
tid ?330 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
sourceFile: BufferedWriter.java
sourceLine: 163
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a422 
=== Succesors ===
=== Usages ===
?329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a422  <|@  <|@
tid ?329 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedWriter.implFlushBuffer()>
localsSize: 1
locksSize: 0
sourceFile: BufferedWriter.java
sourceLine: 178
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?330 
values: a1 
=== Succesors ===
=== Usages ===
?328 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?330 values: a1  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<OutputStreamWriter.write(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: OutputStreamWriter.java
sourceLine: 219
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?329 
=== Succesors ===
=== Usages ===
?157 ?164 ?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?329  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v214 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
i463 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v214 #falseSuccessor: v213  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a862 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a862 <|@
result v36|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
a512 
=== Predecessor ===
v214 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid a512 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a862 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a862  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a512 
y: a861 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a512 y: a861  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: StreamEncoder.java
sourceLine: 137
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: a449 a443 i47 i852 a453 a453 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: a449 a443 i47 i852 a453 a453  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?157 
values: a453 
=== Succesors ===
=== Usages ===
?235 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?157 values: a453  <|@  <|@
tid ?235 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?162 
=== Succesors ===
=== Usages ===
?191 ?233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?162  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v220 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
a862 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v220 #trueSuccessor: v222 #falseSuccessor: v221  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i513 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i513 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v914 
lastLocationAccess: - 
=== Succesors ===
next: v720 
=== Usages ===
i227 ?226 
=== Predecessor ===
v222 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v914 lastLocationAccess: - #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
=== Inputs ===
x: i513 
y: i37 
=== Succesors ===
=== Usages ===
v228 v514 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i513 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i227 
y: i47 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i227 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v718 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
i513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v718 #falseSuccessor: v719  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
tid ?233 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?235 
values: a460 
=== Succesors ===
=== Usages ===
?226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?235 values: a460  <|@  <|@
tid ?226 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?233 
values: i513 a460 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?233 values: i513 a460  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?226 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v914 
lastLocationAccess: - 
value: i227 
stateAfter: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v914 lastLocationAccess: - value: i227 stateAfter: - #next: v234  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i190 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i190  <|@  <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a460 i37 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a460 i37  <|@  <|@
tid ?191 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?235 
values: a460 
=== Succesors ===
=== Usages ===
?734 ?735 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?235 values: a460  <|@  <|@
tid ?734 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?191 
values: a460 i37 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?191 values: a460 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i190 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v515 
stateDuring: ?734 
=== Succesors ===
next: v196 
=== Usages ===
v193 
=== Predecessor ===
v221 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v515 stateDuring: ?734 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i47 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i190 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.7081922816519972
stamp: void
=== Inputs ===
condition: v193 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
i190 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v193 #trueSuccessor: v195 #falseSuccessor: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i198 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i198  <|@  <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a460 a76 i37 i47 i47 i47 j77 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a460 a76 i37 i47 i47 i47 j77  <|@  <|@
tid ?735 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?191 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v516 
stateDuring: ?735 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v516 stateDuring: ?735 #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
i198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v803 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
precise: true
stamp: void
=== Inputs ===
address: v924 
value: - 
stateBefore: - 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v924 value: - stateBefore: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
result v44|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a861 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
lastLocationAccess: - 
value: a517 
stateAfter: - 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v924 lastLocationAccess: - value: a517 stateAfter: - #next: v805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
precise: false
stamp: void
=== Inputs ===
address: v924 
value: a861 
object: a460 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v924 value: a861 object: a460 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 v204 v234 
=== Succesors ===
next: i466 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 v204 v234 #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
result [v23|DWORD[_] * 8 + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a853 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.closed
memoryOrder: VOLATILE
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
i467 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v915 lastLocationAccess: - #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i466 
=== Succesors ===
=== Usages ===
v249 ?248 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i467 
y: i47 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i467 y: i47  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 139
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: - - - - - a453 
=== Succesors ===
=== Usages ===
?245 ?251 ?736 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: - - - - - a453  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v701 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
i466 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v701 #falseSuccessor: v702  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:53) [bci: 17]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i852 
y: i47 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i852 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid j789 <|@
result long[3860|0xf14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j791 j791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v706 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v705 #falseSuccessor: v706  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid i788 <|@
result int[-180243|0xfffffffffffd3fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -180243
stableDimension: 0
stamp: i32 [-180243]
stampKind: i32
value: int[-180243|0xfffffffffffd3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v705 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 18]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i852 
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i856 y: i852  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v709 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v709 #falseSuccessor: v710  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid i797 <|@
result int[-181267|0xfffffffffffd3bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -181267
stableDimension: 0
stamp: i32 [-181267]
stampKind: i32
value: int[-181267|0xfffffffffffd3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v709 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 26]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)>
=== Inputs ===
arguments: a449 a443 i47 i852 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a449 a443 i47 i852  <|@  <|@
tid ?736 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 158
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
bci: 49
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implWrite
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v473 
stateDuring: ?736 
=== Succesors ===
next: a863 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v473 stateDuring: ?736 #next: a863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a863 <|@
result v48|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v912 
lastLocationAccess: - 
=== Succesors ===
next: a864 
=== Usages ===
a475 v917 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v912 lastLocationAccess: - #next: a864  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: return
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: StreamEncoder.java
sourceLine: 159
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
=== Succesors ===
=== Usages ===
i482 a864 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
result [v48|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a863 
=== Succesors ===
=== Usages ===
a864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a864 <|@
result v49|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-121867|0xfffffffffffe23f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?245 
guard: - 
address: v917 
lastLocationAccess: - 
=== Succesors ===
next: i482 
=== Usages ===
a479 v918 v919 v920 
=== Predecessor ===
a863 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?245 guard: - address: v917 lastLocationAccess: - #next: i482  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
result [v49|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a864 
=== Succesors ===
=== Usages ===
i482 v486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i482 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-122891|0xfffffffffffe1ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?245 
guard: - 
address: v918 
lastLocationAccess: - 
=== Succesors ===
next: a865 
=== Usages ===
i278 v262 ?255 
=== Predecessor ===
a864 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?245 guard: - address: v918 lastLocationAccess: - #next: a865  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
result [v49|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a864 
=== Succesors ===
=== Usages ===
a865 v509 v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a865 <|@
result v51|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
=== Succesors ===
next: j866 
=== Usages ===
a485 
=== Predecessor ===
i482 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - #next: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j866 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: a867 
=== Usages ===
v901 
=== Predecessor ===
a865 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: a867  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
result [v52|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j866 
index: - 
=== Succesors ===
=== Usages ===
a867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a867 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v901 
lastLocationAccess: - 
=== Succesors ===
next: v715 
=== Usages ===
v260 
=== Predecessor ===
j866 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v901 lastLocationAccess: - #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid a485 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a865 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a865  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a485 
y: a867 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a485 y: a867  <|@  <|@
f <@~|@floating>@ <|@
tid a475 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a863 
=== Succesors ===
=== Usages ===
?179 ?173 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a863  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: StreamEncoder.java
sourceLine: 141
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: - - - - - a453 
=== Succesors ===
=== Usages ===
?169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: - - - - - a453  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?164 
values: a453 
=== Succesors ===
=== Usages ===
?173 ?179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?164 values: a453  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v713 
falseSuccessor: v714 
=== Usages ===
=== Predecessor ===
a867 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v713 #falseSuccessor: v714  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i482 
y: i37 
=== Succesors ===
=== Usages ===
v176 v266 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i482 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v262 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v262 #trueSuccessor: v265 #falseSuccessor: v264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
precise: true
stamp: void
=== Inputs ===
address: v919 
value: - 
stateBefore: - 
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v919 value: - stateBefore: - #next: v509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
lastLocationAccess: - 
value: a570 
stateAfter: - 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v919 lastLocationAccess: - value: a570 stateAfter: - #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
v264 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v270 v272 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v270 v272 #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
=== Inputs ===
x: i482 
y: i277 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i482 y: i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v918 
lastLocationAccess: - 
value: i278 
stateAfter: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v918 lastLocationAccess: - value: i278 stateAfter: - #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.8643527024712085
stamp: void
=== Inputs ===
condition: v262 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v262 #trueSuccessor: v174 #falseSuccessor: v175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a488 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a488  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
result [v49|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a864 
=== Succesors ===
=== Usages ===
a488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a488 <|@
result v58|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v920 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
v921 v798 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v920 lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a488 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a488  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.9993015720569195
stamp: void
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
a488 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v282 #falseSuccessor: v281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a493 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a493  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
result [v58|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a488 
=== Succesors ===
=== Usages ===
a493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a493 <|@
result v59|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
lastLocationAccess: - 
=== Succesors ===
next: v290 
=== Usages ===
a494 v799 v922 v923 
=== Predecessor ===
v281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 lastLocationAccess: - #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a493 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a493  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.8992113780371063
stamp: void
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
a493 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v289 #falseSuccessor: v288  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i498 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i498  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
result [v59|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a493 
=== Succesors ===
=== Usages ===
i500 i501 i498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i498 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: v297 
=== Usages ===
v294 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i498 
y: i47 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i498 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
i498 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v296 #falseSuccessor: v295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
tid ?179 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
values: a475 
=== Succesors ===
=== Usages ===
?324 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169 values: a475  <|@  <|@
tid ?324 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?179 
=== Succesors ===
=== Usages ===
?303 ?737 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?179  <|@  <|@
f <@~|@floating>@ <|@
tid a494 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a493 
=== Succesors ===
=== Usages ===
?303 ?310 ?306 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a493  <|@  <|@
tid ?303 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?324 
values: - a494 
=== Succesors ===
=== Usages ===
?306 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?324 values: - a494  <|@  <|@
tid ?306 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?303 
values: a494 i37 
=== Succesors ===
=== Usages ===
?310 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?303 values: a494 i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 204
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v304 
=== Succesors ===
next: i500 
=== Usages ===
v312 v316 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v304 #next: i500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i500 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
=== Succesors ===
next: i501 
=== Usages ===
i308 i501 ?310 
=== Predecessor ===
v305 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - #next: i501  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i500 
y: i302 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i500 y: i302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
lastLocationAccess: - 
expectedValue: i500 
newValue: i308 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
v311 
=== Predecessor ===
i500 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v922 lastLocationAccess: - expectedValue: i500 newValue: i308 stateAfter: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i501 
y: i47 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i501 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
i501 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v317 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v661  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?306 
values: i47 a300 a494 j301 - i302 i500 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?306 values: i47 a300 a494 j301 - i302 i500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateBefore: ?310 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?310 #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v305 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v305 
=== Succesors ===
next: a868 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v305 #next: a868  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result [v59|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a493 
=== Succesors ===
=== Usages ===
a868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a868 <|@
result v64|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
a505 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v923 lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid a505 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a868 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a868  <|@  <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a505 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a505  <|@  <|@
tid ?737 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?324 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v506 
stateDuring: ?737 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
a868 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v506 stateDuring: ?737 #next: v325  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v182 v184 v325 v326 v327 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v182 v184 v325 v326 v327 #next: v507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: BufferedWriter.nextChar
location: BufferedWriter.nextChar
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:179) [bci: 30]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v908 
lastLocationAccess: - 
value: i47 
stateAfter: - 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v908 lastLocationAccess: - value: i47 stateAfter: - #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v332 v333 
=== Succesors ===
next: a869 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v332 v333 #next: a869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a869 <|@
result v66|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v904 
lastLocationAccess: - 
=== Succesors ===
next: a870 
=== Usages ===
a520 v925 
=== Predecessor ===
v331 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v904 lastLocationAccess: - #next: a870  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: aload_2
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: BufferedWriter.java
sourceLine: 165
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a422 
=== Succesors ===
=== Usages ===
i527 a870 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a422  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
result [v66|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a869 
=== Succesors ===
=== Usages ===
a870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a870 <|@
result v67|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-133387|0xfffffffffffdf6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v925 
lastLocationAccess: - 
=== Succesors ===
next: i527 
=== Usages ===
a524 v926 v927 v928 
=== Predecessor ===
a869 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v925 lastLocationAccess: - #next: i527  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
result [v67|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a870 
=== Succesors ===
=== Usages ===
i527 v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i527 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-134411|0xfffffffffffdf2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v926 
lastLocationAccess: - 
=== Succesors ===
next: a871 
=== Usages ===
i360 v344 ?336 
=== Predecessor ===
a870 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v926 lastLocationAccess: - #next: a871  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
result [v67|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a870 
=== Succesors ===
=== Usages ===
a871 v552 v806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a871 <|@
result v69|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
lastLocationAccess: - 
=== Succesors ===
next: j872 
=== Usages ===
a530 
=== Predecessor ===
i527 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v927 lastLocationAccess: - #next: j872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j872 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: a873 
=== Usages ===
v902 
=== Predecessor ===
a871 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: a873  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
result [v70|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j872 
index: - 
=== Succesors ===
=== Usages ===
a873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j872 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a873 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v902 
lastLocationAccess: - 
=== Succesors ===
next: v724 
=== Usages ===
v342 
=== Predecessor ===
j872 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v902 lastLocationAccess: - #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid a530 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a871 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a871  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a530 
y: a873 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a530 y: a873  <|@  <|@
f <@~|@floating>@ <|@
tid a520 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a869 
=== Succesors ===
=== Usages ===
?45 ?54 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a869  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedWriter.flushBuffer()>
localsSize: 5
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: BufferedWriter.java
sourceLine: 165
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a422 
=== Succesors ===
=== Usages ===
?38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a422  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?31 
values: a422 
=== Succesors ===
=== Usages ===
?54 ?45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?31 values: a422  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v722 
falseSuccessor: v723 
=== Usages ===
=== Predecessor ===
a873 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v722 #falseSuccessor: v723  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i527 
y: i37 
=== Succesors ===
=== Usages ===
v51 v348 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i527 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v347 #falseSuccessor: v346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
precise: true
stamp: void
=== Inputs ===
address: v927 
value: - 
stateBefore: - 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v927 value: - stateBefore: - #next: v552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
lastLocationAccess: - 
value: a570 
stateAfter: - 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v927 lastLocationAccess: - value: a570 stateAfter: - #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v352 v354 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v352 v354 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32
=== Inputs ===
x: i527 
y: i277 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i527 y: i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v926 
lastLocationAccess: - 
value: i360 
stateAfter: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v926 lastLocationAccess: - value: i360 stateAfter: - #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.8643527024712085
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a533 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
result [v67|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a870 
=== Succesors ===
=== Usages ===
a533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a533 <|@
result v76|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v928 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
v929 v800 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v928 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a533 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a533  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.9993015720569195
stamp: void
=== Inputs ===
condition: v800 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
a533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v800 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a538 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a538  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
result [v76|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a533 
=== Succesors ===
=== Usages ===
a538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a538 <|@
result v77|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
a539 v801 v930 v931 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v929 lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a538 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a538  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.8992113780371063
stamp: void
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v371 
=== Usages ===
=== Predecessor ===
a538 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v375 #falseSuccessor: v371  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i543 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i543  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
result [v77|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a538 
=== Succesors ===
=== Usages ===
i545 i546 i543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i543 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
v380 
=== Predecessor ===
v371 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v930 lastLocationAccess: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i543 
y: i47 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i543 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v380 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
i543 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v380 #trueSuccessor: v383 #falseSuccessor: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?38 
values: a520 
=== Succesors ===
=== Usages ===
?411 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?38 values: a520  <|@  <|@
tid ?411 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?54 
=== Succesors ===
=== Usages ===
?387 ?738 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?54  <|@  <|@
f <@~|@floating>@ <|@
tid a539 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a538 
=== Succesors ===
=== Usages ===
?387 ?394 ?390 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a538  <|@  <|@
tid ?387 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?411 
values: - a539 
=== Succesors ===
=== Usages ===
?390 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?411 values: - a539  <|@  <|@
tid ?390 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?387 
values: a539 i37 
=== Succesors ===
=== Usages ===
?394 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?387 values: a539 i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v388 
=== Succesors ===
next: i545 
=== Usages ===
v396 v400 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v388 #next: i545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i545 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
lastLocationAccess: - 
=== Succesors ===
next: i546 
=== Usages ===
i392 i546 ?394 
=== Predecessor ===
v389 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v930 lastLocationAccess: - #next: i546  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i545 
y: i302 
=== Succesors ===
=== Usages ===
i546 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i545 y: i302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
lastLocationAccess: - 
expectedValue: i545 
newValue: i392 
stateAfter: - 
=== Succesors ===
next: v402 
=== Usages ===
v395 
=== Predecessor ===
i545 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v930 lastLocationAccess: - expectedValue: i545 newValue: i392 stateAfter: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i546 
y: i47 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i546 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
i546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v401 #falseSuccessor: v396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
tid ?394 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?390 
values: i47 a300 a539 j301 - i302 i545 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?390 values: i47 a300 a539 j301 - i302 i545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
stateBefore: ?394 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?394 #next: v400  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
loopBegin: v389 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v389 
=== Succesors ===
next: a874 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v389 #next: a874  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
result [v77|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a538 
=== Succesors ===
=== Usages ===
a874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a874 <|@
result v82|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
lastLocationAccess: - 
=== Succesors ===
next: v405 
=== Usages ===
a550 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 lastLocationAccess: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid a550 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a874 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a874  <|@  <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a550 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a550  <|@  <|@
tid ?738 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?411 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v551 
stateDuring: ?738 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
a874 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v551 stateDuring: ?738 #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v60 v62 v412 v413 v414 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v60 v62 v412 v413 v414 #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:172) [bci: 62]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?38 
values: a520 
=== Succesors ===
=== Usages ===
?361 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?38 values: a520  <|@  <|@
f <@~|@floating>@ <|@
tid a524 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a870 
=== Succesors ===
=== Usages ===
?361 ?336 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a870  <|@  <|@
tid ?361 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?45 
values: a524 
=== Succesors ===
=== Usages ===
?336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?45 values: a524  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?361 
values: i527 a524 i37 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?361 values: i527 a524 i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
reason: UnreachedCode
speculation: {0x0000000000006b94[index: 860, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?336 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
values: a475 
=== Succesors ===
=== Usages ===
?279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169 values: a475  <|@  <|@
f <@~|@floating>@ <|@
tid a479 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a864 
=== Succesors ===
=== Usages ===
?255 ?279 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a864  <|@  <|@
tid ?279 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a479 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a479  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?279 
values: i482 a479 i37 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?279 values: i482 a479 i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
reason: UnreachedCode
speculation: {0x0000000000006b94[index: 860, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid j795 <|@
result long[5140|0x1414] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i794 <|@
result int[-179219|0xfffffffffffd43ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -179219
stableDimension: 0
stamp: i32 [-179219]
stampKind: i32
value: int[-179219|0xfffffffffffd43ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i790 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [-181267 - -179219] bits:1...1010xxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v786 
values: i788 i794 i797 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v786 values: i788 i794 i797  <|@  <|@
f <@~|@floating>@ <|@
tid j791 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i64 [3860 - 5140] bits:0...0xx1xx00010100
valueDescription: i64
=== Inputs ===
merge: v786 
values: j789 j795 j789 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v786 values: j789 j795 j789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v787 v793 v796 
=== Succesors ===
next: v792 
=== Usages ===
i790 j791 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v787 v793 v796 #next: v792  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 151
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
values: a449 a443 i47 i852 
=== Succesors ===
=== Usages ===
?248 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252 values: a449 a443 i47 i852  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: ifeq
code: ResolvedJavaMethodBytecode<StreamEncoder.ensureOpen()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
sourceFile: StreamEncoder.java
sourceLine: 51
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?251 
values: i467 a449 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?251 values: i467 a449  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateBefore: ?248 
actionAndReason: i790 
speculation: j791 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?248 actionAndReason: i790 speculation: j791  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 11]
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid j775 <|@
result long[3220|0xc94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
result int[-178195|0xfffffffffffd47ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -178195
stableDimension: 0
stamp: i32 [-178195]
stampKind: i32
value: int[-178195|0xfffffffffffd47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
v880 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
result long[2580|0xa14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
result int[-113971|0xfffffffffffe42cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
rawvalue: -113971
stableDimension: 0
stamp: i32 [-113971]
stampKind: i32
value: int[-113971|0xfffffffffffe42cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i761 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i32 [-178195 - -113971] bits:1...1xx01000x1x11x01101
valueDescription: i32
=== Inputs ===
merge: v757 
values: i767 i774 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v757 values: i767 i774  <|@  <|@
f <@~|@floating>@ <|@
tid j762 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: i64 [2580 - 3220] bits:0...01xx0x0010100
valueDescription: i64
=== Inputs ===
merge: v757 
values: j768 j775 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v757 values: j768 j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v766 v773 
=== Succesors ===
next: v763 
=== Usages ===
i761 j762 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v766 v773 #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedWriter.ensureOpen(BufferedWriter.java:131) [bci: 4]
at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:175) [bci: 1]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
stamp: void
=== Inputs ===
stateBefore: ?84 
actionAndReason: i761 
speculation: j762 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?84 actionAndReason: i761 speculation: j762  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:160) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 676
mayConvertToGuard: true
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xb937bae6]: UnreachedCode@6[HotSpotMethod<BufferedWriter.flushBuffer()>, 42]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  206  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  294  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  332  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  392  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  394  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr  396  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  406  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  408  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  528  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr  532  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  554  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  610  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  684  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  694  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  696  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  698  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  754  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  790  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  806  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr  876  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  880  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  882  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  936  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  972  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  988  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr 1162  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1208  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr 1212  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1244  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1284  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1290  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1294  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1360  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1408  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1430  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1458  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr 1460  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1506  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1642  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1654  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr 1674  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1708  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  206  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  294  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  332  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  392  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  394  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr  396  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  406  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  408  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  528  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr  532  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  554  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  610  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  684  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  694  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  696  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  698  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  754  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  790  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  806  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr  876  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  880  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  882  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  936  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  972  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  988  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr 1162  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1208  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr 1212  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1244  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1284  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1290  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1294  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1360  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1408  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1430  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1458  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr 1460  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1506  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1642  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1654  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr 1674  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1708  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- v79|d [0, 1[[82, 87[[404, 409[[686, 687[[1160, 1162[[1210, 1212[[1242, 1244[[1292, 1294[[1362, 1365[[1412, 1413[[1460, 1463[[1510, 1511[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[682, 687[[1160, 1161[[1200, 1211[[1242, 1243[[1282, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v32|q [0, 1[[680, 687[[1158, 1161[[1198, 1211[[1240, 1243[[1280, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v34|q [0, 22[[678, 687[[1156, 1161[[1196, 1211[[1238, 1243[[1278, 1293[[1410, 1413[[1508, 1511[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[686, 687[[1160, 1161[[1206, 1211[[1242, 1243[[1288, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v22|d [0, 1[[684, 687[[1160, 1161[[1202, 1211[[1242, 1243[[1284, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[686, 687[[1160, 1161[[1204, 1211[[1242, 1243[[1286, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [22, 838[[1064, 1090[[1112, 1318[[1416, 1541[[1570, 1611[[1612, 1643[[1644, 1675[[1676, 1697[[1698, 1729[22 MustHaveRegister 24 MustHaveRegister 290 MustHaveRegister 294 MustHaveRegister 332 MustHaveRegister 838 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [24, 870[[1028, 1038[[1064, 1090[[1112, 1318[[1416, 1514[24 MustHaveRegister 26 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister 870 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v3|d [78, 211[[214, 256[[1134, 1211[[1676, 1697[78 MustHaveRegister 210 MustHaveRegister 1156 ShouldHaveRegister 1196 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v1|d [80, 990[[1028, 1054[[1064, 1102[[1112, 1413[[1416, 1541[[1542, 1569[[1570, 1611[[1612, 1622[[1644, 1675[[1676, 1697[[1698, 1729[80 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v9|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [250, 256[[1676, 1697[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v11|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d rax|- [1162, 1164[1162 MustHaveRegister 1164 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d rax|- [1212, 1213[1212 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[v16|q]" v16|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v17|d DWORD "[v17|d]" v17|d v5|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[v19|q]" v19|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[v20|d]" v20|d -1 [290, 328[290 MustHaveRegister 292 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [292, 308[292 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [294, 684[[1216, 1298[[1308, 1318[[1570, 1611[[1698, 1729[294 MustHaveRegister 296 MustHaveRegister 622 MustHaveRegister 634 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [328, 608[[1216, 1298[[1308, 1318[328 MustHaveRegister 330 MustHaveRegister 402 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [330, 688[[1216, 1298[[1308, 1318[330 MustHaveRegister 336 MustHaveRegister 386 MustHaveRegister 400 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [332, 398[332 MustHaveRegister 334 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [334, 634[[1216, 1298[[1308, 1318[334 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [388, 530[[536, 590[388 MustHaveRegister 390 MustHaveRegister 396 MustHaveRegister 408 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister 552 MustHaveRegister 572 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [394, 533[[536, 556[394 MustHaveRegister 528 MustHaveRegister 532 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v28|d [396, 533[[536, 578[[1216, 1293[[1590, 1611[396 MustHaveRegister 532 MustHaveRegister 1238 ShouldHaveRegister 1278 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v25|d [398, 680[[1216, 1298[[1308, 1318[[1570, 1611[[1698, 1729[398 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v24|d [400, 808[[1064, 1080[[1112, 1124[[1216, 1298[[1308, 1318[[1416, 1511[[1514, 1541[[1570, 1611[[1698, 1729[400 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v23|d [402, 678[[1216, 1298[[1308, 1318[[1570, 1611[[1698, 1729[402 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [552, 554[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|d [554, 556[554 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [572, 578[[1590, 1611[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v38|d [574, 590[574 MustHaveRegister 576 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d rax|- [1244, 1246[1244 MustHaveRegister 1246 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d rax|- [1294, 1295[1294 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [526, 527[526 MustHaveRegister  "NoDefinitionFound"
  v43|q QWORD "[v43|q]" v43|q -1 [526, 527[526 MustHaveRegister  "NoDefinitionFound"
  v44|d DWORD "[v44|d]" v44|d v30|q [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [532, 533[532 MustHaveRegister  "NoDefinitionFound"
  v46|q QWORD "[v46|q]" v46|q -1 [532, 533[532 MustHaveRegister  "NoDefinitionFound"
  v47|d DWORD "[v47|d]" v47|d -1 [608, 636[[1570, 1590[[1698, 1729[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [688, 700[688 MustHaveRegister 690 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [690, 804[[1514, 1534[690 MustHaveRegister 692 MustHaveRegister 694 MustHaveRegister 752 MustHaveRegister 754 MustHaveRegister 786 MustHaveRegister 804 MustHaveRegister 1534 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [692, 790[[1514, 1541[692 MustHaveRegister 714 ShouldHaveRegister 784 ShouldHaveRegister 790 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [694, 698[694 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [696, 702[696 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v51|d [698, 702[698 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v48|d [700, 808[[1064, 1080[[1112, 1124[[1416, 1511[[1514, 1541[700 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [752, 753[752 MustHaveRegister  "NoDefinitionFound"
  v56|q QWORD "[v56|q]" v56|q -1 [752, 753[752 MustHaveRegister  "NoDefinitionFound"
  v57|d DWORD "[v57|d]" v57|d v50|d [784, 786[784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d -1 [804, 808[[1064, 1076[804 MustHaveRegister 806 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [1076, 1080[[1112, 1124[[1416, 1504[1076 MustHaveRegister 1078 MustHaveRegister 1122 MustHaveRegister 1428 MustHaveRegister 1456 MustHaveRegister 1462 MustHaveRegister 1481 LiveAtLoopEnd 1504 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v59|d [1428, 1482[1428 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [1456, 1479[1456 MustHaveRegister 1458 MustHaveRegister 1460 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v61|d [1458, 1462[1458 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [1478, 1479[1478 MustHaveRegister  "NoDefinitionFound"
  v64|d DWORD "[v64|d]" v64|d -1 [1504, 1506[1504 MustHaveRegister 1506 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v64|d [1506, 1508[1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d -1 [870, 882[870 MustHaveRegister 872 MustHaveRegister 882 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[v67|d]" v67|d -1 [872, 986[[1542, 1562[872 MustHaveRegister 874 MustHaveRegister 876 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister 968 MustHaveRegister 986 MustHaveRegister 1562 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [874, 972[[1542, 1569[874 MustHaveRegister 896 ShouldHaveRegister 966 ShouldHaveRegister 972 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d -1 [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q -1 [878, 884[878 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q v69|d [880, 884[880 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v66|d [882, 990[[1038, 1054[[1090, 1102[[1318, 1413[[1542, 1569[882 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [934, 935[934 MustHaveRegister  "NoDefinitionFound"
  v74|q QWORD "[v74|q]" v74|q -1 [934, 935[934 MustHaveRegister  "NoDefinitionFound"
  v75|d DWORD "[v75|d]" v75|d v68|d [966, 968[966 MustHaveRegister 968 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d -1 [986, 990[[1038, 1050[986 MustHaveRegister 988 MustHaveRegister 1050 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d -1 [1050, 1054[[1090, 1102[[1318, 1406[1050 MustHaveRegister 1052 MustHaveRegister 1100 MustHaveRegister 1330 MustHaveRegister 1358 MustHaveRegister 1364 MustHaveRegister 1383 LiveAtLoopEnd 1406 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v77|d [1330, 1384[1330 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d -1 [1358, 1381[1358 MustHaveRegister 1360 MustHaveRegister 1362 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d v79|d [1360, 1364[1360 MustHaveRegister 1364 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q -1 [1380, 1381[1380 MustHaveRegister  "NoDefinitionFound"
  v82|d DWORD "[v82|d]" v82|d -1 [1406, 1408[1406 MustHaveRegister 1408 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q v82|d [1408, 1410[1408 MustHaveRegister 1410 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q v67|d [1562, 1569[1562 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q v49|d [1534, 1541[1534 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [1708, 1724[1724 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q -1 [1708, 1726[1726 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d -1 [1654, 1670[1670 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q -1 [1654, 1672[1672 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- v79|d [0, 1[[82, 87[[404, 409[[686, 687[[1160, 1162[[1210, 1212[[1242, 1244[[1292, 1294[[1362, 1365[[1412, 1413[[1460, 1463[[1510, 1511[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[682, 687[[1160, 1161[[1200, 1211[[1242, 1243[[1282, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v32|q [0, 1[[680, 687[[1158, 1161[[1198, 1211[[1240, 1243[[1280, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v34|q [0, 22[[678, 687[[1156, 1161[[1196, 1211[[1238, 1243[[1278, 1293[[1410, 1413[[1508, 1511[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[686, 687[[1160, 1161[[1206, 1211[[1242, 1243[[1288, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v22|d [0, 1[[684, 687[[1160, 1161[[1202, 1211[[1242, 1243[[1284, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[686, 687[[1160, 1161[[1204, 1211[[1242, 1243[[1286, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [22, 636[22 MustHaveRegister 24 MustHaveRegister 290 MustHaveRegister 294 MustHaveRegister 332 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[r10|d]" v1|d -1 [24, 636[24 MustHaveRegister 26 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rax|d]" v2|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rdx|d]" v3|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rcx|q]" v5|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q v3|d [78, 211[[214, 256[[1134, 1159[78 MustHaveRegister 210 MustHaveRegister 1156 ShouldHaveRegister  "OneSpillStore"
  v7|q QWORD "[r9|q]" v7|q v1|d [80, 636[80 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v9|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d -1 [250, 256[[1676, 1697[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v11|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d rax|- [1162, 1164[1162 MustHaveRegister 1164 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|- [1212, 1213[1212 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[r8|q]" v16|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v17|d DWORD "[rax|d]" v17|d v5|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[rdx|q]" v19|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[rax|d]" v20|d -1 [290, 328[290 MustHaveRegister 292 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdx|d]" v21|d -1 [292, 308[292 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d -1 [294, 684[294 MustHaveRegister 296 MustHaveRegister 622 MustHaveRegister 634 MustHaveRegister 684 ShouldHaveRegister  "OneSpillStore"
  v23|d DWORD "[r8|d]" v23|d -1 [328, 608[328 MustHaveRegister 330 MustHaveRegister 402 MustHaveRegister 608 MustHaveRegister  "OneSpillStore"
  v24|d DWORD "[rbx|d]" v24|d -1 [330, 636[330 MustHaveRegister 336 MustHaveRegister 386 MustHaveRegister 400 MustHaveRegister  "SpillInDominator"
  v25|d DWORD "[rax|d]" v25|d -1 [332, 398[332 MustHaveRegister 334 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d -1 [334, 634[334 MustHaveRegister 634 ShouldHaveRegister  "OneSpillStore"
  v27|d DWORD "[rdx|d]" v27|d -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [388, 530[[536, 590[388 MustHaveRegister 390 MustHaveRegister 396 MustHaveRegister 408 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister 552 MustHaveRegister 572 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdi|q]" v30|q -1 [394, 533[[536, 556[394 MustHaveRegister 528 MustHaveRegister 532 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbp|q]" v31|q v28|d [396, 533[[536, 578[[1216, 1241[396 MustHaveRegister 532 MustHaveRegister 1238 ShouldHaveRegister  "OneSpillStore"
  v32|q QWORD "[rax|q]" v32|q v25|d [398, 403[398 MustHaveRegister  "OneSpillStore"
  v33|q QWORD "[r13|q]" v33|q v24|d [400, 636[400 MustHaveRegister  "OneSpillStore"
  v34|q QWORD "[r14|q]" v34|q v23|d [402, 405[402 MustHaveRegister  "SpillInDominator"
  v35|d DWORD "[r14|d]" v35|d -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [552, 554[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v36|d [554, 556[554 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdi|d]" v38|d -1 [572, 578[[1590, 1611[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d v38|d [574, 590[574 MustHaveRegister 576 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d rax|- [1244, 1246[1244 MustHaveRegister 1246 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d rax|- [1294, 1295[1294 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [526, 527[526 MustHaveRegister  "NoDefinitionFound"
  v43|q QWORD "[r14|q]" v43|q -1 [526, 527[526 MustHaveRegister  "NoDefinitionFound"
  v44|d DWORD "[rax|d]" v44|d v30|q [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q -1 [532, 533[532 MustHaveRegister  "NoDefinitionFound"
  v46|q QWORD "[rax|q]" v46|q -1 [532, 533[532 MustHaveRegister  "NoDefinitionFound"
  v47|d DWORD "[r8|d]" v47|d -1 [608, 636[[1570, 1590[[1698, 1729[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [688, 700[688 MustHaveRegister 690 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d -1 [690, 804[[1514, 1534[690 MustHaveRegister 692 MustHaveRegister 694 MustHaveRegister 752 MustHaveRegister 754 MustHaveRegister 786 MustHaveRegister 804 MustHaveRegister 1534 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d -1 [692, 790[[1514, 1541[692 MustHaveRegister 714 ShouldHaveRegister 784 ShouldHaveRegister 790 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d -1 [694, 698[694 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q -1 [696, 702[696 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q v51|d [698, 702[698 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v48|d [700, 808[[1064, 1080[[1112, 1124[[1416, 1482[700 MustHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q -1 [752, 753[752 MustHaveRegister  "NoDefinitionFound"
  v56|q QWORD "[r8|q]" v56|q -1 [752, 753[752 MustHaveRegister  "NoDefinitionFound"
  v57|d DWORD "[rdx|d]" v57|d v50|d [784, 786[784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rdx|d]" v58|d -1 [804, 808[[1064, 1076[804 MustHaveRegister 806 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[r11|d]" v59|d -1 [1076, 1080[[1112, 1124[[1416, 1504[1076 MustHaveRegister 1078 MustHaveRegister 1122 MustHaveRegister 1428 MustHaveRegister 1456 MustHaveRegister 1462 MustHaveRegister 1481 LiveAtLoopEnd 1504 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r10|q]" v60|q v59|d [1428, 1482[1428 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r8|d]" v61|d -1 [1456, 1479[1456 MustHaveRegister 1458 MustHaveRegister 1460 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r9|d]" v62|d v61|d [1458, 1462[1458 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r9|q]" v63|q -1 [1478, 1479[1478 MustHaveRegister  "NoDefinitionFound"
  v64|d DWORD "[r10|d]" v64|d -1 [1504, 1506[1504 MustHaveRegister 1506 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r10|q]" v65|q v64|d [1506, 1508[1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[rsi|d]" v66|d -1 [870, 882[870 MustHaveRegister 872 MustHaveRegister 882 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r10|d]" v67|d -1 [872, 986[[1542, 1562[872 MustHaveRegister 874 MustHaveRegister 876 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister 968 MustHaveRegister 986 MustHaveRegister 1562 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[r11|d]" v68|d -1 [874, 972[[1542, 1569[874 MustHaveRegister 896 ShouldHaveRegister 966 ShouldHaveRegister 972 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rdx|d]" v69|d -1 [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[r8|q]" v70|q -1 [878, 884[878 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdx|q]" v71|q v69|d [880, 884[880 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q v66|d [882, 990[[1038, 1054[[1090, 1102[[1318, 1384[882 MustHaveRegister  "OneSpillStore"
  v73|q QWORD "[rdx|q]" v73|q -1 [934, 935[934 MustHaveRegister  "NoDefinitionFound"
  v74|q QWORD "[r8|q]" v74|q -1 [934, 935[934 MustHaveRegister  "NoDefinitionFound"
  v75|d DWORD "[rdx|d]" v75|d v68|d [966, 968[966 MustHaveRegister 968 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rdx|d]" v76|d -1 [986, 990[[1038, 1050[986 MustHaveRegister 988 MustHaveRegister 1050 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[r10|d]" v77|d -1 [1050, 1054[[1090, 1102[[1318, 1406[1050 MustHaveRegister 1052 MustHaveRegister 1100 MustHaveRegister 1330 MustHaveRegister 1358 MustHaveRegister 1364 MustHaveRegister 1383 LiveAtLoopEnd 1406 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[r11|q]" v78|q v77|d [1330, 1384[1330 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[r8|d]" v79|d -1 [1358, 1381[1358 MustHaveRegister 1360 MustHaveRegister 1362 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[r9|d]" v80|d v79|d [1360, 1364[1360 MustHaveRegister 1364 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[r9|q]" v81|q -1 [1380, 1381[1380 MustHaveRegister  "NoDefinitionFound"
  v82|d DWORD "[r10|d]" v82|d -1 [1406, 1408[1406 MustHaveRegister 1408 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r10|q]" v83|q v82|d [1408, 1410[1408 MustHaveRegister 1410 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[r10|q]" v84|q v67|d [1562, 1569[1562 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[r10|q]" v85|q v49|d [1534, 1541[1534 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r10|d]" v86|d -1 [1708, 1724[1724 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[r11|q]" v87|q -1 [1708, 1726[1726 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r10|d]" v88|d -1 [1654, 1670[1670 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[r11|q]" v89|q -1 [1654, 1672[1672 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[vstack:3|q]" v0|q v0|q [636, 677[ "SpillInDominator"
  v91|d DWORD "[vstack:4|d]" v1|d v1|d [636, 685[ "SpillInDominator"
  v92|q QWORD "[vstack:9|q]" v6|q v6|q [1159, 1211[1196 ShouldHaveRegister  "OneSpillStore"
  v93|q QWORD "[vstack:5|q]" v7|q v7|q [636, 685[ "OneSpillStore"
  v94|d DWORD "[vstack:11|d]" v22|d v22|d [1216, 1241[ "OneSpillStore"
  v95|d DWORD "[vstack:12|d]" v23|d v23|d [1216, 1241[ "OneSpillStore"
  v96|d DWORD "[vstack:2|d]" v24|d v24|d [636, 685[ "SpillInDominator"
  v97|d DWORD "[vstack:13|d]" v26|d v26|d [1216, 1241[ "OneSpillStore"
  v98|q QWORD "[vstack:10|q]" v31|q v31|q [1241, 1293[1278 ShouldHaveRegister  "OneSpillStore"
  v99|q QWORD "[vstack:0|q]" v32|q v32|q [403, 680[[1216, 1298[[1308, 1318[[1570, 1611[[1698, 1708[680 ShouldHaveRegister  "OneSpillStore"
  v100|q QWORD "[vstack:6|q]" v33|q v33|q [636, 685[ "OneSpillStore"
  v101|q QWORD "[vstack:1|q]" v34|q v34|q [1216, 1241[ "SpillInDominator"
  v102|q QWORD "[rax|q]" v32|q v32|q [1708, 1729[ "OneSpillStore"
  v103|q QWORD "[r14|q]" v34|q v34|q [636, 678[678 ShouldHaveRegister  "SpillInDominator"
  v104|q QWORD "[vstack:1|q]" v34|q v34|q [405, 636[ "SpillInDominator"
  v105|d DWORD "[vstack:2|d]" v24|d v24|d [685, 687[ "SpillInDominator"
  v106|q QWORD "[vstack:3|q]" v0|q v0|q [677, 685[ "SpillInDominator"
  v107|d DWORD "[vstack:4|d]" v1|d v1|d [685, 842[ "SpillInDominator"
  v108|q QWORD "[vstack:6|q]" v33|q v33|q [685, 808[[1064, 1080[[1112, 1124[[1216, 1298[[1308, 1318[[1416, 1511[[1514, 1541[[1570, 1611[[1698, 1708[ "OneSpillStore"
  v109|q QWORD "[vstack:5|q]" v7|q v7|q [685, 990[[1028, 1054[[1064, 1102[[1112, 1413[[1416, 1541[[1542, 1569[[1570, 1611[[1612, 1622[[1644, 1675[[1676, 1697[[1698, 1708[ "OneSpillStore"
  v110|q QWORD "[vstack:3|q]" v0|q v0|q [685, 828[ "SpillInDominator"
  v111|d DWORD "[rbx|d]" v24|d v24|d [687, 688[688 MustHaveRegister  "SpillInDominator"
  v112|q QWORD "[rsi|q]" v0|q v0|q [828, 838[838 MustHaveRegister  "SpillInDominator"
  v113|d DWORD "[r10|d]" v1|d v1|d [842, 870[[1028, 1038[[1064, 1090[[1112, 1134[870 MustHaveRegister  "SpillInDominator"
  v114|q QWORD "[rcx|q]" v7|q v7|q [1708, 1729[ "OneSpillStore"
  v115|q QWORD "[r13|q]" v33|q v33|q [1708, 1729[ "OneSpillStore"
  v116|d DWORD "[vstack:2|d]" v24|d v24|d [1216, 1241[ "SpillInDominator"
  v117|q QWORD "[vstack:15|q]" v54|q v54|q [1482, 1507[ "OneSpillStore"
  v118|q QWORD "[vstack:3|q]" v0|q v0|q [1064, 1090[[1112, 1134[ "SpillInDominator"
  v119|d DWORD "[vstack:4|d]" v1|d v1|d [1134, 1159[ "SpillInDominator"
  v120|q QWORD "[vstack:14|q]" v72|q v72|q [1384, 1409[ "OneSpillStore"
  v121|q QWORD "[vstack:3|q]" v0|q v0|q [1134, 1155[ "SpillInDominator"
  v122|q QWORD "[vstack:3|q]" v0|q v0|q [1155, 1159[ "SpillInDominator"
  v123|d DWORD "[vstack:4|d]" v1|d v1|d [1159, 1318[[1416, 1514[ "SpillInDominator"
  v124|q QWORD "[vstack:3|q]" v0|q v0|q [1159, 1318[[1416, 1541[[1570, 1611[[1612, 1643[[1644, 1675[[1676, 1697[[1698, 1708[ "SpillInDominator"
  v125|q QWORD "[r11|q]" v6|q v6|q [1676, 1697[ "OneSpillStore"
  v126|q QWORD "[rsi|q]" v0|q v0|q [1708, 1729[ "SpillInDominator"
  v127|d DWORD "[vstack:2|d]" v24|d v24|d [1241, 1298[[1308, 1318[ "SpillInDominator"
  v128|q QWORD "[vstack:1|q]" v34|q v34|q [1241, 1298[[1308, 1318[[1570, 1611[[1698, 1708[ "SpillInDominator"
  v129|d DWORD "[vstack:13|d]" v26|d v26|d [1241, 1298[[1308, 1318[ "OneSpillStore"
  v130|d DWORD "[vstack:12|d]" v23|d v23|d [1241, 1298[[1308, 1318[ "OneSpillStore"
  v131|d DWORD "[vstack:11|d]" v22|d v22|d [1241, 1298[[1308, 1318[[1570, 1611[[1698, 1708[ "OneSpillStore"
  v132|q QWORD "[rbp|q]" v31|q v31|q [1590, 1611[ "OneSpillStore"
  v133|d DWORD "[r9|d]" v22|d v22|d [1708, 1729[ "OneSpillStore"
  v134|q QWORD "[r14|q]" v34|q v34|q [1708, 1729[ "SpillInDominator"
  v135|q QWORD "[vstack:14|q]" v72|q v72|q [1409, 1413[ "OneSpillStore"
  v136|q QWORD "[rsi|q]" v72|q v72|q [1542, 1569[ "OneSpillStore"
  v137|q QWORD "[vstack:15|q]" v54|q v54|q [1507, 1511[ "OneSpillStore"
  v138|q QWORD "[rsi|q]" v54|q v54|q [1514, 1541[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  206  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  294  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  332  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  392  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  394  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr  396  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  408  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  528  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr  532  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  554  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  610  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  684  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = STACKMOVE (input: v100|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = STACKMOVE (input: v93|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[_] = STACKMOVE (input: v91|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = STACKMOVE (input: v106|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[_] = STACKMOVE (input: v96|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = MOVE input: v105|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  694  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  696  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  698  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  754  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  790  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  806  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr  876  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  880  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  882  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  936  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  972  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  988  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = STACKMOVE (input: v119|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = STACKMOVE (input: v122|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr 1162  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1208  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr 1212  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD[_] = STACKMOVE (input: v116|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = STACKMOVE (input: v101|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[_] = STACKMOVE (input: v95|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = STACKMOVE (input: v94|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1244  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1284  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1290  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1294  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1360  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1408  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v120|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1430  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1458  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr 1460  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1506  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = STACKMOVE (input: v117|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1642  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1654  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr 1674  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1708  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- v79|d [0, 1[[82, 87[[404, 409[[686, 687[[1160, 1162[[1210, 1212[[1242, 1244[[1292, 1294[[1362, 1365[[1412, 1413[[1460, 1463[[1510, 1511[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[682, 687[[1160, 1161[[1200, 1211[[1242, 1243[[1282, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v32|q [0, 1[[680, 687[[1158, 1161[[1198, 1211[[1240, 1243[[1280, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v34|q [0, 22[[678, 687[[1156, 1161[[1196, 1211[[1238, 1243[[1278, 1293[[1410, 1413[[1508, 1511[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[686, 687[[1160, 1161[[1206, 1211[[1242, 1243[[1288, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v22|d [0, 1[[684, 687[[1160, 1161[[1202, 1211[[1242, 1243[[1284, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[686, 687[[1160, 1161[[1204, 1211[[1242, 1243[[1286, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [22, 636[22 MustHaveRegister 24 MustHaveRegister 290 MustHaveRegister 294 MustHaveRegister 332 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [24, 636[24 MustHaveRegister 26 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rax|d]" v2|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rdx|d]" v3|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rcx|q]" v5|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q v3|d [78, 211[[214, 256[[1134, 1159[78 MustHaveRegister 210 MustHaveRegister 1156 ShouldHaveRegister  "OneSpillStore"
  v7|q QWORD "[r9|q]" v7|q v1|d [80, 636[80 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v9|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d -1 [250, 256[[1676, 1697[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v11|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d rax|- [1162, 1164[1162 MustHaveRegister 1164 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|- [1212, 1213[1212 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[r8|q]" v16|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v17|d DWORD "[rax|d]" v17|d v5|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[rdx|q]" v19|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[rax|d]" v20|d -1 [290, 328[290 MustHaveRegister 292 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdx|d]" v21|d -1 [292, 308[292 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d -1 [294, 684[294 MustHaveRegister 296 MustHaveRegister 622 MustHaveRegister 634 MustHaveRegister 684 ShouldHaveRegister  "OneSpillStore"
  v23|d DWORD "[r8|d]" v23|d -1 [328, 608[328 MustHaveRegister 330 MustHaveRegister 402 MustHaveRegister 608 MustHaveRegister  "OneSpillStore"
  v24|d DWORD "[rbx|d]" v24|d -1 [330, 636[330 MustHaveRegister 336 MustHaveRegister 386 MustHaveRegister 400 MustHaveRegister  "StoreAtDefinition"
  v25|d DWORD "[rax|d]" v25|d -1 [332, 398[332 MustHaveRegister 334 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d -1 [334, 634[334 MustHaveRegister 634 ShouldHaveRegister  "OneSpillStore"
  v27|d DWORD "[rdx|d]" v27|d -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [388, 530[[536, 590[388 MustHaveRegister 390 MustHaveRegister 396 MustHaveRegister 408 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister 552 MustHaveRegister 572 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdi|q]" v30|q -1 [394, 533[[536, 556[394 MustHaveRegister 528 MustHaveRegister 532 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbp|q]" v31|q v28|d [396, 533[[536, 578[[1216, 1241[396 MustHaveRegister 532 MustHaveRegister 1238 ShouldHaveRegister  "OneSpillStore"
  v32|q QWORD "[rax|q]" v32|q v25|d [398, 403[398 MustHaveRegister  "OneSpillStore"
  v33|q QWORD "[r13|q]" v33|q v24|d [400, 636[400 MustHaveRegister  "OneSpillStore"
  v34|q QWORD "[r14|q]" v34|q v23|d [402, 405[402 MustHaveRegister  "StoreAtDefinition"
  v35|d DWORD "[r14|d]" v35|d -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [552, 554[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v36|d [554, 556[554 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdi|d]" v38|d -1 [572, 578[[1590, 1611[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d v38|d [574, 590[574 MustHaveRegister 576 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d rax|- [1244, 1246[1244 MustHaveRegister 1246 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d rax|- [1294, 1295[1294 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [526, 527[526 MustHaveRegister  "NoDefinitionFound"
  v43|q QWORD "[r14|q]" v43|q -1 [526, 527[526 MustHaveRegister  "NoDefinitionFound"
  v44|d DWORD "[rax|d]" v44|d v30|q [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q -1 [532, 533[532 MustHaveRegister  "NoDefinitionFound"
  v46|q QWORD "[rax|q]" v46|q -1 [532, 533[532 MustHaveRegister  "NoDefinitionFound"
  v47|d DWORD "[r8|d]" v47|d -1 [608, 636[[1570, 1590[[1698, 1729[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [688, 700[688 MustHaveRegister 690 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d -1 [690, 804[[1514, 1534[690 MustHaveRegister 692 MustHaveRegister 694 MustHaveRegister 752 MustHaveRegister 754 MustHaveRegister 786 MustHaveRegister 804 MustHaveRegister 1534 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d -1 [692, 790[[1514, 1541[692 MustHaveRegister 714 ShouldHaveRegister 784 ShouldHaveRegister 790 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d -1 [694, 698[694 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q -1 [696, 702[696 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q v51|d [698, 702[698 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v48|d [700, 808[[1064, 1080[[1112, 1124[[1416, 1482[700 MustHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q -1 [752, 753[752 MustHaveRegister  "NoDefinitionFound"
  v56|q QWORD "[r8|q]" v56|q -1 [752, 753[752 MustHaveRegister  "NoDefinitionFound"
  v57|d DWORD "[rdx|d]" v57|d v50|d [784, 786[784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rdx|d]" v58|d -1 [804, 808[[1064, 1076[804 MustHaveRegister 806 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[r11|d]" v59|d -1 [1076, 1080[[1112, 1124[[1416, 1504[1076 MustHaveRegister 1078 MustHaveRegister 1122 MustHaveRegister 1428 MustHaveRegister 1456 MustHaveRegister 1462 MustHaveRegister 1481 LiveAtLoopEnd 1504 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r10|q]" v60|q v59|d [1428, 1482[1428 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r8|d]" v61|d -1 [1456, 1479[1456 MustHaveRegister 1458 MustHaveRegister 1460 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r9|d]" v62|d v61|d [1458, 1462[1458 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r9|q]" v63|q -1 [1478, 1479[1478 MustHaveRegister  "NoDefinitionFound"
  v64|d DWORD "[r10|d]" v64|d -1 [1504, 1506[1504 MustHaveRegister 1506 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r10|q]" v65|q v64|d [1506, 1508[1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[rsi|d]" v66|d -1 [870, 882[870 MustHaveRegister 872 MustHaveRegister 882 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r10|d]" v67|d -1 [872, 986[[1542, 1562[872 MustHaveRegister 874 MustHaveRegister 876 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister 968 MustHaveRegister 986 MustHaveRegister 1562 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[r11|d]" v68|d -1 [874, 972[[1542, 1569[874 MustHaveRegister 896 ShouldHaveRegister 966 ShouldHaveRegister 972 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rdx|d]" v69|d -1 [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[r8|q]" v70|q -1 [878, 884[878 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdx|q]" v71|q v69|d [880, 884[880 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q v66|d [882, 990[[1038, 1054[[1090, 1102[[1318, 1384[882 MustHaveRegister  "OneSpillStore"
  v73|q QWORD "[rdx|q]" v73|q -1 [934, 935[934 MustHaveRegister  "NoDefinitionFound"
  v74|q QWORD "[r8|q]" v74|q -1 [934, 935[934 MustHaveRegister  "NoDefinitionFound"
  v75|d DWORD "[rdx|d]" v75|d v68|d [966, 968[966 MustHaveRegister 968 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rdx|d]" v76|d -1 [986, 990[[1038, 1050[986 MustHaveRegister 988 MustHaveRegister 1050 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[r10|d]" v77|d -1 [1050, 1054[[1090, 1102[[1318, 1406[1050 MustHaveRegister 1052 MustHaveRegister 1100 MustHaveRegister 1330 MustHaveRegister 1358 MustHaveRegister 1364 MustHaveRegister 1383 LiveAtLoopEnd 1406 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[r11|q]" v78|q v77|d [1330, 1384[1330 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[r8|d]" v79|d -1 [1358, 1381[1358 MustHaveRegister 1360 MustHaveRegister 1362 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[r9|d]" v80|d v79|d [1360, 1364[1360 MustHaveRegister 1364 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[r9|q]" v81|q -1 [1380, 1381[1380 MustHaveRegister  "NoDefinitionFound"
  v82|d DWORD "[r10|d]" v82|d -1 [1406, 1408[1406 MustHaveRegister 1408 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r10|q]" v83|q v82|d [1408, 1410[1408 MustHaveRegister 1410 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[r10|q]" v84|q v67|d [1562, 1569[1562 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[r10|q]" v85|q v49|d [1534, 1541[1534 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r10|d]" v86|d -1 [1708, 1724[1724 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[r11|q]" v87|q -1 [1708, 1726[1726 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r10|d]" v88|d -1 [1654, 1670[1670 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[r11|q]" v89|q -1 [1654, 1672[1672 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[vstack:3|q]" v0|q v0|q [636, 677[ "StoreAtDefinition"
  v91|d DWORD "[vstack:4|d]" v1|d v1|d [636, 685[ "StoreAtDefinition"
  v92|q QWORD "[vstack:9|q]" v6|q v6|q [1159, 1211[1196 ShouldHaveRegister  "OneSpillStore"
  v93|q QWORD "[vstack:5|q]" v7|q v7|q [636, 685[ "OneSpillStore"
  v94|d DWORD "[vstack:11|d]" v22|d v22|d [1216, 1241[ "OneSpillStore"
  v95|d DWORD "[vstack:12|d]" v23|d v23|d [1216, 1241[ "OneSpillStore"
  v96|d DWORD "[vstack:2|d]" v24|d v24|d [636, 685[ "StoreAtDefinition"
  v97|d DWORD "[vstack:13|d]" v26|d v26|d [1216, 1241[ "OneSpillStore"
  v98|q QWORD "[vstack:10|q]" v31|q v31|q [1241, 1293[1278 ShouldHaveRegister  "OneSpillStore"
  v99|q QWORD "[vstack:0|q]" v32|q v32|q [403, 680[[1216, 1298[[1308, 1318[[1570, 1611[[1698, 1708[680 ShouldHaveRegister  "OneSpillStore"
  v100|q QWORD "[vstack:6|q]" v33|q v33|q [636, 685[ "OneSpillStore"
  v101|q QWORD "[vstack:1|q]" v34|q v34|q [1216, 1241[ "StoreAtDefinition"
  v102|q QWORD "[rax|q]" v32|q v32|q [1708, 1729[ "OneSpillStore"
  v103|q QWORD "[r14|q]" v34|q v34|q [636, 678[678 ShouldHaveRegister  "StoreAtDefinition"
  v104|q QWORD "[vstack:1|q]" v34|q v34|q [405, 636[ "StoreAtDefinition"
  v105|d DWORD "[vstack:2|d]" v24|d v24|d [685, 687[ "StoreAtDefinition"
  v106|q QWORD "[vstack:3|q]" v0|q v0|q [677, 685[ "StoreAtDefinition"
  v107|d DWORD "[vstack:4|d]" v1|d v1|d [685, 842[ "StoreAtDefinition"
  v108|q QWORD "[vstack:6|q]" v33|q v33|q [685, 808[[1064, 1080[[1112, 1124[[1216, 1298[[1308, 1318[[1416, 1511[[1514, 1541[[1570, 1611[[1698, 1708[ "OneSpillStore"
  v109|q QWORD "[vstack:5|q]" v7|q v7|q [685, 990[[1028, 1054[[1064, 1102[[1112, 1413[[1416, 1541[[1542, 1569[[1570, 1611[[1612, 1622[[1644, 1675[[1676, 1697[[1698, 1708[ "OneSpillStore"
  v110|q QWORD "[vstack:3|q]" v0|q v0|q [685, 828[ "StoreAtDefinition"
  v111|d DWORD "[rbx|d]" v24|d v24|d [687, 688[688 MustHaveRegister  "StoreAtDefinition"
  v112|q QWORD "[rsi|q]" v0|q v0|q [828, 838[838 MustHaveRegister  "StoreAtDefinition"
  v113|d DWORD "[r10|d]" v1|d v1|d [842, 870[[1028, 1038[[1064, 1090[[1112, 1134[870 MustHaveRegister  "StoreAtDefinition"
  v114|q QWORD "[rcx|q]" v7|q v7|q [1708, 1729[ "OneSpillStore"
  v115|q QWORD "[r13|q]" v33|q v33|q [1708, 1729[ "OneSpillStore"
  v116|d DWORD "[vstack:2|d]" v24|d v24|d [1216, 1241[ "StoreAtDefinition"
  v117|q QWORD "[vstack:15|q]" v54|q v54|q [1482, 1507[ "OneSpillStore"
  v118|q QWORD "[vstack:3|q]" v0|q v0|q [1064, 1090[[1112, 1134[ "StoreAtDefinition"
  v119|d DWORD "[vstack:4|d]" v1|d v1|d [1134, 1159[ "StoreAtDefinition"
  v120|q QWORD "[vstack:14|q]" v72|q v72|q [1384, 1409[ "OneSpillStore"
  v121|q QWORD "[vstack:3|q]" v0|q v0|q [1134, 1155[ "StoreAtDefinition"
  v122|q QWORD "[vstack:3|q]" v0|q v0|q [1155, 1159[ "StoreAtDefinition"
  v123|d DWORD "[vstack:4|d]" v1|d v1|d [1159, 1318[[1416, 1514[ "StoreAtDefinition"
  v124|q QWORD "[vstack:3|q]" v0|q v0|q [1159, 1318[[1416, 1541[[1570, 1611[[1612, 1643[[1644, 1675[[1676, 1697[[1698, 1708[ "StoreAtDefinition"
  v125|q QWORD "[r11|q]" v6|q v6|q [1676, 1697[ "OneSpillStore"
  v126|q QWORD "[rsi|q]" v0|q v0|q [1708, 1729[ "StoreAtDefinition"
  v127|d DWORD "[vstack:2|d]" v24|d v24|d [1241, 1298[[1308, 1318[ "StoreAtDefinition"
  v128|q QWORD "[vstack:1|q]" v34|q v34|q [1241, 1298[[1308, 1318[[1570, 1611[[1698, 1708[ "StoreAtDefinition"
  v129|d DWORD "[vstack:13|d]" v26|d v26|d [1241, 1298[[1308, 1318[ "OneSpillStore"
  v130|d DWORD "[vstack:12|d]" v23|d v23|d [1241, 1298[[1308, 1318[ "OneSpillStore"
  v131|d DWORD "[vstack:11|d]" v22|d v22|d [1241, 1298[[1308, 1318[[1570, 1611[[1698, 1708[ "OneSpillStore"
  v132|q QWORD "[rbp|q]" v31|q v31|q [1590, 1611[ "OneSpillStore"
  v133|d DWORD "[r9|d]" v22|d v22|d [1708, 1729[ "OneSpillStore"
  v134|q QWORD "[r14|q]" v34|q v34|q [1708, 1729[ "StoreAtDefinition"
  v135|q QWORD "[vstack:14|q]" v72|q v72|q [1409, 1413[ "OneSpillStore"
  v136|q QWORD "[rsi|q]" v72|q v72|q [1542, 1569[ "OneSpillStore"
  v137|q QWORD "[vstack:15|q]" v54|q v54|q [1507, 1511[ "OneSpillStore"
  v138|q QWORD "[rsi|q]" v54|q v54|q [1514, 1541[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  206  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  294  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  332  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  392  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  394  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr  396  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  408  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  528  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr  532  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  554  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  610  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  684  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = STACKMOVE (input: v100|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = STACKMOVE (input: v93|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[_] = STACKMOVE (input: v91|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = STACKMOVE (input: v106|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[_] = STACKMOVE (input: v96|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = MOVE input: v105|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  694  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  696  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  698  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  754  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  790  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  806  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr  876  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  880  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  882  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  936  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  972  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  988  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = STACKMOVE (input: v119|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = STACKMOVE (input: v122|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr 1162  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1208  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr 1212  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD[_] = STACKMOVE (input: v116|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = STACKMOVE (input: v101|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[_] = STACKMOVE (input: v95|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = STACKMOVE (input: v94|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1244  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1284  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1290  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1294  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1360  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1408  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v120|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1430  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1458  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr 1460  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1506  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = STACKMOVE (input: v117|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [int[-181267|0xfffffffffffd3bed], long[3860|0xf14]] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [int[-180243|0xfffffffffffd3fed], long[3860|0xf14]] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [int[-178195|0xfffffffffffd47ed], long[3220|0xc94]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1642  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [int[-113971|0xfffffffffffe42cd], long[2580|0xa14]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1654  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr 1674  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction JUMP ~outgoingValues: [int[-179219|0xfffffffffffd43ed], long[5140|0x1414]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1708  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- v79|d [0, 1[[82, 87[[404, 409[[686, 687[[1160, 1162[[1210, 1212[[1242, 1244[[1292, 1294[[1362, 1365[[1412, 1413[[1460, 1463[[1510, 1511[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[682, 687[[1160, 1161[[1200, 1211[[1242, 1243[[1282, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v32|q [0, 1[[680, 687[[1158, 1161[[1198, 1211[[1240, 1243[[1280, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v34|q [0, 22[[678, 687[[1156, 1161[[1196, 1211[[1238, 1243[[1278, 1293[[1410, 1413[[1508, 1511[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[686, 687[[1160, 1161[[1206, 1211[[1242, 1243[[1288, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v22|d [0, 1[[684, 687[[1160, 1161[[1202, 1211[[1242, 1243[[1284, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[686, 687[[1160, 1161[[1204, 1211[[1242, 1243[[1286, 1293[[1412, 1413[[1510, 1511[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[686, 687[[1160, 1161[[1210, 1211[[1242, 1243[[1292, 1293[[1412, 1413[[1510, 1511[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [22, 636[22 MustHaveRegister 24 MustHaveRegister 290 MustHaveRegister 294 MustHaveRegister 332 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [24, 636[24 MustHaveRegister 26 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rax|d]" v2|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rdx|d]" v3|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rcx|q]" v5|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q v3|d [78, 211[[214, 256[[1134, 1159[78 MustHaveRegister 210 MustHaveRegister 1156 ShouldHaveRegister  "OneSpillStore"
  v7|q QWORD "[r9|q]" v7|q v1|d [80, 636[80 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v9|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d -1 [250, 256[[1676, 1697[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v11|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d rax|- [1162, 1164[1162 MustHaveRegister 1164 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|- [1212, 1213[1212 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[r8|q]" v16|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v17|d DWORD "[rax|d]" v17|d v5|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[rdx|q]" v19|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[rax|d]" v20|d -1 [290, 328[290 MustHaveRegister 292 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdx|d]" v21|d -1 [292, 308[292 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d -1 [294, 684[294 MustHaveRegister 296 MustHaveRegister 622 MustHaveRegister 634 MustHaveRegister 684 ShouldHaveRegister  "OneSpillStore"
  v23|d DWORD "[r8|d]" v23|d -1 [328, 608[328 MustHaveRegister 330 MustHaveRegister 402 MustHaveRegister 608 MustHaveRegister  "OneSpillStore"
  v24|d DWORD "[rbx|d]" v24|d -1 [330, 636[330 MustHaveRegister 336 MustHaveRegister 386 MustHaveRegister 400 MustHaveRegister  "StoreAtDefinition"
  v25|d DWORD "[rax|d]" v25|d -1 [332, 398[332 MustHaveRegister 334 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d -1 [334, 634[334 MustHaveRegister 634 ShouldHaveRegister  "OneSpillStore"
  v27|d DWORD "[rdx|d]" v27|d -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [388, 530[[536, 590[388 MustHaveRegister 390 MustHaveRegister 396 MustHaveRegister 408 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister 552 MustHaveRegister 572 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdi|q]" v30|q -1 [394, 533[[536, 556[394 MustHaveRegister 528 MustHaveRegister 532 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbp|q]" v31|q v28|d [396, 533[[536, 578[[1216, 1241[396 MustHaveRegister 532 MustHaveRegister 1238 ShouldHaveRegister  "OneSpillStore"
  v32|q QWORD "[rax|q]" v32|q v25|d [398, 403[398 MustHaveRegister  "OneSpillStore"
  v33|q QWORD "[r13|q]" v33|q v24|d [400, 636[400 MustHaveRegister  "OneSpillStore"
  v34|q QWORD "[r14|q]" v34|q v23|d [402, 405[402 MustHaveRegister  "StoreAtDefinition"
  v35|d DWORD "[r14|d]" v35|d -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [552, 554[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v36|d [554, 556[554 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdi|d]" v38|d -1 [572, 578[[1590, 1611[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d v38|d [574, 590[574 MustHaveRegister 576 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d rax|- [1244, 1246[1244 MustHaveRegister 1246 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d rax|- [1294, 1295[1294 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [526, 527[526 MustHaveRegister  "NoDefinitionFound"
  v43|q QWORD "[r14|q]" v43|q -1 [526, 527[526 MustHaveRegister  "NoDefinitionFound"
  v44|d DWORD "[rax|d]" v44|d v30|q [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q -1 [532, 533[532 MustHaveRegister  "NoDefinitionFound"
  v46|q QWORD "[rax|q]" v46|q -1 [532, 533[532 MustHaveRegister  "NoDefinitionFound"
  v47|d DWORD "[r8|d]" v47|d -1 [608, 636[[1570, 1590[[1698, 1729[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [688, 700[688 MustHaveRegister 690 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d -1 [690, 804[[1514, 1534[690 MustHaveRegister 692 MustHaveRegister 694 MustHaveRegister 752 MustHaveRegister 754 MustHaveRegister 786 MustHaveRegister 804 MustHaveRegister 1534 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d -1 [692, 790[[1514, 1541[692 MustHaveRegister 714 ShouldHaveRegister 784 ShouldHaveRegister 790 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d -1 [694, 698[694 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q -1 [696, 702[696 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q v51|d [698, 702[698 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v48|d [700, 808[[1064, 1080[[1112, 1124[[1416, 1482[700 MustHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q -1 [752, 753[752 MustHaveRegister  "NoDefinitionFound"
  v56|q QWORD "[r8|q]" v56|q -1 [752, 753[752 MustHaveRegister  "NoDefinitionFound"
  v57|d DWORD "[rdx|d]" v57|d v50|d [784, 786[784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rdx|d]" v58|d -1 [804, 808[[1064, 1076[804 MustHaveRegister 806 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[r11|d]" v59|d -1 [1076, 1080[[1112, 1124[[1416, 1504[1076 MustHaveRegister 1078 MustHaveRegister 1122 MustHaveRegister 1428 MustHaveRegister 1456 MustHaveRegister 1462 MustHaveRegister 1481 LiveAtLoopEnd 1504 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r10|q]" v60|q v59|d [1428, 1482[1428 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r8|d]" v61|d -1 [1456, 1479[1456 MustHaveRegister 1458 MustHaveRegister 1460 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r9|d]" v62|d v61|d [1458, 1462[1458 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r9|q]" v63|q -1 [1478, 1479[1478 MustHaveRegister  "NoDefinitionFound"
  v64|d DWORD "[r10|d]" v64|d -1 [1504, 1506[1504 MustHaveRegister 1506 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r10|q]" v65|q v64|d [1506, 1508[1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[rsi|d]" v66|d -1 [870, 882[870 MustHaveRegister 872 MustHaveRegister 882 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r10|d]" v67|d -1 [872, 986[[1542, 1562[872 MustHaveRegister 874 MustHaveRegister 876 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister 968 MustHaveRegister 986 MustHaveRegister 1562 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[r11|d]" v68|d -1 [874, 972[[1542, 1569[874 MustHaveRegister 896 ShouldHaveRegister 966 ShouldHaveRegister 972 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rdx|d]" v69|d -1 [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[r8|q]" v70|q -1 [878, 884[878 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdx|q]" v71|q v69|d [880, 884[880 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q v66|d [882, 990[[1038, 1054[[1090, 1102[[1318, 1384[882 MustHaveRegister  "OneSpillStore"
  v73|q QWORD "[rdx|q]" v73|q -1 [934, 935[934 MustHaveRegister  "NoDefinitionFound"
  v74|q QWORD "[r8|q]" v74|q -1 [934, 935[934 MustHaveRegister  "NoDefinitionFound"
  v75|d DWORD "[rdx|d]" v75|d v68|d [966, 968[966 MustHaveRegister 968 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rdx|d]" v76|d -1 [986, 990[[1038, 1050[986 MustHaveRegister 988 MustHaveRegister 1050 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[r10|d]" v77|d -1 [1050, 1054[[1090, 1102[[1318, 1406[1050 MustHaveRegister 1052 MustHaveRegister 1100 MustHaveRegister 1330 MustHaveRegister 1358 MustHaveRegister 1364 MustHaveRegister 1383 LiveAtLoopEnd 1406 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[r11|q]" v78|q v77|d [1330, 1384[1330 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[r8|d]" v79|d -1 [1358, 1381[1358 MustHaveRegister 1360 MustHaveRegister 1362 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[r9|d]" v80|d v79|d [1360, 1364[1360 MustHaveRegister 1364 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[r9|q]" v81|q -1 [1380, 1381[1380 MustHaveRegister  "NoDefinitionFound"
  v82|d DWORD "[r10|d]" v82|d -1 [1406, 1408[1406 MustHaveRegister 1408 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r10|q]" v83|q v82|d [1408, 1410[1408 MustHaveRegister 1410 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[r10|q]" v84|q v67|d [1562, 1569[1562 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[r10|q]" v85|q v49|d [1534, 1541[1534 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r10|d]" v86|d -1 [1708, 1724[1724 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[r11|q]" v87|q -1 [1708, 1726[1726 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r10|d]" v88|d -1 [1654, 1670[1670 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[r11|q]" v89|q -1 [1654, 1672[1672 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[vstack:3|q]" v0|q v0|q [636, 677[ "StoreAtDefinition"
  v91|d DWORD "[vstack:4|d]" v1|d v1|d [636, 685[ "StoreAtDefinition"
  v92|q QWORD "[vstack:9|q]" v6|q v6|q [1159, 1211[1196 ShouldHaveRegister  "OneSpillStore"
  v93|q QWORD "[vstack:5|q]" v7|q v7|q [636, 685[ "OneSpillStore"
  v94|d DWORD "[vstack:11|d]" v22|d v22|d [1216, 1241[ "OneSpillStore"
  v95|d DWORD "[vstack:12|d]" v23|d v23|d [1216, 1241[ "OneSpillStore"
  v96|d DWORD "[vstack:2|d]" v24|d v24|d [636, 685[ "StoreAtDefinition"
  v97|d DWORD "[vstack:13|d]" v26|d v26|d [1216, 1241[ "OneSpillStore"
  v98|q QWORD "[vstack:10|q]" v31|q v31|q [1241, 1293[1278 ShouldHaveRegister  "OneSpillStore"
  v99|q QWORD "[vstack:0|q]" v32|q v32|q [403, 680[[1216, 1298[[1308, 1318[[1570, 1611[[1698, 1708[680 ShouldHaveRegister  "OneSpillStore"
  v100|q QWORD "[vstack:6|q]" v33|q v33|q [636, 685[ "OneSpillStore"
  v101|q QWORD "[vstack:1|q]" v34|q v34|q [1216, 1241[ "StoreAtDefinition"
  v102|q QWORD "[rax|q]" v32|q v32|q [1708, 1729[ "OneSpillStore"
  v103|q QWORD "[r14|q]" v34|q v34|q [636, 678[678 ShouldHaveRegister  "StoreAtDefinition"
  v104|q QWORD "[vstack:1|q]" v34|q v34|q [405, 636[ "StoreAtDefinition"
  v105|d DWORD "[vstack:2|d]" v24|d v24|d [685, 687[ "StoreAtDefinition"
  v106|q QWORD "[vstack:3|q]" v0|q v0|q [677, 685[ "StoreAtDefinition"
  v107|d DWORD "[vstack:4|d]" v1|d v1|d [685, 842[ "StoreAtDefinition"
  v108|q QWORD "[vstack:6|q]" v33|q v33|q [685, 808[[1064, 1080[[1112, 1124[[1216, 1298[[1308, 1318[[1416, 1511[[1514, 1541[[1570, 1611[[1698, 1708[ "OneSpillStore"
  v109|q QWORD "[vstack:5|q]" v7|q v7|q [685, 990[[1028, 1054[[1064, 1102[[1112, 1413[[1416, 1541[[1542, 1569[[1570, 1611[[1612, 1622[[1644, 1675[[1676, 1697[[1698, 1708[ "OneSpillStore"
  v110|q QWORD "[vstack:3|q]" v0|q v0|q [685, 828[ "StoreAtDefinition"
  v111|d DWORD "[rbx|d]" v24|d v24|d [687, 688[688 MustHaveRegister  "StoreAtDefinition"
  v112|q QWORD "[rsi|q]" v0|q v0|q [828, 838[838 MustHaveRegister  "StoreAtDefinition"
  v113|d DWORD "[r10|d]" v1|d v1|d [842, 870[[1028, 1038[[1064, 1090[[1112, 1134[870 MustHaveRegister  "StoreAtDefinition"
  v114|q QWORD "[rcx|q]" v7|q v7|q [1708, 1729[ "OneSpillStore"
  v115|q QWORD "[r13|q]" v33|q v33|q [1708, 1729[ "OneSpillStore"
  v116|d DWORD "[vstack:2|d]" v24|d v24|d [1216, 1241[ "StoreAtDefinition"
  v117|q QWORD "[vstack:15|q]" v54|q v54|q [1482, 1507[ "OneSpillStore"
  v118|q QWORD "[vstack:3|q]" v0|q v0|q [1064, 1090[[1112, 1134[ "StoreAtDefinition"
  v119|d DWORD "[vstack:4|d]" v1|d v1|d [1134, 1159[ "StoreAtDefinition"
  v120|q QWORD "[vstack:14|q]" v72|q v72|q [1384, 1409[ "OneSpillStore"
  v121|q QWORD "[vstack:3|q]" v0|q v0|q [1134, 1155[ "StoreAtDefinition"
  v122|q QWORD "[vstack:3|q]" v0|q v0|q [1155, 1159[ "StoreAtDefinition"
  v123|d DWORD "[vstack:4|d]" v1|d v1|d [1159, 1318[[1416, 1514[ "StoreAtDefinition"
  v124|q QWORD "[vstack:3|q]" v0|q v0|q [1159, 1318[[1416, 1541[[1570, 1611[[1612, 1643[[1644, 1675[[1676, 1697[[1698, 1708[ "StoreAtDefinition"
  v125|q QWORD "[r11|q]" v6|q v6|q [1676, 1697[ "OneSpillStore"
  v126|q QWORD "[rsi|q]" v0|q v0|q [1708, 1729[ "StoreAtDefinition"
  v127|d DWORD "[vstack:2|d]" v24|d v24|d [1241, 1298[[1308, 1318[ "StoreAtDefinition"
  v128|q QWORD "[vstack:1|q]" v34|q v34|q [1241, 1298[[1308, 1318[[1570, 1611[[1698, 1708[ "StoreAtDefinition"
  v129|d DWORD "[vstack:13|d]" v26|d v26|d [1241, 1298[[1308, 1318[ "OneSpillStore"
  v130|d DWORD "[vstack:12|d]" v23|d v23|d [1241, 1298[[1308, 1318[ "OneSpillStore"
  v131|d DWORD "[vstack:11|d]" v22|d v22|d [1241, 1298[[1308, 1318[[1570, 1611[[1698, 1708[ "OneSpillStore"
  v132|q QWORD "[rbp|q]" v31|q v31|q [1590, 1611[ "OneSpillStore"
  v133|d DWORD "[r9|d]" v22|d v22|d [1708, 1729[ "OneSpillStore"
  v134|q QWORD "[r14|q]" v34|q v34|q [1708, 1729[ "StoreAtDefinition"
  v135|q QWORD "[vstack:14|q]" v72|q v72|q [1409, 1413[ "OneSpillStore"
  v136|q QWORD "[rsi|q]" v72|q v72|q [1542, 1569[ "OneSpillStore"
  v137|q QWORD "[vstack:15|q]" v54|q v54|q [1507, 1511[ "OneSpillStore"
  v138|q QWORD "[rsi|q]" v54|q v54|q [1514, 1541[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  206  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  294  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  332  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  392  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  394  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr  396  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  408  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  528  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr  532  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  554  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  610  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[_] = MOVE input: v24|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOVE input: v1|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  684  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = STACKMOVE (input: v100|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = STACKMOVE (input: v93|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[_] = STACKMOVE (input: v91|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = STACKMOVE (input: v106|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[_] = STACKMOVE (input: v96|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = MOVE input: v105|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  694  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  696  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  698  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  754  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  790  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  806  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOVE input: v107|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr  876  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  880  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  882  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  936  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  972  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  988  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOVE input: v107|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[_] = MOVE input: v113|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[_] = MOVE input: v113|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|DWORD[_] = MOVE input: v1|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = STACKMOVE (input: v119|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = STACKMOVE (input: v122|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr 1162  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1208  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr 1212  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOVE input: v123|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[_] = MOVE input: v24|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOVE input: v23|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = MOVE input: v1|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD[_] = STACKMOVE (input: v116|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = STACKMOVE (input: v101|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[_] = STACKMOVE (input: v95|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = STACKMOVE (input: v94|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1244  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1284  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1290  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1294  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOVE input: v127|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOVE input: v130|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOVE input: v123|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOVE input: v123|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOVE input: v127|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOVE input: v130|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOVE input: v123|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1360  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1408  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v120|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = MOVE input: v113|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1430  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1458  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr 1460  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1506  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = STACKMOVE (input: v117|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1642  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] // MoveResolver resolve mapping <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1654  <|@ instruction [v88|DWORD, v89|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr 1674  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1706  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1708  <|@ instruction [v86|DWORD, v87|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|QWORD[.] = MOV input: [v4|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v3|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v8|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v15|QWORD, temp2: v16|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  206  <|@ instruction v17|DWORD[_] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 12], y: v17|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v6|QWORD[.], ~newValue: v5|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v9|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v5|QWORD[.], y: v10|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v11|DWORD = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v20|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v21|DWORD = MOV input: [v20|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  294  <|@ instruction v22|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v21|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v23|DWORD[_] = MOV input: [v20|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v24|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  332  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v24|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v27|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction v28|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v28|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  392  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  394  <|@ instruction v30|QWORD[.] = MOV input: [v29|QWORD] size: QWORD <|@ <|@
      nr  396  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  406  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  408  <|@ instruction rax|DWORD = CAS (address: [v28|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v35|DWORD) accessKind: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v28|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v42|QWORD, temp2: v43|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  528  <|@ instruction v44|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 12], y: v44|DWORD[_]) size: DWORD <|@ <|@
      nr  532  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v31|QWORD[.], ~newValue: v30|QWORD[.]) {temp: v45|QWORD, temp2: v46|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  554  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v30|QWORD[.], y: v37|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v38|DWORD = MOV input: [v28|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [v28|DWORD[_] * 8 + 16], y: v39|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v47|DWORD = MOVZXB input: [v23|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  610  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  678  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  684  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = STACKMOVE (input: v100|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = STACKMOVE (input: v93|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = MOVE input: v105|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction v48|DWORD[_] = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v49|DWORD[_] = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  694  <|@ instruction v51|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  696  <|@ instruction v52|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  698  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v53|QWORD[.], y: [v52|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v49|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v55|QWORD, temp2: v56|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  754  <|@ instruction MOV x: [v49|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction v57|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV (x: [v49|DWORD[_] * 8 + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  790  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v58|DWORD[_] = MOV input: [v49|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  806  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOVE input: v107|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v66|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v67|DWORD[_] = MOV input: [v66|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction v68|DWORD = MOV input: [v67|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr  876  <|@ instruction v69|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction v70|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  880  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  882  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v71|QWORD[.], y: [v70|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v67|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v73|QWORD, temp2: v74|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  936  <|@ instruction MOV x: [v67|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction v75|DWORD = DEC value: v68|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [v67|DWORD[_] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  972  <|@ instruction CMPCONSTBRANCH x: v68|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v76|DWORD[_] = MOV input: [v67|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  988  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction v77|DWORD[_] = MOV input: [v76|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction TESTBRANCH (x: v77|DWORD[_], y: v77|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOVE input: v107|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v59|DWORD[_], y: v59|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPCONSTBRANCH x: [v77|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: [v59|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v6|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr 1162  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1208  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr 1212  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOVE input: v123|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOVE input: v23|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[_] = STACKMOVE (input: v95|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = STACKMOVE (input: v94|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v31|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1244  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1284  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1290  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1294  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOVE input: v127|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOVE input: v130|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOVE input: v123|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOVE input: v123|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOVE input: v127|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOVE input: v130|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOVE input: v123|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction v79|DWORD = MOV input: [v77|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1360  <|@ instruction v80|DWORD = AND x: v79|DWORD y: -2 size: DWORD <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction rax|DWORD = CAS (address: [v77|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v80|DWORD) accessKind: DWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v78|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v79|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v78|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v78|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v81|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction v82|DWORD[_] = MOV input: [v77|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1408  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v120|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1430  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction v61|DWORD = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1458  <|@ instruction v62|DWORD = AND x: v61|DWORD y: -2 size: DWORD <|@ <|@
      nr 1460  <|@ instruction rax|DWORD = MOVE input: v61|DWORD moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction rax|DWORD = CAS (address: [v59|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v62|DWORD) accessKind: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v60|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v61|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v60|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v60|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction v64|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1506  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = STACKMOVE (input: v117|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v50|DWORD 
locals: v85|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v85|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v54|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v68|DWORD 
locals: v84|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v84|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v38|DWORD 
locals: v31|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v31|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v33|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD v33|QWORD[.] v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1642  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] // MoveResolver resolve mapping <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v88|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v89|QWORD) size: QWORD <|@ <|@
      nr 1674  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v11|DWORD 
locals: v6|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v6|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v7|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: v0|QWORD[.] v7|QWORD[.] v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1706  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v86|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v87|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v47|DWORD 
locals: v34|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v34|QWORD[.] v32|QWORD[.] int[0|0x0] v22|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v33|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: v0|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - v7|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  206  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  294  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  332  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  392  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  394  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  406  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  408  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  528  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  532  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  610  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  684  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  694  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  696  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  754  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  790  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  806  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr  876  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  882  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  936  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  972  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  988  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1208  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] int[0|0x0] vstack:11|DWORD vstack:6|QWORD[.] vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1246  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1284  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1290  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] int[0|0x0] vstack:11|DWORD vstack:6|QWORD[.] vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1360  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1408  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:14|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1430  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1460  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:15|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] int[0|0x0] vstack:11|DWORD vstack:6|QWORD[.] vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1642  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: vstack:3|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] // MoveResolver resolve mapping <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1674  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1706  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  206  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  294  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  332  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  392  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  394  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  406  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  408  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  528  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  532  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  610  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  684  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr  694  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  696  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  754  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  788  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  790  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  806  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr  876  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  882  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  936  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  972  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  988  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1208  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] int[0|0x0] vstack:11|DWORD vstack:6|QWORD[.] vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr 1246  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1284  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1290  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] int[0|0x0] vstack:11|DWORD vstack:6|QWORD[.] vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1360  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1408  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:14|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1430  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1460  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1462  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:15|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1566  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1568  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] int[0|0x0] vstack:11|DWORD vstack:6|QWORD[.] vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1642  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: vstack:3|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] // MoveResolver resolve mapping <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1674  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1706  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction vstack:4|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction vstack:2|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction vstack:1|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction vstack:0|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction vstack:9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction vstack:13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction vstack:12|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction vstack:10|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] int[0|0x0] vstack:11|DWORD vstack:6|QWORD[.] vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] int[0|0x0] vstack:11|DWORD vstack:6|QWORD[.] vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: vstack:4|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction vstack:14|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:14|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction vstack:15|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:15|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1352  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr  994  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction r9|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] int[0|0x0] vstack:11|DWORD vstack:6|QWORD[.] vstack:6|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: vstack:3|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: vstack:3|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:5|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: vstack:3|QWORD[.] vstack:5|QWORD[.] vstack:5|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction vstack:6|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction vstack:5|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1792  <|@ instruction r14|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1794  <|@ instruction r13|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1798  <|@ instruction r9|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [550, 1796[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [548, 1792[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [474, 1066[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [22, 1902[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [26, 1380[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [136, 1880[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [604, 1794[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [204, 254[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [684, 734[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[vstack:11|d]" vstack:11|d -1 [606, 1798[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[vstack:12|d]" vstack:12|d -1 [654, 768[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[vstack:13|d]" vstack:13|d -1 [652, 764[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[vstack:14|q]" vstack:14|q -1 [1658, 1686[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[vstack:15|q]" vstack:15|q -1 [1322, 1350[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:80|q]" vstack:0|q -1 [550, 1796[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:64|q]" vstack:1|q -1 [548, 1792[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:68|d]" vstack:2|d -1 [474, 1066[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:40|q]" vstack:3|q -1 [22, 1902[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:44|d]" vstack:4|d -1 [26, 1380[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:56|q]" vstack:5|q -1 [136, 1880[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:88|q]" vstack:6|q -1 [604, 1794[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:64|q]" vstack:9|q -1 [204, 254[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:104|q]" vstack:10|q -1 [684, 734[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[stack:28|d]" vstack:11|d -1 [606, 1798[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[stack:92|d]" vstack:12|d -1 [654, 768[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[stack:32|d]" vstack:13|d -1 [652, 764[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[stack:104|q]" vstack:14|q -1 [1658, 1686[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[stack:104|q]" vstack:15|q -1 [1322, 1350[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1352  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr  994  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1792  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1794  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1798  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1352  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr  994  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1792  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1794  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1798  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:68, stack:72]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:68, stack:72]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:68, stack:72]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [rax:0, rsi:0, r9:0, r10:0, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [stack:24, stack:44, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@reference-map: [rsi:0, stack:24, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [rsi:0, stack:56]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:56]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:32, stack:44, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:32, stack:44, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:56]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@reference-map: [stack:8, stack:56]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:24, stack:56, stack:68, stack:72]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32, stack:48, stack:56, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@reference-map: [stack:56, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:56, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:56]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:68, stack:72]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:68, stack:72]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:68, stack:72]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  396  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  400  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [rax:0, rsi:0, r9:0, r10:0, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B67" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B66" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  474  <|@ instruction stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18] <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: r9|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: rsi|QWORD[.] r9|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18] <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  554  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  556  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605827099331238091
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  896  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  900  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr  902  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" "B20" "B18" 
    successors "B24" "B64" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD <|@ <|@
      nr  918  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B63" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [stack:24, stack:44, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22] <|@ <|@
      nr 1066  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@reference-map: [rsi:0, stack:24, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22] <|@ <|@
      nr 1074  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1082  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605827005557536283
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1134  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B43" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4605819244612253218
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1186  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605813905811548834
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" "B43" "B42" "B38" "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607018860625037399
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr 1380  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" "B44" 
    successors "B46" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [rsi:0, stack:56]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25] <|@ <|@
      nr 1416  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:56]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1424  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58 <|@ <|@
      nr 1478  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1512  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1514  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4605960616562808448
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605955179023983428
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B60" "B59" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594055229239371264
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593966484341672146
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593935440560539889
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4593935065465732655
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction rax|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593933649052408220
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580891083007784224
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4558707263028391924
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1556  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4558146067974267383
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4558606155192861102
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558055150658149364
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4544103945628082126
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" 
    xhandlers
    flags 
    probability 4543141461844617514
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4543940897317477287
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4542995890897021877
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4538990537905775537
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18] <|@ <|@
      nr  256  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4540926453738975753
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:32, stack:44, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:104|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4538838562859597851
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  728  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  732  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:32, stack:44, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:104|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22] <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4533014707351182857
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4532889465965135854
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1604  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:56]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26] <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533817495775065380
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1632  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4529313896147694884
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@reference-map: [stack:8, stack:56]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26] <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:24, stack:56, stack:68, stack:72]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r10|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r10|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B41" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533677676870991759
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1296  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4529174077243621263
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:56, stack:68, stack:72]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:104|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22] <|@ <|@
      nr 1354  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1778  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B25" "B64" "B27" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  950  <|@ instruction r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1826  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r8|DWORD 
locals: r14|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: r14|QWORD[.] rax|QWORD[.] int[0|0x0] r9|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - r13|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: rsi|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - rcx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32, stack:48, stack:56, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rdi|DWORD 
locals: rbp|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rbp|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:80|QWORD[.] int[0|0x0] stack:28|DWORD stack:88|QWORD[.] stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1830  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1840  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1880  <|@ st <@st|@reference-map: [stack:56, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1768  <|@ instruction MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:56, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:88|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:88|QWORD[.] - - 
java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7]
locals: - - - - 
java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25]
locals: stack:40|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r8|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD <|@ <|@
      nr 1744  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:56]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26]
locals: - - stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD <|@ <|@
      nr 1900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1902  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0]
locals: stack:40|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B65 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // java.io.Writer.lock:java.lang.Object
     4: astore_1      
     5: aload_1       
     6: instanceof    #78         // jdk.internal.misc.InternalLock
     9: ifeq          42
    12: aload_1       
    13: checkcast     #78         // jdk.internal.misc.InternalLock
    16: astore_2      
    17: aload_2       
    18: invokevirtual #16         // jdk.internal.misc.InternalLock.lock:()void
    21: aload_0       
    22: invokevirtual #17         // implFlushBuffer:()void
    25: aload_2       
    26: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    29: goto          39
    32: astore_3      
    33: aload_2       
    34: invokevirtual #18         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_3       
    38: athrow        
    39: goto          62
    42: aload_1       
    43: dup           
    44: astore_3      
    45: monitorenter  
    46: aload_0       
    47: invokevirtual #17         // implFlushBuffer:()void
    50: aload_3       
    51: monitorexit   
    52: goto          62
    55: astore        4
    57: aload_3       
    58: monitorexit   
    59: aload         4
    61: athrow        
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec689041817f20000000000f85590b0000909090909090909048896c24604889742448448b5610448954244442813cd508000000addeadde0f85c40a000090909090909090909090909090909090909090428b04d50c0000008b14c50c0000008504d500000000498b8780030000488b08448bda49c1e303458bca49c1e103b80000000041b801000000f0440fb104d5100000000f8527050000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000448b04d50c00000049c1e0034d85c00f841d000000498b47284883f8000f847a0a00004883e80849894728490347384c8900488bc148c1e8038904d50c000000498bc34833c148c1e8160f8442000000498bc348c1e80948ba00e0368d787f00004803c28038027429f083042400803800741fc60000498b57484885d20f84290a00004883ea084989574849035758488902909090909090908b46208b14c508000000448b5e184585db0f84da0400009090909081faaddeadde0f858f0900009090909090909090448b04c514000000428b1cc510000000895c242c8b46248b0cc50c000000813cdd08000000addeadde0f854408000090909090909090909090909090909090909090909090908b14dd0c0000008b14d50c0000008504d500000000498bbf80030000488b3f8bea48c1e50348c1e003448beb49c1e503458bf049c1e6034c897424304889442420b80000000041be01000000f0440fb134d5100000000f85d6030000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000448b34d50c00000049c1e6034d85f60f841d000000498b47284883f8000f84eb0800004883e80849894728490347384c8930488bc748c1e8038904d50c000000488bd54833d748c1ea160f8442000000488bd548c1ea0948b800e0368d787f00004803d0803a027429f083042400803a00741fc60200498b47484885c00f849a0800004883e80849894748490347584889109090909090460fb604c51a0000004585c00f854d060000909090904585db0f8c9e07000090909090443bd90f8ff90700004c8b7424304c896c24184c894c24389090909090909090909090909090909090909090498bf6488b542420b900000000458bc36690e8000000000f1f8400000000008b5c242c8b34dd0c000000448b14f50c000000468b1cd510000000428b14d50c0000004d8b878003000048c1e20348c1e603493b100f8585060000909090904183fb010f853d020000909090909090909090909090909090909041807f40000f8432000000468b04d50c00000049c1e0034d85c00f841d000000498b57284883fa000f849f0700004883ea0849895728490357384c890242c704d50c0000000000000090909090909090418bd3ffca428914d510000000f0830424004183fb010f85b80100009090909090428b14d51400000085d20f8528020000909090488b74244890909090c7461800000000448b54244490909090909090909090909090428b34d50c000000448b14f50c000000468b1cd510000000428b14d50c0000004d8b878003000048c1e20348c1e603493b100f85e7050000909090904183fb010f85e4000000909090909090909090909090909090909041807f40000f8432000000468b04d50c00000049c1e0034d85c00f841d000000498b57284883fa000f84b10600004883ea0849895728490357384c890242c704d50c0000000000000090909090909090418bd3ffca428914d510000000f0830424004183fb010f85620000009090909090428b14d51400000085d20f850d01000090909090909090909090488b6c24604883c468493ba7d804000072234883ec08498bff48b90000000000000000ffd14883c40848b90000000000000000ffe1493ba7500400000f8721060000c3909090ebb1909090e96effffff909090909090908b04d50c00000048c1e003483bc80f850f010000909090909090448b04d510000000418bc0ffc085c00f8c8804000090909090908904d510000000f083042400e962fbffff909090e958feffff909090e915feffff909090909090908b04d50c00000048c1e003483bf80f85430100009090909090908b3cd5100000008bc7ffc085c00f8c8e03000090909090908904d510000000f083042400e9b5fcffff4c894c2438909090e90efeffff9090909090448b14d5140000004585d20f852b000000909090e9d8feffff448b5424449090909090448b1cd5140000004585db0f8523000000909090e9b8fdffff9090909042833cd50c000000000f85af010000909090e99afeffff9090909042833cdd0c000000000f851d020000909090e982fdffff4c894c243890909090909090909090498bf3ba010000004c895c2430666690e8000000000f1f84000000000085c00f85130100009090909090909090909090909090488b74243048c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8000000000f1f8400000000004c8b4c2438448b542444488b742448e9f4f9ffff4c896c2418894c2450448944241444895c24544c894c243890909090909090909090488bf5ba0100000048896c2408e8000000000f1f84000000000085c00f858a0000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8000000000f1f8400000000004c8b6c24188b4c24508b5c242c448b442414448b5c24544c8b4c2438448b542444488b742448e9eafaffff9090904c8b4c2438448b542444488b742448e926f9ffff9090904c8b6c24188b4c24508b5c242c448b442414448b5c24544c8b4c2438448b542444488b742448e9a5faffff9090909090458bda49c1e303e91e0000006666660f1f8400000000006666669090909090904d8b8f580400004185019090909090909090909090468b04d50c000000458bc84183e1fe418bc0f0460fb10cd50c00000075c8488974240890909090909090909090468b14d51800000049c1e203498bf290e8000000000f1f840000000000e96afcffff9090909090458bd349c1e203e915000000660f1f44000090909090904d8b8f580400004185019090909090909090909090468b04dd0c000000458bc84183e1fe418bc0f0460fb10cdd0c00000075c8488974240890909090909090909090468b14dd1800000049c1e203498bf290e8000000000f1f840000000000e9edfaffff4c896c241844895c24544c894c243890909049c7c31414000041baed43fdff4c8b7424304c8b6c2418488b442420448b4c2454488b4c2438488b74244890909090909090458997840400004d899f90040000e8000000000f1f8400000000004c896c241844895c24544c894c24389090909090909041c78784040000ed32fdff49c7879004000094020000e8000000000f1f8400000000004c894c243890909049c7c3940c000041baed47fdff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909090909090909049c1e20341c78784040000ed37fdff49c78790040000946b0000e8000000000f1f8400000000004c894c24389090909090909041c78784040000ed29fdff49c7879004000094020000e8000000000f1f84000000000090909090909090909049c1e20341c78784040000ed2efdff49c78790040000946b0000e8000000000f1f8400000000004c896c241844895c24544c894c243890909049c7c3140f000041baed3ffdffe99dfeffff9090909090909041c78784040000ed5bfdff49c7879004000014000000e8000000000f1f8400000000004c894c243890909049c7c3140a000041bacd42feffe9e7feffff4c896c241844895c24544c894c243890909049c7c3140f000041baed3bfdffe935feffff48896c2460e800000000e998f4fffff44c890424e800000000e987f5fffff448890424e800000000e9d8f5fffff44c893424e800000000e916f7fffff448891424e800000000e967f7fffff44c890424e800000000e962f8fffff44c890424e800000000e950f9fffff4488d0dcbf9ffff49898f68040000e9f0f3fffff441c78784040000ed5bfdff49c7879004000014000000e8000000000f1f84000000000041c78784040000f555feff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed57fdff49c7879004000094070000e8000000000f1f84000000000041c78784040000f53dfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f52afeff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed47fdff49c78790040000940c0000e8000000000f1f84000000000041c78784040000f536feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f523feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f51ffeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f6fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f2fdff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD  <||@
  Comment 71 22 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 76 24 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 80 26 stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 85 28 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0]  <||@
  Comment 85 [rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 {meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}}  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 103 32 NOP  <||@
  Comment 104 34 NOP  <||@
  Comment 105 36 NOP  <||@
  Comment 106 38 NOP  <||@
  Comment 107 40 NOP  <||@
  Comment 108 42 NOP  <||@
  Comment 109 44 NOP  <||@
  Comment 110 46 NOP  <||@
  Comment 111 48 NOP  <||@
  Comment 112 50 NOP  <||@
  Comment 113 52 NOP  <||@
  Comment 114 54 NOP  <||@
  Comment 115 56 NOP  <||@
  Comment 116 58 NOP  <||@
  Comment 117 60 NOP  <||@
  Comment 118 62 NOP  <||@
  Comment 119 64 NOP  <||@
  Comment 120 66 NOP  <||@
  Comment 121 68 NOP  <||@
  Comment 122 70 rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 130 72 rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 130 [rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 137 74 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 137 [rdx:0, rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 137 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 144 76 rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 151 78 rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD  <||@
  Comment 154 80 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 161 82 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 168 84 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 173 86 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 179 88 rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD  <||@
  Comment 189 90 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9  <||@
  Comment 195 block B9 null  <||@
  Comment 195 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 195 282 NOP  <||@
  Comment 196 284 NOP  <||@
  Comment 197 286 NOP  <||@
  Comment 198 288 NOP  <||@
  Comment 199 290 NOP  <||@
  Comment 200 292 NOP  <||@
  Comment 201 294 NOP  <||@
  Comment 202 296 NOP  <||@
  Comment 203 298 NOP  <||@
  Comment 204 300 NOP  <||@
  Comment 205 302 NOP  <||@
  Comment 206 304 NOP  <||@
  Comment 207 306 NOP  <||@
  Comment 208 308 NOP  <||@
  Comment 209 310 NOP  <||@
  Comment 210 312 NOP  <||@
  Comment 211 314 NOP  <||@
  Comment 212 316 NOP  <||@
  Comment 213 318 NOP  <||@
  Comment 214 320 NOP  <||@
  Comment 215 322 NOP  <||@
  Comment 216 324 NOP  <||@
  Comment 217 326 NOP  <||@
  Comment 218 328 NOP  <||@
  Comment 219 330 NOP  <||@
  Comment 220 332 NOP  <||@
  Comment 221 334 NOP  <||@
  Comment 222 336 NOP  <||@
  Comment 223 338 NOP  <||@
  Comment 224 340 NOP  <||@
  Comment 225 342 NOP  <||@
  Comment 226 344 NOP  <||@
  Comment 227 346 NOP  <||@
  Comment 228 348 NOP  <||@
  Comment 229 350 NOP  <||@
  Comment 230 352 NOP  <||@
  Comment 231 354 NOP  <||@
  Comment 232 356 NOP  <||@
  Comment 233 358 NOP  <||@
  Comment 234 360 NOP  <||@
  Comment 235 362 NOP  <||@
  Comment 236 364 NOP  <||@
  Comment 237 366 NOP  <||@
  Comment 238 368 NOP  <||@
  Comment 239 370 NOP  <||@
  Comment 240 372 NOP  <||@
  Comment 241 374 NOP  <||@
  Comment 242 376 NOP  <||@
  Comment 243 378 NOP  <||@
  Comment 244 380 NOP  <||@
  Comment 245 382 NOP  <||@
  Comment 246 384 NOP  <||@
  Comment 247 386 NOP  <||@
  Comment 248 388 NOP  <||@
  Comment 249 390 NOP  <||@
  Comment 250 392 NOP  <||@
  Comment 251 394 AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 312 396 rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 319 398 MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 326 400 AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 408 402 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 408 block B10 null  <||@
  Comment 408 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 406 NOP  <||@
  Comment 409 408 NOP  <||@
  Comment 410 410 NOP  <||@
  Comment 411 412 NOP  <||@
  Comment 412 414 NOP  <||@
  Comment 413 416 NOP  <||@
  Comment 414 418 NOP  <||@
  Comment 415 420 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 418 422 rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18]  <||@
  Comment 418 [rax:0, rsi:0, r9:0, r10:0, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 418 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 425 424 r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 429 426 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 438 block B12 null  <||@
  Comment 438 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 438 442 NOP  <||@
  Comment 439 444 NOP  <||@
  Comment 440 446 NOP  <||@
  Comment 441 448 NOP  <||@
  Comment 442 450 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed}  <||@
  Comment 442 {meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed}}  <||@
  Comment 454 block B13 null  <||@
  Comment 454 452 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 454 NOP  <||@
  Comment 455 456 NOP  <||@
  Comment 456 458 NOP  <||@
  Comment 457 460 NOP  <||@
  Comment 458 462 NOP  <||@
  Comment 459 464 NOP  <||@
  Comment 460 466 NOP  <||@
  Comment 461 468 NOP  <||@
  Comment 462 470 r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 470 472 rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18]  <||@
  Comment 470 [rsi:0, r8:0, r9:0, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 470 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 478 474 stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD  <||@
  Comment 482 476 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 485 478 rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18]  <||@
  Comment 485 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 485 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 492 480 CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18]  <||@
  Comment 492 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 492 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 492 {meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}}  <||@
  Comment 509 block B14 null  <||@
  Comment 509 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 509 484 NOP  <||@
  Comment 510 486 NOP  <||@
  Comment 511 488 NOP  <||@
  Comment 512 490 NOP  <||@
  Comment 513 492 NOP  <||@
  Comment 514 494 NOP  <||@
  Comment 515 496 NOP  <||@
  Comment 516 498 NOP  <||@
  Comment 517 500 NOP  <||@
  Comment 518 502 NOP  <||@
  Comment 519 504 NOP  <||@
  Comment 520 506 NOP  <||@
  Comment 521 508 NOP  <||@
  Comment 522 510 NOP  <||@
  Comment 523 512 NOP  <||@
  Comment 524 514 NOP  <||@
  Comment 525 516 NOP  <||@
  Comment 526 518 NOP  <||@
  Comment 527 520 NOP  <||@
  Comment 528 522 NOP  <||@
  Comment 529 524 NOP  <||@
  Comment 530 526 NOP  <||@
  Comment 531 528 NOP  <||@
  Comment 532 530 rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 539 532 rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18]  <||@
  Comment 539 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 539 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 546 534 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18]  <||@
  Comment 546 [rax:0, rdx:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 546 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 553 536 rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 560 538 rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD  <||@
  Comment 563 540 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 569 542 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 573 544 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 580 546 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 587 548 stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 592 550 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 597 552 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 602 554 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 608 556 rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD  <||@
  Comment 618 558 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22  <||@
  Comment 624 block B22 null  <||@
  Comment 624 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 624 782 NOP  <||@
  Comment 625 784 NOP  <||@
  Comment 626 786 NOP  <||@
  Comment 627 788 NOP  <||@
  Comment 628 790 NOP  <||@
  Comment 629 792 NOP  <||@
  Comment 630 794 NOP  <||@
  Comment 631 796 NOP  <||@
  Comment 632 798 NOP  <||@
  Comment 633 800 NOP  <||@
  Comment 634 802 NOP  <||@
  Comment 635 804 NOP  <||@
  Comment 636 806 NOP  <||@
  Comment 637 808 NOP  <||@
  Comment 638 810 NOP  <||@
  Comment 639 812 NOP  <||@
  Comment 640 814 NOP  <||@
  Comment 641 816 NOP  <||@
  Comment 642 818 NOP  <||@
  Comment 643 820 NOP  <||@
  Comment 644 822 NOP  <||@
  Comment 645 824 NOP  <||@
  Comment 646 826 NOP  <||@
  Comment 647 828 NOP  <||@
  Comment 648 830 NOP  <||@
  Comment 649 832 NOP  <||@
  Comment 650 834 NOP  <||@
  Comment 651 836 NOP  <||@
  Comment 652 838 NOP  <||@
  Comment 653 840 NOP  <||@
  Comment 654 842 NOP  <||@
  Comment 655 844 NOP  <||@
  Comment 656 846 NOP  <||@
  Comment 657 848 NOP  <||@
  Comment 658 850 NOP  <||@
  Comment 659 852 NOP  <||@
  Comment 660 854 NOP  <||@
  Comment 661 856 NOP  <||@
  Comment 662 858 NOP  <||@
  Comment 663 860 NOP  <||@
  Comment 664 862 NOP  <||@
  Comment 665 864 NOP  <||@
  Comment 666 866 NOP  <||@
  Comment 667 868 NOP  <||@
  Comment 668 870 NOP  <||@
  Comment 669 872 NOP  <||@
  Comment 670 874 NOP  <||@
  Comment 671 876 NOP  <||@
  Comment 672 878 NOP  <||@
  Comment 673 880 NOP  <||@
  Comment 674 882 NOP  <||@
  Comment 675 884 NOP  <||@
  Comment 676 886 NOP  <||@
  Comment 677 888 NOP  <||@
  Comment 678 890 NOP  <||@
  Comment 679 892 NOP  <||@
  Comment 680 894 AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 741 896 rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 748 898 MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 755 900 AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 837 902 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 837 block B23 null  <||@
  Comment 837 904 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 837 906 NOP  <||@
  Comment 838 908 NOP  <||@
  Comment 839 910 NOP  <||@
  Comment 840 912 NOP  <||@
  Comment 841 914 NOP  <||@
  Comment 842 916 r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD  <||@
  Comment 851 918 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD  <||@
  Comment 860 block B24 null  <||@
  Comment 860 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 860 922 NOP  <||@
  Comment 861 924 NOP  <||@
  Comment 862 926 NOP  <||@
  Comment 863 928 NOP  <||@
  Comment 864 930 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD  <||@
  Comment 873 block B26 null  <||@
  Comment 873 964 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 873 966 NOP  <||@
  Comment 874 968 NOP  <||@
  Comment 875 970 NOP  <||@
  Comment 876 972 NOP  <||@
  Comment 877 974 CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 886 block B28 null  <||@
  Comment 886 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 886 1010 r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 891 1012 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 896 1014 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 901 1016 NOP  <||@
  Comment 902 1018 NOP  <||@
  Comment 903 1020 NOP  <||@
  Comment 904 1022 NOP  <||@
  Comment 905 1024 NOP  <||@
  Comment 906 1026 NOP  <||@
  Comment 907 1028 NOP  <||@
  Comment 908 1030 NOP  <||@
  Comment 909 1032 NOP  <||@
  Comment 910 1034 NOP  <||@
  Comment 911 1036 NOP  <||@
  Comment 912 1038 NOP  <||@
  Comment 913 1040 NOP  <||@
  Comment 914 1042 NOP  <||@
  Comment 915 1044 NOP  <||@
  Comment 916 1046 NOP  <||@
  Comment 917 1048 NOP  <||@
  Comment 918 1050 NOP  <||@
  Comment 919 1052 NOP  <||@
  Comment 920 1054 NOP  <||@
  Comment 921 1056 rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 924 1058 rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 929 1060 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 934 1062 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 937 1064 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22]  <||@
  Comment 939 {HotSpotMethod<StreamEncoder.implWrite(char[], int, int)>}  <||@
  Comment 939 INVOKESPECIAL  <||@
  Comment 944 [stack:24, stack:44, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 952 1066 rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD  <||@
  Comment 956 1068 rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 963 1070 r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22]  <||@
  Comment 963 [rsi:0, stack:24, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 963 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 971 1072 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22]  <||@
  Comment 971 [rsi:0, r10:0, stack:24, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 971 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 979 1074 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 987 1076 r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 994 1078 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 998 1080 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1002 1082 CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD  <||@
  Comment 1011 block B29 null  <||@
  Comment 1011 1084 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1011 1086 NOP  <||@
  Comment 1012 1088 NOP  <||@
  Comment 1013 1090 NOP  <||@
  Comment 1014 1092 NOP  <||@
  Comment 1015 1094 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1025 block B30 null  <||@
  Comment 1025 1096 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1025 1098 NOP  <||@
  Comment 1026 1100 NOP  <||@
  Comment 1027 1102 NOP  <||@
  Comment 1028 1104 NOP  <||@
  Comment 1029 1106 NOP  <||@
  Comment 1030 1108 NOP  <||@
  Comment 1031 1110 NOP  <||@
  Comment 1032 1112 NOP  <||@
  Comment 1033 1114 NOP  <||@
  Comment 1034 1116 NOP  <||@
  Comment 1035 1118 NOP  <||@
  Comment 1036 1120 NOP  <||@
  Comment 1037 1122 NOP  <||@
  Comment 1038 1124 NOP  <||@
  Comment 1039 1126 NOP  <||@
  Comment 1040 1128 NOP  <||@
  Comment 1041 1130 NOP  <||@
  Comment 1042 1132 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 1103 1134 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 1115 1136 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 1115 block B32 null  <||@
  Comment 1115 1148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1115 1150 NOP  <||@
  Comment 1116 1152 NOP  <||@
  Comment 1117 1154 NOP  <||@
  Comment 1118 1156 NOP  <||@
  Comment 1119 1158 NOP  <||@
  Comment 1120 1160 NOP  <||@
  Comment 1121 1162 NOP  <||@
  Comment 1122 1164 rdx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 1127 1166 MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1135 1168 MEMBAR barriers: 4  <||@
  Comment 1140 1170 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1150 block B33 null  <||@
  Comment 1150 1172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1150 1174 NOP  <||@
  Comment 1151 1176 NOP  <||@
  Comment 1152 1178 NOP  <||@
  Comment 1153 1180 NOP  <||@
  Comment 1154 1182 NOP  <||@
  Comment 1155 1184 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1163 1186 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 1171 block B34 null  <||@
  Comment 1171 1188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1171 1190 NOP  <||@
  Comment 1172 1192 NOP  <||@
  Comment 1173 1194 NOP  <||@
  Comment 1174 1198 JUMP ~outgoingValues: [] destination: B34 -> B44  <||@
  Comment 1174 block B44 null  <||@
  Comment 1174 1368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1174 1196 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1179 1370 NOP  <||@
  Comment 1180 1372 NOP  <||@
  Comment 1181 1374 NOP  <||@
  Comment 1182 1376 NOP  <||@
  Comment 1183 1378 MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 1190 1380 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 1195 1382 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1195 block B45 null  <||@
  Comment 1195 1384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 1386 NOP  <||@
  Comment 1196 1388 NOP  <||@
  Comment 1197 1390 NOP  <||@
  Comment 1198 1392 NOP  <||@
  Comment 1199 1394 NOP  <||@
  Comment 1200 1396 NOP  <||@
  Comment 1201 1398 NOP  <||@
  Comment 1202 1400 NOP  <||@
  Comment 1203 1402 NOP  <||@
  Comment 1204 1404 NOP  <||@
  Comment 1205 1406 NOP  <||@
  Comment 1206 1408 NOP  <||@
  Comment 1207 1410 NOP  <||@
  Comment 1208 1412 rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1216 1414 r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25]  <||@
  Comment 1216 [rsi:0, stack:56]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1216 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1224 1416 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25]  <||@
  Comment 1224 [rsi:0, r10:0, stack:56]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1224 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1232 1418 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1240 1420 r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 1247 1422 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1251 1424 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1255 1426 CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD  <||@
  Comment 1264 block B46 null  <||@
  Comment 1264 1428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1264 1430 NOP  <||@
  Comment 1265 1432 NOP  <||@
  Comment 1266 1434 NOP  <||@
  Comment 1267 1436 NOP  <||@
  Comment 1268 1438 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1278 block B47 null  <||@
  Comment 1278 1440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1278 1442 NOP  <||@
  Comment 1279 1444 NOP  <||@
  Comment 1280 1446 NOP  <||@
  Comment 1281 1448 NOP  <||@
  Comment 1282 1450 NOP  <||@
  Comment 1283 1452 NOP  <||@
  Comment 1284 1454 NOP  <||@
  Comment 1285 1456 NOP  <||@
  Comment 1286 1458 NOP  <||@
  Comment 1287 1460 NOP  <||@
  Comment 1288 1462 NOP  <||@
  Comment 1289 1464 NOP  <||@
  Comment 1290 1466 NOP  <||@
  Comment 1291 1468 NOP  <||@
  Comment 1292 1470 NOP  <||@
  Comment 1293 1472 NOP  <||@
  Comment 1294 1474 NOP  <||@
  Comment 1295 1476 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 1356 1478 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 1368 1480 JUMP ~outgoingValues: [] destination: B47 -> B49  <||@
  Comment 1368 block B49 null  <||@
  Comment 1368 1492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1368 1494 NOP  <||@
  Comment 1369 1496 NOP  <||@
  Comment 1370 1498 NOP  <||@
  Comment 1371 1500 NOP  <||@
  Comment 1372 1502 NOP  <||@
  Comment 1373 1504 NOP  <||@
  Comment 1374 1506 NOP  <||@
  Comment 1375 1508 rdx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 1380 1510 MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1388 1512 MEMBAR barriers: 4  <||@
  Comment 1393 1514 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1403 block B50 null  <||@
  Comment 1403 1516 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1403 1518 NOP  <||@
  Comment 1404 1520 NOP  <||@
  Comment 1405 1522 NOP  <||@
  Comment 1406 1524 NOP  <||@
  Comment 1407 1526 NOP  <||@
  Comment 1408 1528 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1416 1530 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 1424 block B51 null  <||@
  Comment 1424 1532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1424 1534 NOP  <||@
  Comment 1425 1536 NOP  <||@
  Comment 1426 1538 NOP  <||@
  Comment 1427 1540 JUMP ~outgoingValues: [] destination: B51 -> B61  <||@
  Comment 1427 block B61 null  <||@
  Comment 1427 1700 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1427 1702 NOP  <||@
  Comment 1428 1704 NOP  <||@
  Comment 1429 1706 NOP  <||@
  Comment 1430 1708 NOP  <||@
  Comment 1431 1710 NOP  <||@
  Comment 1432 1712 NOP  <||@
  Comment 1433 1714 NOP  <||@
  Comment 1434 1716 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1459 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 1475 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 1487 POLL_RETURN_FAR  <||@
  Comment 1501 block B60 null  <||@
  Comment 1501 1690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1501 1692 NOP  <||@
  Comment 1502 1694 NOP  <||@
  Comment 1503 1696 NOP  <||@
  Comment 1504 1698 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 1506 block B48 null  <||@
  Comment 1506 1482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1506 1484 NOP  <||@
  Comment 1507 1486 NOP  <||@
  Comment 1508 1488 NOP  <||@
  Comment 1509 1490 JUMP ~outgoingValues: [] destination: B48 -> B49  <||@
  Comment 1514 block B2 null  <||@
  Comment 1514 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1514 94 NOP  <||@
  Comment 1515 96 NOP  <||@
  Comment 1516 98 NOP  <||@
  Comment 1517 100 NOP  <||@
  Comment 1518 102 NOP  <||@
  Comment 1519 104 NOP  <||@
  Comment 1520 106 NOP  <||@
  Comment 1521 108 rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1528 110 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1532 112 CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD  <||@
  Comment 1541 block B3 null  <||@
  Comment 1541 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 116 NOP  <||@
  Comment 1542 118 NOP  <||@
  Comment 1543 120 NOP  <||@
  Comment 1544 122 NOP  <||@
  Comment 1545 124 NOP  <||@
  Comment 1546 126 NOP  <||@
  Comment 1547 128 r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1555 130 rax|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 1560 132 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 1568 block B5 null  <||@
  Comment 1568 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1568 160 NOP  <||@
  Comment 1569 162 NOP  <||@
  Comment 1570 164 NOP  <||@
  Comment 1571 166 NOP  <||@
  Comment 1572 168 NOP  <||@
  Comment 1573 170 MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1580 172 MEMBAR barriers: 4  <||@
  Comment 1585 174 JUMP ~outgoingValues: [] destination: B5 -> B10  <||@
  Comment 1590 block B43 null  <||@
  Comment 1590 1356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1590 1358 NOP  <||@
  Comment 1591 1360 NOP  <||@
  Comment 1592 1362 NOP  <||@
  Comment 1593 1366 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 1598 block B31 null  <||@
  Comment 1598 1138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1598 1140 NOP  <||@
  Comment 1599 1142 NOP  <||@
  Comment 1600 1144 NOP  <||@
  Comment 1601 1146 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 1606 block B15 null  <||@
  Comment 1606 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1606 562 NOP  <||@
  Comment 1607 564 NOP  <||@
  Comment 1608 566 NOP  <||@
  Comment 1609 568 NOP  <||@
  Comment 1610 570 NOP  <||@
  Comment 1611 572 NOP  <||@
  Comment 1612 574 NOP  <||@
  Comment 1613 576 rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1620 578 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1624 580 CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD  <||@
  Comment 1633 block B16 null  <||@
  Comment 1633 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1633 584 NOP  <||@
  Comment 1634 586 NOP  <||@
  Comment 1635 588 NOP  <||@
  Comment 1636 590 NOP  <||@
  Comment 1637 592 NOP  <||@
  Comment 1638 594 NOP  <||@
  Comment 1639 596 rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1646 598 rax|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 1650 600 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 1658 block B18 null  <||@
  Comment 1658 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1658 632 NOP  <||@
  Comment 1659 634 NOP  <||@
  Comment 1660 636 NOP  <||@
  Comment 1661 638 NOP  <||@
  Comment 1662 640 NOP  <||@
  Comment 1663 642 MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1670 644 MEMBAR barriers: 4  <||@
  Comment 1675 646 JUMP ~outgoingValues: [] destination: B18 -> B23  <||@
  Comment 1680 block B11 null  <||@
  Comment 1680 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1680 430 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1685 432 NOP  <||@
  Comment 1686 434 NOP  <||@
  Comment 1687 436 NOP  <||@
  Comment 1688 438 JUMP ~outgoingValues: [] destination: B11 -> B45  <||@
  Comment 1693 block B52 null  <||@
  Comment 1693 1542 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1693 1544 NOP  <||@
  Comment 1694 1546 NOP  <||@
  Comment 1695 1548 NOP  <||@
  Comment 1696 1550 NOP  <||@
  Comment 1697 1552 NOP  <||@
  Comment 1698 1554 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1706 1556 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD  <||@
  Comment 1715 block B53 null  <||@
  Comment 1715 1558 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1715 1560 NOP  <||@
  Comment 1716 1562 NOP  <||@
  Comment 1717 1564 NOP  <||@
  Comment 1718 1566 JUMP ~outgoingValues: [] destination: B53 -> B61  <||@
  Comment 1723 block B35 null  <||@
  Comment 1723 1200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1723 1202 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 1728 1204 NOP  <||@
  Comment 1729 1206 NOP  <||@
  Comment 1730 1208 NOP  <||@
  Comment 1731 1210 NOP  <||@
  Comment 1732 1212 NOP  <||@
  Comment 1733 1214 r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1741 1216 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 1750 block B36 null  <||@
  Comment 1750 1218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1750 1220 NOP  <||@
  Comment 1751 1222 NOP  <||@
  Comment 1752 1224 NOP  <||@
  Comment 1753 1228 JUMP ~outgoingValues: [] destination: B36 -> B44  <||@
  Comment 1758 block B54 null  <||@
  Comment 1758 1568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1758 1570 NOP  <||@
  Comment 1759 1572 NOP  <||@
  Comment 1760 1574 NOP  <||@
  Comment 1761 1576 NOP  <||@
  Comment 1762 1578 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1777 block B55 null  <||@
  Comment 1777 1580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1777 1582 NOP  <||@
  Comment 1778 1584 NOP  <||@
  Comment 1779 1586 NOP  <||@
  Comment 1780 1588 JUMP ~outgoingValues: [] destination: B55 -> B61  <||@
  Comment 1785 block B37 null  <||@
  Comment 1785 1230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1785 1232 NOP  <||@
  Comment 1786 1234 NOP  <||@
  Comment 1787 1236 NOP  <||@
  Comment 1788 1238 NOP  <||@
  Comment 1789 1240 CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1804 block B38 null  <||@
  Comment 1804 1242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1804 1244 NOP  <||@
  Comment 1805 1246 NOP  <||@
  Comment 1806 1248 NOP  <||@
  Comment 1807 1252 JUMP ~outgoingValues: [] destination: B38 -> B44  <||@
  Comment 1812 block B6 null  <||@
  Comment 1812 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1812 178 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 180 NOP  <||@
  Comment 1818 182 NOP  <||@
  Comment 1819 184 NOP  <||@
  Comment 1820 186 NOP  <||@
  Comment 1821 188 NOP  <||@
  Comment 1822 190 NOP  <||@
  Comment 1823 192 NOP  <||@
  Comment 1824 194 NOP  <||@
  Comment 1825 196 NOP  <||@
  Comment 1826 198 NOP  <||@
  Comment 1827 200 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1830 202 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1835 204 stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1840 206 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18]  <||@
  Comment 1843 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1843 INVOKESPECIAL  <||@
  Comment 1848 [stack:48, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:64|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1856 208 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 1864 block B7 null  <||@
  Comment 1864 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1864 212 NOP  <||@
  Comment 1865 214 NOP  <||@
  Comment 1866 216 NOP  <||@
  Comment 1867 218 NOP  <||@
  Comment 1868 220 NOP  <||@
  Comment 1869 222 NOP  <||@
  Comment 1870 224 NOP  <||@
  Comment 1871 226 NOP  <||@
  Comment 1872 228 NOP  <||@
  Comment 1873 230 NOP  <||@
  Comment 1874 232 NOP  <||@
  Comment 1875 234 NOP  <||@
  Comment 1876 236 NOP  <||@
  Comment 1877 238 NOP  <||@
  Comment 1878 240 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1883 242 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1890 244 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1895 246 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1901 248 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1907 250 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1912 252 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1920 254 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18]  <||@
  Comment 1923 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1923 INVOKESPECIAL  <||@
  Comment 1928 [stack:48, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1936 256 r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1941 258 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 1946 260 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1951 262 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 1956 block B19 null  <||@
  Comment 1956 648 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1956 650 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1961 652 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1965 654 stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD  <||@
  Comment 1970 656 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1975 658 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1980 660 NOP  <||@
  Comment 1981 662 NOP  <||@
  Comment 1982 664 NOP  <||@
  Comment 1983 666 NOP  <||@
  Comment 1984 668 NOP  <||@
  Comment 1985 670 NOP  <||@
  Comment 1986 672 NOP  <||@
  Comment 1987 674 NOP  <||@
  Comment 1988 676 NOP  <||@
  Comment 1989 678 NOP  <||@
  Comment 1990 680 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1993 682 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1998 684 stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2003 686 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22]  <||@
  Comment 2003 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 2003 INVOKESPECIAL  <||@
  Comment 2008 [stack:8, stack:20, stack:24, stack:32, stack:44, stack:48, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1          
     locals:  |stack:104|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                  
     locals:  |stack:104|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2           |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2016 688 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 2024 block B20 null  <||@
  Comment 2024 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2024 692 NOP  <||@
  Comment 2025 694 NOP  <||@
  Comment 2026 696 NOP  <||@
  Comment 2027 698 NOP  <||@
  Comment 2028 700 NOP  <||@
  Comment 2029 702 NOP  <||@
  Comment 2030 704 NOP  <||@
  Comment 2031 706 NOP  <||@
  Comment 2032 708 NOP  <||@
  Comment 2033 710 NOP  <||@
  Comment 2034 712 NOP  <||@
  Comment 2035 714 NOP  <||@
  Comment 2036 716 NOP  <||@
  Comment 2037 718 NOP  <||@
  Comment 2038 720 rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2043 722 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2050 724 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2055 726 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2061 728 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2067 730 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2072 732 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2080 734 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22]  <||@
  Comment 2083 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 2083 INVOKESPECIAL  <||@
  Comment 2088 [stack:8, stack:20, stack:24, stack:32, stack:44, stack:48, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                  
     locals:  |stack:104|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2           |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2096 736 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2101 738 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2105 740 rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD  <||@
  Comment 2109 742 r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 2114 744 r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2119 746 r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2124 748 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 2129 750 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 752 JUMP ~outgoingValues: [] destination: B20 -> B23  <||@
  Comment 2139 block B8 null  <||@
  Comment 2139 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2139 266 NOP  <||@
  Comment 2140 268 NOP  <||@
  Comment 2141 270 NOP  <||@
  Comment 2142 272 r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2147 274 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 2152 276 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2157 278 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 2162 block B21 null  <||@
  Comment 2162 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2162 756 NOP  <||@
  Comment 2163 758 NOP  <||@
  Comment 2164 760 NOP  <||@
  Comment 2165 762 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2170 764 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2174 766 rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD  <||@
  Comment 2178 768 r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 2183 770 r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2188 772 r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2193 774 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 2198 776 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2203 778 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 2208 block B56 null  <||@
  Comment 2208 1590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2208 1592 NOP  <||@
  Comment 2209 1594 NOP  <||@
  Comment 2210 1596 NOP  <||@
  Comment 2211 1598 NOP  <||@
  Comment 2212 1600 NOP  <||@
  Comment 2213 1602 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2220 1604 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 2225 block B58 loop 1 depth 1 header:389|LoopBegin  <||@
  Comment 2225 1640 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2240 1642 NOP  <||@
  Comment 2241 1644 NOP  <||@
  Comment 2242 1646 NOP  <||@
  Comment 2243 1648 NOP  <||@
  Comment 2244 1650 NOP  <||@
  Comment 2245 1652 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26]  <||@
  Comment 2252 [rsi:0, r10:0, r11:0, stack:56]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |r11|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |r11|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2252 {infopoint: SAFEPOINT}  <||@
  Comment 2252 POLL_FAR  <||@
  Comment 2255 1654 JUMP ~outgoingValues: [] destination: B58 -> B57  <||@
  Comment 2255 block B57 loop 1 depth 1 header:389|LoopBegin  <||@
  Comment 2255 1606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2255 1608 NOP  <||@
  Comment 2256 1610 NOP  <||@
  Comment 2257 1612 NOP  <||@
  Comment 2258 1614 NOP  <||@
  Comment 2259 1616 NOP  <||@
  Comment 2260 1618 NOP  <||@
  Comment 2261 1620 NOP  <||@
  Comment 2262 1622 NOP  <||@
  Comment 2263 1624 NOP  <||@
  Comment 2264 1626 NOP  <||@
  Comment 2265 1628 NOP  <||@
  Comment 2266 1630 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 2274 1632 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 2281 1634 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2284 1636 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 2294 1638 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 2296 block B59 null  <||@
  Comment 2296 1656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2296 1658 stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2301 1660 NOP  <||@
  Comment 2302 1662 NOP  <||@
  Comment 2303 1664 NOP  <||@
  Comment 2304 1666 NOP  <||@
  Comment 2305 1668 NOP  <||@
  Comment 2306 1670 NOP  <||@
  Comment 2307 1672 NOP  <||@
  Comment 2308 1674 NOP  <||@
  Comment 2309 1676 NOP  <||@
  Comment 2310 1678 NOP  <||@
  Comment 2311 1680 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 2319 1682 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2323 1684 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2326 1686 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26]  <||@
  Comment 2327 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 2327 INVOKESTATIC  <||@
  Comment 2332 [stack:8, stack:56]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                  
     locals:  |stack:104|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2340 1688 JUMP ~outgoingValues: [] destination: B59 -> B61  <||@
  Comment 2345 block B39 null  <||@
  Comment 2345 1254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2345 1256 NOP  <||@
  Comment 2346 1258 NOP  <||@
  Comment 2347 1260 NOP  <||@
  Comment 2348 1262 NOP  <||@
  Comment 2349 1264 NOP  <||@
  Comment 2350 1266 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2357 1268 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 2362 block B41 loop 0 depth 1 header:305|LoopBegin  <||@
  Comment 2362 1304 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2368 1306 NOP  <||@
  Comment 2369 1308 NOP  <||@
  Comment 2370 1310 NOP  <||@
  Comment 2371 1312 NOP  <||@
  Comment 2372 1314 NOP  <||@
  Comment 2373 1316 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22]  <||@
  Comment 2380 [rsi:0, r10:0, r11:0, stack:24, stack:56, stack:68, stack:72]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |r10|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |r10|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r10|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2380 {infopoint: SAFEPOINT}  <||@
  Comment 2380 POLL_FAR  <||@
  Comment 2383 1318 JUMP ~outgoingValues: [] destination: B41 -> B40  <||@
  Comment 2383 block B40 loop 0 depth 1 header:305|LoopBegin  <||@
  Comment 2383 1270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2383 1272 NOP  <||@
  Comment 2384 1274 NOP  <||@
  Comment 2385 1276 NOP  <||@
  Comment 2386 1278 NOP  <||@
  Comment 2387 1280 NOP  <||@
  Comment 2388 1282 NOP  <||@
  Comment 2389 1284 NOP  <||@
  Comment 2390 1286 NOP  <||@
  Comment 2391 1288 NOP  <||@
  Comment 2392 1290 NOP  <||@
  Comment 2393 1292 NOP  <||@
  Comment 2394 1294 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 2402 1296 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 2409 1298 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2412 1300 rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 2422 1302 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 2424 block B42 null  <||@
  Comment 2424 1320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2424 1322 stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2429 1324 NOP  <||@
  Comment 2430 1326 NOP  <||@
  Comment 2431 1328 NOP  <||@
  Comment 2432 1330 NOP  <||@
  Comment 2433 1332 NOP  <||@
  Comment 2434 1334 NOP  <||@
  Comment 2435 1336 NOP  <||@
  Comment 2436 1338 NOP  <||@
  Comment 2437 1340 NOP  <||@
  Comment 2438 1342 NOP  <||@
  Comment 2439 1344 r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 2447 1346 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2451 1348 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2454 1350 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22]  <||@
  Comment 2455 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 2455 INVOKESTATIC  <||@
  Comment 2460 [stack:8, stack:24, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                  
     locals:  |stack:104|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2468 1354 JUMP ~outgoingValues: [] destination: B42 -> B44  <||@
  Comment 2473 block B64 null  <||@
  Comment 2473 1774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2473 1776 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2478 1778 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2483 1780 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2488 1782 NOP  <||@
  Comment 2489 1784 NOP  <||@
  Comment 2490 1786 NOP  <||@
  Comment 2491 1788 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2498 1790 r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed]  <||@
  Comment 2504 1804 JUMP ~outgoingValues: [] destination: B64 -> B65  <||@
  Comment 2504 block B65 null  <||@
  Comment 2504 1806 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2504 950 r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2509 952 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2514 954 rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2519 956 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2524 958 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2529 960 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2534 1808 NOP  <||@
  Comment 2535 1810 NOP  <||@
  Comment 2536 1812 NOP  <||@
  Comment 2537 1814 NOP  <||@
  Comment 2538 1816 NOP  <||@
  Comment 2539 1818 NOP  <||@
  Comment 2540 1820 NOP  <||@
  Comment 2541 1822 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2548 1824 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2555 1826 DEOPT info [bci:4, 1, 30, 7, 25, 22]  <||@
  Comment 2555 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2560 [rax:0, rcx:0, rsi:0, r13:0, r14:0]at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |r14|QWORD[.] 
     stack:   |r8|DWORD     
  at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1, duringCall: true, rethrow: false]
              |0             |1             |2           |3        
     locals:  |r14|QWORD[.]  |rax|QWORD[.]  |int[0|0x0]  |r9|DWORD 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5             |6  |7 
     locals:  |-  |-  |-  |-  |-  |r13|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4 
     locals:  |-  |-  |rcx|QWORD[.]  |-  |-   <||@
  Comment 2568 block B17 null  <||@
  Comment 2568 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2568 604 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2573 606 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2578 608 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2583 610 NOP  <||@
  Comment 2584 612 NOP  <||@
  Comment 2585 614 NOP  <||@
  Comment 2586 616 NOP  <||@
  Comment 2587 618 NOP  <||@
  Comment 2588 620 NOP  <||@
  Comment 2589 622 NOP  <||@
  Comment 2590 624 MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD  <||@
  Comment 2601 626 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2612 628 DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22]  <||@
  Comment 2612 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2617 [rbp:0, stack:24, stack:32, stack:48, stack:56, stack:72]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rbp|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD     |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rbp|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2           |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2625 block B66 null  <||@
  Comment 2625 1828 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2625 1830 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2630 1832 NOP  <||@
  Comment 2631 1834 NOP  <||@
  Comment 2632 1836 NOP  <||@
  Comment 2633 1838 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2640 1840 r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed]  <||@
  Comment 2646 1842 JUMP ~outgoingValues: [] destination: B66 -> B68  <||@
  Comment 2646 block B68 null  <||@
  Comment 2646 1860 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2646 1862 NOP  <||@
  Comment 2647 1864 NOP  <||@
  Comment 2648 1866 NOP  <||@
  Comment 2649 1868 NOP  <||@
  Comment 2650 1870 NOP  <||@
  Comment 2651 1872 NOP  <||@
  Comment 2652 1874 NOP  <||@
  Comment 2653 1876 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2660 1878 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2667 1880 DEOPT info [bci:12, 4, 4, 18]  <||@
  Comment 2667 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2672 [stack:56, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2680 block B63 null  <||@
  Comment 2680 1746 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2680 1748 NOP  <||@
  Comment 2681 1750 NOP  <||@
  Comment 2682 1752 NOP  <||@
  Comment 2683 1754 NOP  <||@
  Comment 2684 1756 NOP  <||@
  Comment 2685 1758 NOP  <||@
  Comment 2686 1760 NOP  <||@
  Comment 2687 1762 NOP  <||@
  Comment 2688 1764 NOP  <||@
  Comment 2689 1766 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2693 1768 MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD  <||@
  Comment 2704 1770 MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD  <||@
  Comment 2715 1772 DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22]  <||@
  Comment 2715 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2720 [rsi:0, r10:0, stack:24, stack:56, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2728 block B4 null  <||@
  Comment 2728 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2728 136 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2733 138 NOP  <||@
  Comment 2734 140 NOP  <||@
  Comment 2735 142 NOP  <||@
  Comment 2736 144 NOP  <||@
  Comment 2737 146 NOP  <||@
  Comment 2738 148 NOP  <||@
  Comment 2739 150 NOP  <||@
  Comment 2740 152 MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD  <||@
  Comment 2751 154 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2762 156 DEOPT info [bci:32, 1, 4, 4, 18]  <||@
  Comment 2762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2767 [r11:0, stack:56, stack:72]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r11|QWORD[.]  |-  |- 
     stack:   |r8|DWORD      |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2775 block B62 null  <||@
  Comment 2775 1718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2775 1720 NOP  <||@
  Comment 2776 1722 NOP  <||@
  Comment 2777 1724 NOP  <||@
  Comment 2778 1726 NOP  <||@
  Comment 2779 1728 NOP  <||@
  Comment 2780 1730 NOP  <||@
  Comment 2781 1732 NOP  <||@
  Comment 2782 1734 NOP  <||@
  Comment 2783 1736 NOP  <||@
  Comment 2784 1738 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2788 1740 MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD  <||@
  Comment 2799 1742 MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD  <||@
  Comment 2810 1744 DEOPT info [bci:4, 2, 5, 4, 26]  <||@
  Comment 2810 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2815 [rsi:0, r10:0, stack:56]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2823 block B25 null  <||@
  Comment 2823 932 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2823 934 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2828 936 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2833 938 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2838 940 NOP  <||@
  Comment 2839 942 NOP  <||@
  Comment 2840 944 NOP  <||@
  Comment 2841 946 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2848 948 r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed]  <||@
  Comment 2854 962 JUMP ~outgoingValues: [] destination: B25 -> B65  <||@
  Comment 2859 block B69 null  <||@
  Comment 2859 1882 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2859 1884 NOP  <||@
  Comment 2860 1886 NOP  <||@
  Comment 2861 1888 NOP  <||@
  Comment 2862 1890 NOP  <||@
  Comment 2863 1892 NOP  <||@
  Comment 2864 1894 NOP  <||@
  Comment 2865 1896 NOP  <||@
  Comment 2866 1898 MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD  <||@
  Comment 2877 1900 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2888 1902 DEOPT info [bci:0]  <||@
  Comment 2888 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2893 [stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2901 block B67 null  <||@
  Comment 2901 1844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2901 1846 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2906 1848 NOP  <||@
  Comment 2907 1850 NOP  <||@
  Comment 2908 1852 NOP  <||@
  Comment 2909 1854 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2916 1856 r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd]  <||@
  Comment 2922 1858 JUMP ~outgoingValues: [] destination: B67 -> B68  <||@
  Comment 2927 block B27 null  <||@
  Comment 2927 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2927 978 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2932 980 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2937 982 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2942 984 NOP  <||@
  Comment 2943 986 NOP  <||@
  Comment 2944 988 NOP  <||@
  Comment 2945 990 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2952 992 r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed]  <||@
  Comment 2958 1006 JUMP ~outgoingValues: [] destination: B27 -> B65  <||@
  Comment 2968 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2983 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2998 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3013 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3028 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3043 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3058 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3083 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3111 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3116 [rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 3146 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3151 [rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 3181 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3186 [rax:0, rsi:0, r9:0, r10:0, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3216 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3221 [rsi:0, r8:0, r9:0, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3251 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3256 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3286 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3291 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3321 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3326 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3361 [rsi:0, stack:24, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 3391 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3396 [rsi:0, r10:0, stack:24, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 3426 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3431 [rsi:0, stack:56]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 3461 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3466 [rsi:0, r10:0, stack:56]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 3474 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3474 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3480 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3480 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4624[java.io.BufferedWriter.flushBuffer()]"
  method "HotSpotCompilation-4624[java.io.BufferedWriter.flushBuffer()]"
  date 1724269733220
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ada5ac0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85a3f59dfe66669089842400c0feff4883ec689041817f20030000000f85590b0000909090909090909048896c24604889742448448b5610448954244442813cd508000000200d11000f85c40a000090909090909090909090909090909090909090428b04d50c0000008b14c50c0000008504d500000000498b8780030000488b08448bda49c1e303458bca49c1e103b80000000041b801000000f0440fb104d5100000000f8527050000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000448b04d50c00000049c1e0034d85c00f841d000000498b47284883f8000f847a0a00004883e80849894728490347384c8900488bc148c1e8038904d50c000000498bc34833c148c1e8160f8442000000498bc348c1e80948ba00e0368d787f00004803c28038027429f083042400803800741fc60000498b57484885d20f84290a00004883ea084989574849035758488902909090909090908b46208b14c508000000448b5e184585db0f84da0400009090909081fab84513000f858f0900009090909090909090448b04c514000000428b1cc510000000895c242c8b46248b0cc50c000000813cdd08000000200d11000f854408000090909090909090909090909090909090909090909090908b14dd0c0000008b14d50c0000008504d500000000498bbf80030000488b3f8bea48c1e50348c1e003448beb49c1e503458bf049c1e6034c897424304889442420b80000000041be01000000f0440fb134d5100000000f85d6030000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000448b34d50c00000049c1e6034d85f60f841d000000498b47284883f8000f84eb0800004883e80849894728490347384c8930488bc748c1e8038904d50c000000488bd54833d748c1ea160f8442000000488bd548c1ea0948b800e0368d787f00004803d0803a027429f083042400803a00741fc60200498b47484885c00f849a0800004883e80849894748490347584889109090909090460fb604c51a0000004585c00f854d060000909090904585db0f8c9e07000090909090443bd90f8ff90700004c8b7424304c896c24184c894c24389090909090909090909090909090909090909090498bf6488b542420b900000000458bc36690e8704671f70f1f8400e00500098b5c242c8b34dd0c000000448b14f50c000000468b1cd510000000428b14d50c0000004d8b878003000048c1e20348c1e603493b100f8585060000909090904183fb010f853d020000909090909090909090909090909090909041807f40000f8432000000468b04d50c00000049c1e0034d85c00f841d000000498b57284883fa000f849f0700004883ea0849895728490357384c890242c704d50c0000000000000090909090909090418bd3ffca428914d510000000f0830424004183fb010f85b80100009090909090428b14d51400000085d20f8528020000909090488b74244890909090c7461800000000448b54244490909090909090909090909090428b34d50c000000448b14f50c000000468b1cd510000000428b14d50c0000004d8b878003000048c1e20348c1e603493b100f85e7050000909090904183fb010f85e4000000909090909090909090909090909090909041807f40000f8432000000468b04d50c00000049c1e0034d85c00f841d000000498b57284883fa000f84b10600004883ea0849895728490357384c890242c704d50c0000000000000090909090909090418bd3ffca428914d510000000f0830424004183fb010f85620000009090909090428b14d51400000085d20f850d01000090909090909090909090488b6c24604883c468493ba7d804000072234883ec08498bff48b9505d98b1787f0000ffd14883c40848b980d27399787f0000ffe1493ba7500400000f8721060000c3909090ebb1909090e96effffff909090909090908b04d50c00000048c1e003483bc80f850f010000909090909090448b04d510000000418bc0ffc085c00f8c8804000090909090908904d510000000f083042400e962fbffff909090e958feffff909090e915feffff909090909090908b04d50c00000048c1e003483bf80f85430100009090909090908b3cd5100000008bc7ffc085c00f8c8e03000090909090908904d510000000f083042400e9b5fcffff4c894c2438909090e90efeffff9090909090448b14d5140000004585d20f852b000000909090e9d8feffff448b5424449090909090448b1cd5140000004585db0f8523000000909090e9b8fdffff9090909042833cd50c000000000f85af010000909090e99afeffff9090909042833cdd0c000000000f851d020000909090e982fdffff4c894c243890909090909090909090498bf3ba010000004c895c2430666690e888f19dfe0f1f84006809000e85c00f85130100009090909090909090909090909090488b74243048c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e838f19dfe0f1f8400b809000f4c8b4c2438448b542444488b742448e9f4f9ffff4c896c2418894c2450448944241444895c24544c894c243890909090909090909090488bf5ba0100000048896c2408e8e8f09dfe0f1f8400080a001085c00f858a0000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e898f09dfe0f1f8400580a00114c8b6c24188b4c24508b5c242c448b442414448b5c24544c8b4c2438448b542444488b742448e9eafaffff9090904c8b4c2438448b542444488b742448e926f9ffff9090904c8b6c24188b4c24508b5c242c448b442414448b5c24544c8b4c2438448b542444488b742448e9a5faffff9090909090458bda49c1e303e91e0000006666660f1f8400000000006666669090909090904d8b8f580400004185019090909090909090909090468b04d50c000000458bc84183e1fe418bc0f0460fb10cd50c00000075c8488974240890909090909090909090468b14d51800000049c1e203498bf290e8a4f59dfe0f1f84004c0b0013e96afcffff9090909090458bd349c1e203e915000000660f1f44000090909090904d8b8f580400004185019090909090909090909090468b04dd0c000000458bc84183e1fe418bc0f0460fb10cdd0c00000075c8488974240890909090909090909090468b14dd1800000049c1e203498bf290e824f59dfe0f1f8400cc0b0015e9edfaffff4c896c241844895c24544c894c243890909049c7c31414000041baed43fdff4c8b7424304c8b6c2418488b442420448b4c2454488b4c2438488b74244890909090909090458997840400004d899f90040000e8ba4c9efe0f1f8400000000004c896c241844895c24544c894c24389090909090909041c78784040000ed32fdff49c7879004000094020000e8814c9efe0f1f8400000000004c894c243890909049c7c3940c000041baed47fdff90909090909090458997840400004d899f90040000e84a4c9efe0f1f84000000000090909090909090909049c1e20341c78784040000ed37fdff49c78790040000946b0000e81a4c9efe0f1f8400000000004c894c24389090909090909041c78784040000ed29fdff49c7879004000094020000e8eb4b9efe0f1f84000000000090909090909090909049c1e20341c78784040000ed2efdff49c78790040000946b0000e8bb4b9efe0f1f8400000000004c896c241844895c24544c894c243890909049c7c3140f000041baed3ffdffe99dfeffff9090909090909041c78784040000ed5bfdff49c7879004000014000000e86d4b9efe0f1f8400000000004c894c243890909049c7c3140a000041bacd42feffe9e7feffff4c896c241844895c24544c894c243890909049c7c3140f000041baed3bfdffe935feffff48896c2460e8c34b9cfee998f4fffff44c890424e8941bb2fee987f5fffff448890424e8053db2fee9d8f5fffff44c893424e8761bb2fee916f7fffff448891424e8e73cb2fee967f7fffff44c890424e8581bb2fee962f8fffff44c890424e8491bb2fee950f9fffff4488d0dcbf9ffff49898f68040000e930599efef441c78784040000ed5bfdff49c7879004000014000000e88e4a9efe0f1f84000000000041c78784040000f555feff49c7879004000000000000e86b4a9efe0f1f84000000000041c78784040000ed57fdff49c7879004000094070000e8484a9efe0f1f84000000000041c78784040000f53dfeff49c7879004000000000000e8254a9efe0f1f84000000000041c78784040000f52afeff49c7879004000000000000e8024a9efe0f1f84000000000041c78784040000ed47fdff49c78790040000940c0000e8df499efe0f1f84000000000041c78784040000f536feff49c7879004000000000000e8bc499efe0f1f84000000000041c78784040000f523feff49c7879004000000000000e899499efe0f1f84000000000041c78784040000f51ffeff49c7879004000000000000e876499efe0f1f84000000000041c78784040000f5f6fdff49c7879004000000000000e853499efe0f1f84000000000041c78784040000f5f2fdff49c7879004000000000000e830499efe0f1f840000000000e8a9eab1fef4e8c3469efef4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@774d82fe slotKind: QWORD  <||@
  Comment 71 22 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 76 24 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 80 26 stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 85 28 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B69 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0]  <||@
  Comment 85 [rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 {meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}}  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 103 32 NOP  <||@
  Comment 104 34 NOP  <||@
  Comment 105 36 NOP  <||@
  Comment 106 38 NOP  <||@
  Comment 107 40 NOP  <||@
  Comment 108 42 NOP  <||@
  Comment 109 44 NOP  <||@
  Comment 110 46 NOP  <||@
  Comment 111 48 NOP  <||@
  Comment 112 50 NOP  <||@
  Comment 113 52 NOP  <||@
  Comment 114 54 NOP  <||@
  Comment 115 56 NOP  <||@
  Comment 116 58 NOP  <||@
  Comment 117 60 NOP  <||@
  Comment 118 62 NOP  <||@
  Comment 119 64 NOP  <||@
  Comment 120 66 NOP  <||@
  Comment 121 68 NOP  <||@
  Comment 122 70 rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 130 72 rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 130 [rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 137 74 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 137 [rdx:0, rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 137 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 144 76 rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 151 78 rcx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD  <||@
  Comment 154 80 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 161 82 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 168 84 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 173 86 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 179 88 rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD  <||@
  Comment 189 90 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9  <||@
  Comment 195 block B9 null  <||@
  Comment 195 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 195 282 NOP  <||@
  Comment 196 284 NOP  <||@
  Comment 197 286 NOP  <||@
  Comment 198 288 NOP  <||@
  Comment 199 290 NOP  <||@
  Comment 200 292 NOP  <||@
  Comment 201 294 NOP  <||@
  Comment 202 296 NOP  <||@
  Comment 203 298 NOP  <||@
  Comment 204 300 NOP  <||@
  Comment 205 302 NOP  <||@
  Comment 206 304 NOP  <||@
  Comment 207 306 NOP  <||@
  Comment 208 308 NOP  <||@
  Comment 209 310 NOP  <||@
  Comment 210 312 NOP  <||@
  Comment 211 314 NOP  <||@
  Comment 212 316 NOP  <||@
  Comment 213 318 NOP  <||@
  Comment 214 320 NOP  <||@
  Comment 215 322 NOP  <||@
  Comment 216 324 NOP  <||@
  Comment 217 326 NOP  <||@
  Comment 218 328 NOP  <||@
  Comment 219 330 NOP  <||@
  Comment 220 332 NOP  <||@
  Comment 221 334 NOP  <||@
  Comment 222 336 NOP  <||@
  Comment 223 338 NOP  <||@
  Comment 224 340 NOP  <||@
  Comment 225 342 NOP  <||@
  Comment 226 344 NOP  <||@
  Comment 227 346 NOP  <||@
  Comment 228 348 NOP  <||@
  Comment 229 350 NOP  <||@
  Comment 230 352 NOP  <||@
  Comment 231 354 NOP  <||@
  Comment 232 356 NOP  <||@
  Comment 233 358 NOP  <||@
  Comment 234 360 NOP  <||@
  Comment 235 362 NOP  <||@
  Comment 236 364 NOP  <||@
  Comment 237 366 NOP  <||@
  Comment 238 368 NOP  <||@
  Comment 239 370 NOP  <||@
  Comment 240 372 NOP  <||@
  Comment 241 374 NOP  <||@
  Comment 242 376 NOP  <||@
  Comment 243 378 NOP  <||@
  Comment 244 380 NOP  <||@
  Comment 245 382 NOP  <||@
  Comment 246 384 NOP  <||@
  Comment 247 386 NOP  <||@
  Comment 248 388 NOP  <||@
  Comment 249 390 NOP  <||@
  Comment 250 392 NOP  <||@
  Comment 251 394 AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 312 396 rax|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 319 398 MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 326 400 AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 408 402 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 408 block B10 null  <||@
  Comment 408 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 406 NOP  <||@
  Comment 409 408 NOP  <||@
  Comment 410 410 NOP  <||@
  Comment 411 412 NOP  <||@
  Comment 412 414 NOP  <||@
  Comment 413 416 NOP  <||@
  Comment 414 418 NOP  <||@
  Comment 415 420 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 418 422 rdx|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 18]  <||@
  Comment 418 [rax:0, rsi:0, r9:0, r10:0, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 418 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 425 424 r11|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 429 426 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01815860517284762 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 438 block B12 null  <||@
  Comment 438 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 438 442 NOP  <||@
  Comment 439 444 NOP  <||@
  Comment 440 446 NOP  <||@
  Comment 441 448 NOP  <||@
  Comment 442 450 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed}  <||@
  Comment 442 {meta{HotSpotType<Ljava/io/OutputStreamWriter;, resolved>;compressed}}  <||@
  Comment 454 block B13 null  <||@
  Comment 454 452 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 454 NOP  <||@
  Comment 455 456 NOP  <||@
  Comment 456 458 NOP  <||@
  Comment 457 460 NOP  <||@
  Comment 458 462 NOP  <||@
  Comment 459 464 NOP  <||@
  Comment 460 466 NOP  <||@
  Comment 461 468 NOP  <||@
  Comment 462 470 r8|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 470 472 rbx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:12, 4, 4, 18]  <||@
  Comment 470 [rsi:0, r8:0, r9:0, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 470 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 478 474 stack:68|DWORD[_] = MOVE input: rbx|DWORD[_] moveKind: DWORD  <||@
  Comment 482 476 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 485 478 rcx|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18]  <||@
  Comment 485 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 485 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 492 480 CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:12, 4, 4, 18]  <||@
  Comment 492 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 492 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 492 {meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}}  <||@
  Comment 509 block B14 null  <||@
  Comment 509 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 509 484 NOP  <||@
  Comment 510 486 NOP  <||@
  Comment 511 488 NOP  <||@
  Comment 512 490 NOP  <||@
  Comment 513 492 NOP  <||@
  Comment 514 494 NOP  <||@
  Comment 515 496 NOP  <||@
  Comment 516 498 NOP  <||@
  Comment 517 500 NOP  <||@
  Comment 518 502 NOP  <||@
  Comment 519 504 NOP  <||@
  Comment 520 506 NOP  <||@
  Comment 521 508 NOP  <||@
  Comment 522 510 NOP  <||@
  Comment 523 512 NOP  <||@
  Comment 524 514 NOP  <||@
  Comment 525 516 NOP  <||@
  Comment 526 518 NOP  <||@
  Comment 527 520 NOP  <||@
  Comment 528 522 NOP  <||@
  Comment 529 524 NOP  <||@
  Comment 530 526 NOP  <||@
  Comment 531 528 NOP  <||@
  Comment 532 530 rdx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 539 532 rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 18]  <||@
  Comment 539 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 539 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 546 534 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 18]  <||@
  Comment 546 [rax:0, rdx:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 546 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 553 536 rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 560 538 rdi|QWORD[.] = MOV input: [rdi|QWORD] size: QWORD  <||@
  Comment 563 540 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 569 542 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 573 544 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 580 546 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 587 548 stack:64|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 592 550 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 597 552 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 602 554 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 608 556 rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r14|DWORD) accessKind: DWORD  <||@
  Comment 618 558 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B22  <||@
  Comment 624 block B22 null  <||@
  Comment 624 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 624 782 NOP  <||@
  Comment 625 784 NOP  <||@
  Comment 626 786 NOP  <||@
  Comment 627 788 NOP  <||@
  Comment 628 790 NOP  <||@
  Comment 629 792 NOP  <||@
  Comment 630 794 NOP  <||@
  Comment 631 796 NOP  <||@
  Comment 632 798 NOP  <||@
  Comment 633 800 NOP  <||@
  Comment 634 802 NOP  <||@
  Comment 635 804 NOP  <||@
  Comment 636 806 NOP  <||@
  Comment 637 808 NOP  <||@
  Comment 638 810 NOP  <||@
  Comment 639 812 NOP  <||@
  Comment 640 814 NOP  <||@
  Comment 641 816 NOP  <||@
  Comment 642 818 NOP  <||@
  Comment 643 820 NOP  <||@
  Comment 644 822 NOP  <||@
  Comment 645 824 NOP  <||@
  Comment 646 826 NOP  <||@
  Comment 647 828 NOP  <||@
  Comment 648 830 NOP  <||@
  Comment 649 832 NOP  <||@
  Comment 650 834 NOP  <||@
  Comment 651 836 NOP  <||@
  Comment 652 838 NOP  <||@
  Comment 653 840 NOP  <||@
  Comment 654 842 NOP  <||@
  Comment 655 844 NOP  <||@
  Comment 656 846 NOP  <||@
  Comment 657 848 NOP  <||@
  Comment 658 850 NOP  <||@
  Comment 659 852 NOP  <||@
  Comment 660 854 NOP  <||@
  Comment 661 856 NOP  <||@
  Comment 662 858 NOP  <||@
  Comment 663 860 NOP  <||@
  Comment 664 862 NOP  <||@
  Comment 665 864 NOP  <||@
  Comment 666 866 NOP  <||@
  Comment 667 868 NOP  <||@
  Comment 668 870 NOP  <||@
  Comment 669 872 NOP  <||@
  Comment 670 874 NOP  <||@
  Comment 671 876 NOP  <||@
  Comment 672 878 NOP  <||@
  Comment 673 880 NOP  <||@
  Comment 674 882 NOP  <||@
  Comment 675 884 NOP  <||@
  Comment 676 886 NOP  <||@
  Comment 677 888 NOP  <||@
  Comment 678 890 NOP  <||@
  Comment 679 892 NOP  <||@
  Comment 680 894 AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 741 896 rax|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 748 898 MOV (x: [rdx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 755 900 AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 837 902 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 837 block B23 null  <||@
  Comment 837 904 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 837 906 NOP  <||@
  Comment 838 908 NOP  <||@
  Comment 839 910 NOP  <||@
  Comment 840 912 NOP  <||@
  Comment 841 914 NOP  <||@
  Comment 842 916 r8|DWORD = MOVZXB input: [r8|DWORD[_] * 8 + 26] size: DWORD  <||@
  Comment 851 918 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B64 size: DWORD  <||@
  Comment 860 block B24 null  <||@
  Comment 860 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 860 922 NOP  <||@
  Comment 861 924 NOP  <||@
  Comment 862 926 NOP  <||@
  Comment 863 928 NOP  <||@
  Comment 864 930 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD  <||@
  Comment 873 block B26 null  <||@
  Comment 873 964 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 873 966 NOP  <||@
  Comment 874 968 NOP  <||@
  Comment 875 970 NOP  <||@
  Comment 876 972 NOP  <||@
  Comment 877 974 CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 886 block B28 null  <||@
  Comment 886 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 886 1010 r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 891 1012 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 896 1014 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 901 1016 NOP  <||@
  Comment 902 1018 NOP  <||@
  Comment 903 1020 NOP  <||@
  Comment 904 1022 NOP  <||@
  Comment 905 1024 NOP  <||@
  Comment 906 1026 NOP  <||@
  Comment 907 1028 NOP  <||@
  Comment 908 1030 NOP  <||@
  Comment 909 1032 NOP  <||@
  Comment 910 1034 NOP  <||@
  Comment 911 1036 NOP  <||@
  Comment 912 1038 NOP  <||@
  Comment 913 1040 NOP  <||@
  Comment 914 1042 NOP  <||@
  Comment 915 1044 NOP  <||@
  Comment 916 1046 NOP  <||@
  Comment 917 1048 NOP  <||@
  Comment 918 1050 NOP  <||@
  Comment 919 1052 NOP  <||@
  Comment 920 1054 NOP  <||@
  Comment 921 1056 rsi|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 924 1058 rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 929 1060 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 934 1062 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 937 1064 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30, 7, 25, 22]  <||@
  Comment 939 {HotSpotMethod<StreamEncoder.implWrite(char[], int, int)>}  <||@
  Comment 939 INVOKESPECIAL  <||@
  Comment 944 [stack:24, stack:44, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 952 1066 rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD  <||@
  Comment 956 1068 rsi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 963 1070 r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30, 7, 25, 22]  <||@
  Comment 963 [rsi:0, stack:24, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 963 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 971 1072 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30, 7, 25, 22]  <||@
  Comment 971 [rsi:0, r10:0, stack:24, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 971 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 979 1074 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 987 1076 r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 994 1078 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 998 1080 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1002 1082 CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B63 size: QWORD  <||@
  Comment 1011 block B29 null  <||@
  Comment 1011 1084 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1011 1086 NOP  <||@
  Comment 1012 1088 NOP  <||@
  Comment 1013 1090 NOP  <||@
  Comment 1014 1092 NOP  <||@
  Comment 1015 1094 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1025 block B30 null  <||@
  Comment 1025 1096 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1025 1098 NOP  <||@
  Comment 1026 1100 NOP  <||@
  Comment 1027 1102 NOP  <||@
  Comment 1028 1104 NOP  <||@
  Comment 1029 1106 NOP  <||@
  Comment 1030 1108 NOP  <||@
  Comment 1031 1110 NOP  <||@
  Comment 1032 1112 NOP  <||@
  Comment 1033 1114 NOP  <||@
  Comment 1034 1116 NOP  <||@
  Comment 1035 1118 NOP  <||@
  Comment 1036 1120 NOP  <||@
  Comment 1037 1122 NOP  <||@
  Comment 1038 1124 NOP  <||@
  Comment 1039 1126 NOP  <||@
  Comment 1040 1128 NOP  <||@
  Comment 1041 1130 NOP  <||@
  Comment 1042 1132 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 1103 1134 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 1115 1136 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 1115 block B32 null  <||@
  Comment 1115 1148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1115 1150 NOP  <||@
  Comment 1116 1152 NOP  <||@
  Comment 1117 1154 NOP  <||@
  Comment 1118 1156 NOP  <||@
  Comment 1119 1158 NOP  <||@
  Comment 1120 1160 NOP  <||@
  Comment 1121 1162 NOP  <||@
  Comment 1122 1164 rdx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 1127 1166 MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1135 1168 MEMBAR barriers: 4  <||@
  Comment 1140 1170 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B43 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1150 block B33 null  <||@
  Comment 1150 1172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1150 1174 NOP  <||@
  Comment 1151 1176 NOP  <||@
  Comment 1152 1178 NOP  <||@
  Comment 1153 1180 NOP  <||@
  Comment 1154 1182 NOP  <||@
  Comment 1155 1184 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1163 1186 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 1171 block B34 null  <||@
  Comment 1171 1188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1171 1190 NOP  <||@
  Comment 1172 1192 NOP  <||@
  Comment 1173 1194 NOP  <||@
  Comment 1174 1198 JUMP ~outgoingValues: [] destination: B34 -> B44  <||@
  Comment 1174 block B44 null  <||@
  Comment 1174 1368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1174 1196 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1179 1370 NOP  <||@
  Comment 1180 1372 NOP  <||@
  Comment 1181 1374 NOP  <||@
  Comment 1182 1376 NOP  <||@
  Comment 1183 1378 MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 1190 1380 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 1195 1382 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1195 block B45 null  <||@
  Comment 1195 1384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 1386 NOP  <||@
  Comment 1196 1388 NOP  <||@
  Comment 1197 1390 NOP  <||@
  Comment 1198 1392 NOP  <||@
  Comment 1199 1394 NOP  <||@
  Comment 1200 1396 NOP  <||@
  Comment 1201 1398 NOP  <||@
  Comment 1202 1400 NOP  <||@
  Comment 1203 1402 NOP  <||@
  Comment 1204 1404 NOP  <||@
  Comment 1205 1406 NOP  <||@
  Comment 1206 1408 NOP  <||@
  Comment 1207 1410 NOP  <||@
  Comment 1208 1412 rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1216 1414 r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:25]  <||@
  Comment 1216 [rsi:0, stack:56]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1216 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1224 1416 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:25]  <||@
  Comment 1224 [rsi:0, r10:0, stack:56]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1224 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1232 1418 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1240 1420 r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 1247 1422 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1251 1424 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1255 1426 CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B62 size: QWORD  <||@
  Comment 1264 block B46 null  <||@
  Comment 1264 1428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1264 1430 NOP  <||@
  Comment 1265 1432 NOP  <||@
  Comment 1266 1434 NOP  <||@
  Comment 1267 1436 NOP  <||@
  Comment 1268 1438 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1278 block B47 null  <||@
  Comment 1278 1440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1278 1442 NOP  <||@
  Comment 1279 1444 NOP  <||@
  Comment 1280 1446 NOP  <||@
  Comment 1281 1448 NOP  <||@
  Comment 1282 1450 NOP  <||@
  Comment 1283 1452 NOP  <||@
  Comment 1284 1454 NOP  <||@
  Comment 1285 1456 NOP  <||@
  Comment 1286 1458 NOP  <||@
  Comment 1287 1460 NOP  <||@
  Comment 1288 1462 NOP  <||@
  Comment 1289 1464 NOP  <||@
  Comment 1290 1466 NOP  <||@
  Comment 1291 1468 NOP  <||@
  Comment 1292 1470 NOP  <||@
  Comment 1293 1472 NOP  <||@
  Comment 1294 1474 NOP  <||@
  Comment 1295 1476 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@784c9c58  <||@
  Comment 1356 1478 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 1368 1480 JUMP ~outgoingValues: [] destination: B47 -> B49  <||@
  Comment 1368 block B49 null  <||@
  Comment 1368 1492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1368 1494 NOP  <||@
  Comment 1369 1496 NOP  <||@
  Comment 1370 1498 NOP  <||@
  Comment 1371 1500 NOP  <||@
  Comment 1372 1502 NOP  <||@
  Comment 1373 1504 NOP  <||@
  Comment 1374 1506 NOP  <||@
  Comment 1375 1508 rdx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 1380 1510 MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1388 1512 MEMBAR barriers: 4  <||@
  Comment 1393 1514 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8643527024712085 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B60 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1403 block B50 null  <||@
  Comment 1403 1516 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1403 1518 NOP  <||@
  Comment 1404 1520 NOP  <||@
  Comment 1405 1522 NOP  <||@
  Comment 1406 1524 NOP  <||@
  Comment 1407 1526 NOP  <||@
  Comment 1408 1528 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1416 1530 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015720569195 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 1424 block B51 null  <||@
  Comment 1424 1532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1424 1534 NOP  <||@
  Comment 1425 1536 NOP  <||@
  Comment 1426 1538 NOP  <||@
  Comment 1427 1540 JUMP ~outgoingValues: [] destination: B51 -> B61  <||@
  Comment 1427 block B61 null  <||@
  Comment 1427 1700 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1427 1702 NOP  <||@
  Comment 1428 1704 NOP  <||@
  Comment 1429 1706 NOP  <||@
  Comment 1430 1708 NOP  <||@
  Comment 1431 1710 NOP  <||@
  Comment 1432 1712 NOP  <||@
  Comment 1433 1714 NOP  <||@
  Comment 1434 1716 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1459 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 1475 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 1487 POLL_RETURN_FAR  <||@
  Comment 1501 block B60 null  <||@
  Comment 1501 1690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1501 1692 NOP  <||@
  Comment 1502 1694 NOP  <||@
  Comment 1503 1696 NOP  <||@
  Comment 1504 1698 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 1506 block B48 null  <||@
  Comment 1506 1482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1506 1484 NOP  <||@
  Comment 1507 1486 NOP  <||@
  Comment 1508 1488 NOP  <||@
  Comment 1509 1490 JUMP ~outgoingValues: [] destination: B48 -> B49  <||@
  Comment 1514 block B2 null  <||@
  Comment 1514 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1514 94 NOP  <||@
  Comment 1515 96 NOP  <||@
  Comment 1516 98 NOP  <||@
  Comment 1517 100 NOP  <||@
  Comment 1518 102 NOP  <||@
  Comment 1519 104 NOP  <||@
  Comment 1520 106 NOP  <||@
  Comment 1521 108 rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1528 110 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1532 112 CMPBRANCH (x: rcx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD  <||@
  Comment 1541 block B3 null  <||@
  Comment 1541 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 116 NOP  <||@
  Comment 1542 118 NOP  <||@
  Comment 1543 120 NOP  <||@
  Comment 1544 122 NOP  <||@
  Comment 1545 124 NOP  <||@
  Comment 1546 126 NOP  <||@
  Comment 1547 128 r8|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1555 130 rax|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 1560 132 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 1568 block B5 null  <||@
  Comment 1568 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1568 160 NOP  <||@
  Comment 1569 162 NOP  <||@
  Comment 1570 164 NOP  <||@
  Comment 1571 166 NOP  <||@
  Comment 1572 168 NOP  <||@
  Comment 1573 170 MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1580 172 MEMBAR barriers: 4  <||@
  Comment 1585 174 JUMP ~outgoingValues: [] destination: B5 -> B10  <||@
  Comment 1590 block B43 null  <||@
  Comment 1590 1356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1590 1358 NOP  <||@
  Comment 1591 1360 NOP  <||@
  Comment 1592 1362 NOP  <||@
  Comment 1593 1366 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 1598 block B31 null  <||@
  Comment 1598 1138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1598 1140 NOP  <||@
  Comment 1599 1142 NOP  <||@
  Comment 1600 1144 NOP  <||@
  Comment 1601 1146 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 1606 block B15 null  <||@
  Comment 1606 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1606 562 NOP  <||@
  Comment 1607 564 NOP  <||@
  Comment 1608 566 NOP  <||@
  Comment 1609 568 NOP  <||@
  Comment 1610 570 NOP  <||@
  Comment 1611 572 NOP  <||@
  Comment 1612 574 NOP  <||@
  Comment 1613 576 rax|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1620 578 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 1624 580 CMPBRANCH (x: rdi|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: QWORD  <||@
  Comment 1633 block B16 null  <||@
  Comment 1633 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1633 584 NOP  <||@
  Comment 1634 586 NOP  <||@
  Comment 1635 588 NOP  <||@
  Comment 1636 590 NOP  <||@
  Comment 1637 592 NOP  <||@
  Comment 1638 594 NOP  <||@
  Comment 1639 596 rdi|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1646 598 rax|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 1650 600 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 1658 block B18 null  <||@
  Comment 1658 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1658 632 NOP  <||@
  Comment 1659 634 NOP  <||@
  Comment 1660 636 NOP  <||@
  Comment 1661 638 NOP  <||@
  Comment 1662 640 NOP  <||@
  Comment 1663 642 MOV (x: [rdx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1670 644 MEMBAR barriers: 4  <||@
  Comment 1675 646 JUMP ~outgoingValues: [] destination: B18 -> B23  <||@
  Comment 1680 block B11 null  <||@
  Comment 1680 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1680 430 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1685 432 NOP  <||@
  Comment 1686 434 NOP  <||@
  Comment 1687 436 NOP  <||@
  Comment 1688 438 JUMP ~outgoingValues: [] destination: B11 -> B45  <||@
  Comment 1693 block B52 null  <||@
  Comment 1693 1542 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1693 1544 NOP  <||@
  Comment 1694 1546 NOP  <||@
  Comment 1695 1548 NOP  <||@
  Comment 1696 1550 NOP  <||@
  Comment 1697 1552 NOP  <||@
  Comment 1698 1554 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1706 1556 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD  <||@
  Comment 1715 block B53 null  <||@
  Comment 1715 1558 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1715 1560 NOP  <||@
  Comment 1716 1562 NOP  <||@
  Comment 1717 1564 NOP  <||@
  Comment 1718 1566 JUMP ~outgoingValues: [] destination: B53 -> B61  <||@
  Comment 1723 block B35 null  <||@
  Comment 1723 1200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1723 1202 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 1728 1204 NOP  <||@
  Comment 1729 1206 NOP  <||@
  Comment 1730 1208 NOP  <||@
  Comment 1731 1210 NOP  <||@
  Comment 1732 1212 NOP  <||@
  Comment 1733 1214 r11|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1741 1216 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.8992113780371063 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 1750 block B36 null  <||@
  Comment 1750 1218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1750 1220 NOP  <||@
  Comment 1751 1222 NOP  <||@
  Comment 1752 1224 NOP  <||@
  Comment 1753 1228 JUMP ~outgoingValues: [] destination: B36 -> B44  <||@
  Comment 1758 block B54 null  <||@
  Comment 1758 1568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1758 1570 NOP  <||@
  Comment 1759 1572 NOP  <||@
  Comment 1760 1574 NOP  <||@
  Comment 1761 1576 NOP  <||@
  Comment 1762 1578 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1777 block B55 null  <||@
  Comment 1777 1580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1777 1582 NOP  <||@
  Comment 1778 1584 NOP  <||@
  Comment 1779 1586 NOP  <||@
  Comment 1780 1588 JUMP ~outgoingValues: [] destination: B55 -> B61  <||@
  Comment 1785 block B37 null  <||@
  Comment 1785 1230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1785 1232 NOP  <||@
  Comment 1786 1234 NOP  <||@
  Comment 1787 1236 NOP  <||@
  Comment 1788 1238 NOP  <||@
  Comment 1789 1240 CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1804 block B38 null  <||@
  Comment 1804 1242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1804 1244 NOP  <||@
  Comment 1805 1246 NOP  <||@
  Comment 1806 1248 NOP  <||@
  Comment 1807 1252 JUMP ~outgoingValues: [] destination: B38 -> B44  <||@
  Comment 1812 block B6 null  <||@
  Comment 1812 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1812 178 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 180 NOP  <||@
  Comment 1818 182 NOP  <||@
  Comment 1819 184 NOP  <||@
  Comment 1820 186 NOP  <||@
  Comment 1821 188 NOP  <||@
  Comment 1822 190 NOP  <||@
  Comment 1823 192 NOP  <||@
  Comment 1824 194 NOP  <||@
  Comment 1825 196 NOP  <||@
  Comment 1826 198 NOP  <||@
  Comment 1827 200 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1830 202 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1835 204 stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1840 206 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 18]  <||@
  Comment 1843 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1843 INVOKESPECIAL  <||@
  Comment 1848 [stack:48, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:64|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1856 208 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 1864 block B7 null  <||@
  Comment 1864 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1864 212 NOP  <||@
  Comment 1865 214 NOP  <||@
  Comment 1866 216 NOP  <||@
  Comment 1867 218 NOP  <||@
  Comment 1868 220 NOP  <||@
  Comment 1869 222 NOP  <||@
  Comment 1870 224 NOP  <||@
  Comment 1871 226 NOP  <||@
  Comment 1872 228 NOP  <||@
  Comment 1873 230 NOP  <||@
  Comment 1874 232 NOP  <||@
  Comment 1875 234 NOP  <||@
  Comment 1876 236 NOP  <||@
  Comment 1877 238 NOP  <||@
  Comment 1878 240 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1883 242 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1890 244 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1895 246 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1901 248 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1907 250 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1912 252 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1920 254 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 18]  <||@
  Comment 1923 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1923 INVOKESPECIAL  <||@
  Comment 1928 [stack:48, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1936 256 r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1941 258 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 1946 260 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1951 262 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 1956 block B19 null  <||@
  Comment 1956 648 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1956 650 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1961 652 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1965 654 stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD  <||@
  Comment 1970 656 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1975 658 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1980 660 NOP  <||@
  Comment 1981 662 NOP  <||@
  Comment 1982 664 NOP  <||@
  Comment 1983 666 NOP  <||@
  Comment 1984 668 NOP  <||@
  Comment 1985 670 NOP  <||@
  Comment 1986 672 NOP  <||@
  Comment 1987 674 NOP  <||@
  Comment 1988 676 NOP  <||@
  Comment 1989 678 NOP  <||@
  Comment 1990 680 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1993 682 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1998 684 stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2003 686 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23, 7, 25, 22]  <||@
  Comment 2003 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 2003 INVOKESPECIAL  <||@
  Comment 2008 [stack:8, stack:20, stack:24, stack:32, stack:44, stack:48, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1          
     locals:  |stack:104|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                  
     locals:  |stack:104|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2           |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2016 688 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7081922816519972 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 2024 block B20 null  <||@
  Comment 2024 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2024 692 NOP  <||@
  Comment 2025 694 NOP  <||@
  Comment 2026 696 NOP  <||@
  Comment 2027 698 NOP  <||@
  Comment 2028 700 NOP  <||@
  Comment 2029 702 NOP  <||@
  Comment 2030 704 NOP  <||@
  Comment 2031 706 NOP  <||@
  Comment 2032 708 NOP  <||@
  Comment 2033 710 NOP  <||@
  Comment 2034 712 NOP  <||@
  Comment 2035 714 NOP  <||@
  Comment 2036 716 NOP  <||@
  Comment 2037 718 NOP  <||@
  Comment 2038 720 rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2043 722 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2050 724 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2055 726 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2061 728 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2067 730 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2072 732 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2080 734 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23, 7, 25, 22]  <||@
  Comment 2083 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 2083 INVOKESPECIAL  <||@
  Comment 2088 [stack:8, stack:20, stack:24, stack:32, stack:44, stack:48, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                  
     locals:  |stack:104|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2           |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2096 736 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2101 738 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2105 740 rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD  <||@
  Comment 2109 742 r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 2114 744 r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2119 746 r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2124 748 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 2129 750 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 752 JUMP ~outgoingValues: [] destination: B20 -> B23  <||@
  Comment 2139 block B8 null  <||@
  Comment 2139 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2139 266 NOP  <||@
  Comment 2140 268 NOP  <||@
  Comment 2141 270 NOP  <||@
  Comment 2142 272 r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2147 274 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 2152 276 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2157 278 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 2162 block B21 null  <||@
  Comment 2162 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2162 756 NOP  <||@
  Comment 2163 758 NOP  <||@
  Comment 2164 760 NOP  <||@
  Comment 2165 762 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2170 764 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2174 766 rbx|DWORD[_] = MOVE input: stack:68|DWORD[_] moveKind: DWORD  <||@
  Comment 2178 768 r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 2183 770 r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2188 772 r9|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2193 774 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 2198 776 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2203 778 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 2208 block B56 null  <||@
  Comment 2208 1590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2208 1592 NOP  <||@
  Comment 2209 1594 NOP  <||@
  Comment 2210 1596 NOP  <||@
  Comment 2211 1598 NOP  <||@
  Comment 2212 1600 NOP  <||@
  Comment 2213 1602 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2220 1604 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 2225 block B58 loop 1 depth 1 header:389|LoopBegin  <||@
  Comment 2225 1640 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2240 1642 NOP  <||@
  Comment 2241 1644 NOP  <||@
  Comment 2242 1646 NOP  <||@
  Comment 2243 1648 NOP  <||@
  Comment 2244 1650 NOP  <||@
  Comment 2245 1652 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 26]  <||@
  Comment 2252 [rsi:0, r10:0, r11:0, stack:56]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |r11|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |r11|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2252 {infopoint: SAFEPOINT}  <||@
  Comment 2252 POLL_FAR  <||@
  Comment 2255 1654 JUMP ~outgoingValues: [] destination: B58 -> B57  <||@
  Comment 2255 block B57 loop 1 depth 1 header:389|LoopBegin  <||@
  Comment 2255 1606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2255 1608 NOP  <||@
  Comment 2256 1610 NOP  <||@
  Comment 2257 1612 NOP  <||@
  Comment 2258 1614 NOP  <||@
  Comment 2259 1616 NOP  <||@
  Comment 2260 1618 NOP  <||@
  Comment 2261 1620 NOP  <||@
  Comment 2262 1622 NOP  <||@
  Comment 2263 1624 NOP  <||@
  Comment 2264 1626 NOP  <||@
  Comment 2265 1628 NOP  <||@
  Comment 2266 1630 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 2274 1632 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 2281 1634 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2284 1636 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 2294 1638 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 2296 block B59 null  <||@
  Comment 2296 1656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2296 1658 stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2301 1660 NOP  <||@
  Comment 2302 1662 NOP  <||@
  Comment 2303 1664 NOP  <||@
  Comment 2304 1666 NOP  <||@
  Comment 2305 1668 NOP  <||@
  Comment 2306 1670 NOP  <||@
  Comment 2307 1672 NOP  <||@
  Comment 2308 1674 NOP  <||@
  Comment 2309 1676 NOP  <||@
  Comment 2310 1678 NOP  <||@
  Comment 2311 1680 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 2319 1682 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2323 1684 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2326 1686 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 26]  <||@
  Comment 2327 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 2327 INVOKESTATIC  <||@
  Comment 2332 [stack:8, stack:56]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                  
     locals:  |stack:104|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2340 1688 JUMP ~outgoingValues: [] destination: B59 -> B61  <||@
  Comment 2345 block B39 null  <||@
  Comment 2345 1254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2345 1256 NOP  <||@
  Comment 2346 1258 NOP  <||@
  Comment 2347 1260 NOP  <||@
  Comment 2348 1262 NOP  <||@
  Comment 2349 1264 NOP  <||@
  Comment 2350 1266 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2357 1268 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 2362 block B41 loop 0 depth 1 header:305|LoopBegin  <||@
  Comment 2362 1304 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2368 1306 NOP  <||@
  Comment 2369 1308 NOP  <||@
  Comment 2370 1310 NOP  <||@
  Comment 2371 1312 NOP  <||@
  Comment 2372 1314 NOP  <||@
  Comment 2373 1316 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35, 7, 25, 22]  <||@
  Comment 2380 [rsi:0, r10:0, r11:0, stack:24, stack:56, stack:68, stack:72]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |r10|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |r10|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r10|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2380 {infopoint: SAFEPOINT}  <||@
  Comment 2380 POLL_FAR  <||@
  Comment 2383 1318 JUMP ~outgoingValues: [] destination: B41 -> B40  <||@
  Comment 2383 block B40 loop 0 depth 1 header:305|LoopBegin  <||@
  Comment 2383 1270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2383 1272 NOP  <||@
  Comment 2384 1274 NOP  <||@
  Comment 2385 1276 NOP  <||@
  Comment 2386 1278 NOP  <||@
  Comment 2387 1280 NOP  <||@
  Comment 2388 1282 NOP  <||@
  Comment 2389 1284 NOP  <||@
  Comment 2390 1286 NOP  <||@
  Comment 2391 1288 NOP  <||@
  Comment 2392 1290 NOP  <||@
  Comment 2393 1292 NOP  <||@
  Comment 2394 1294 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 2402 1296 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 2409 1298 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2412 1300 rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 2422 1302 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 2424 block B42 null  <||@
  Comment 2424 1320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2424 1322 stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2429 1324 NOP  <||@
  Comment 2430 1326 NOP  <||@
  Comment 2431 1328 NOP  <||@
  Comment 2432 1330 NOP  <||@
  Comment 2433 1332 NOP  <||@
  Comment 2434 1334 NOP  <||@
  Comment 2435 1336 NOP  <||@
  Comment 2436 1338 NOP  <||@
  Comment 2437 1340 NOP  <||@
  Comment 2438 1342 NOP  <||@
  Comment 2439 1344 r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 2447 1346 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2451 1348 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2454 1350 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35, 7, 25, 22]  <||@
  Comment 2455 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 2455 INVOKESTATIC  <||@
  Comment 2460 [stack:8, stack:24, stack:56, stack:68, stack:72]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                  
     locals:  |stack:104|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2468 1354 JUMP ~outgoingValues: [] destination: B42 -> B44  <||@
  Comment 2473 block B64 null  <||@
  Comment 2473 1774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2473 1776 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2478 1778 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2483 1780 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2488 1782 NOP  <||@
  Comment 2489 1784 NOP  <||@
  Comment 2490 1786 NOP  <||@
  Comment 2491 1788 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2498 1790 r10|DWORD = MOVE input: int[-179219|0xfffffffffffd43ed]  <||@
  Comment 2504 1804 JUMP ~outgoingValues: [] destination: B64 -> B65  <||@
  Comment 2504 block B65 null  <||@
  Comment 2504 1806 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2504 950 r14|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2509 952 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2514 954 rax|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2519 956 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2524 958 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2529 960 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2534 1808 NOP  <||@
  Comment 2535 1810 NOP  <||@
  Comment 2536 1812 NOP  <||@
  Comment 2537 1814 NOP  <||@
  Comment 2538 1816 NOP  <||@
  Comment 2539 1818 NOP  <||@
  Comment 2540 1820 NOP  <||@
  Comment 2541 1822 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2548 1824 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2555 1826 DEOPT info [bci:4, 1, 30, 7, 25, 22]  <||@
  Comment 2555 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2560 [rax:0, rcx:0, rsi:0, r13:0, r14:0]at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |r14|QWORD[.] 
     stack:   |r8|DWORD     
  at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1, duringCall: true, rethrow: false]
              |0             |1             |2           |3        
     locals:  |r14|QWORD[.]  |rax|QWORD[.]  |int[0|0x0]  |r9|DWORD 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5             |6  |7 
     locals:  |-  |-  |-  |-  |-  |r13|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4 
     locals:  |-  |-  |rcx|QWORD[.]  |-  |-   <||@
  Comment 2568 block B17 null  <||@
  Comment 2568 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2568 604 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2573 606 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2578 608 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2583 610 NOP  <||@
  Comment 2584 612 NOP  <||@
  Comment 2585 614 NOP  <||@
  Comment 2586 616 NOP  <||@
  Comment 2587 618 NOP  <||@
  Comment 2588 620 NOP  <||@
  Comment 2589 622 NOP  <||@
  Comment 2590 624 MOV x: [r15|QWORD + 1156] y: -183571 size: DWORD  <||@
  Comment 2601 626 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2612 628 DEOPT info [bci:32, 1, 4, 4, 23, 7, 25, 22]  <||@
  Comment 2612 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2617 [rbp:0, stack:24, stack:32, stack:48, stack:56, stack:72]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rbp|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD     |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rbp|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2           |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2625 block B66 null  <||@
  Comment 2625 1828 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2625 1830 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2630 1832 NOP  <||@
  Comment 2631 1834 NOP  <||@
  Comment 2632 1836 NOP  <||@
  Comment 2633 1838 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2640 1840 r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed]  <||@
  Comment 2646 1842 JUMP ~outgoingValues: [] destination: B66 -> B68  <||@
  Comment 2646 block B68 null  <||@
  Comment 2646 1860 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2646 1862 NOP  <||@
  Comment 2647 1864 NOP  <||@
  Comment 2648 1866 NOP  <||@
  Comment 2649 1868 NOP  <||@
  Comment 2650 1870 NOP  <||@
  Comment 2651 1872 NOP  <||@
  Comment 2652 1874 NOP  <||@
  Comment 2653 1876 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2660 1878 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2667 1880 DEOPT info [bci:12, 4, 4, 18]  <||@
  Comment 2667 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2672 [stack:56, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2680 block B63 null  <||@
  Comment 2680 1746 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2680 1748 NOP  <||@
  Comment 2681 1750 NOP  <||@
  Comment 2682 1752 NOP  <||@
  Comment 2683 1754 NOP  <||@
  Comment 2684 1756 NOP  <||@
  Comment 2685 1758 NOP  <||@
  Comment 2686 1760 NOP  <||@
  Comment 2687 1762 NOP  <||@
  Comment 2688 1764 NOP  <||@
  Comment 2689 1766 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2693 1768 MOV x: [r15|QWORD + 1156] y: -182291 size: DWORD  <||@
  Comment 2704 1770 MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD  <||@
  Comment 2715 1772 DEOPT info [bci:4, 2, 5, 4, 35, 7, 25, 22]  <||@
  Comment 2715 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2720 [rsi:0, r10:0, stack:24, stack:56, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:88|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2728 block B4 null  <||@
  Comment 2728 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2728 136 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2733 138 NOP  <||@
  Comment 2734 140 NOP  <||@
  Comment 2735 142 NOP  <||@
  Comment 2736 144 NOP  <||@
  Comment 2737 146 NOP  <||@
  Comment 2738 148 NOP  <||@
  Comment 2739 150 NOP  <||@
  Comment 2740 152 MOV x: [r15|QWORD + 1156] y: -185875 size: DWORD  <||@
  Comment 2751 154 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2762 156 DEOPT info [bci:32, 1, 4, 4, 18]  <||@
  Comment 2762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2767 [r11:0, stack:56, stack:72]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r11|QWORD[.]  |-  |- 
     stack:   |r8|DWORD      |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2775 block B62 null  <||@
  Comment 2775 1718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2775 1720 NOP  <||@
  Comment 2776 1722 NOP  <||@
  Comment 2777 1724 NOP  <||@
  Comment 2778 1726 NOP  <||@
  Comment 2779 1728 NOP  <||@
  Comment 2780 1730 NOP  <||@
  Comment 2781 1732 NOP  <||@
  Comment 2782 1734 NOP  <||@
  Comment 2783 1736 NOP  <||@
  Comment 2784 1738 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7ca0c16a encoding: base: 0 shift: 3  <||@
  Comment 2788 1740 MOV x: [r15|QWORD + 1156] y: -184595 size: DWORD  <||@
  Comment 2799 1742 MOV x: [r15|QWORD + 1168] y: 27540 size: QWORD  <||@
  Comment 2810 1744 DEOPT info [bci:4, 2, 5, 4, 26]  <||@
  Comment 2810 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2815 [rsi:0, r10:0, stack:56]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2823 block B25 null  <||@
  Comment 2823 932 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2823 934 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2828 936 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2833 938 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2838 940 NOP  <||@
  Comment 2839 942 NOP  <||@
  Comment 2840 944 NOP  <||@
  Comment 2841 946 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2848 948 r10|DWORD = MOVE input: int[-180243|0xfffffffffffd3fed]  <||@
  Comment 2854 962 JUMP ~outgoingValues: [] destination: B25 -> B65  <||@
  Comment 2859 block B69 null  <||@
  Comment 2859 1882 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2859 1884 NOP  <||@
  Comment 2860 1886 NOP  <||@
  Comment 2861 1888 NOP  <||@
  Comment 2862 1890 NOP  <||@
  Comment 2863 1892 NOP  <||@
  Comment 2864 1894 NOP  <||@
  Comment 2865 1896 NOP  <||@
  Comment 2866 1898 MOV x: [r15|QWORD + 1156] y: -173075 size: DWORD  <||@
  Comment 2877 1900 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2888 1902 DEOPT info [bci:0]  <||@
  Comment 2888 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2893 [stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2901 block B67 null  <||@
  Comment 2901 1844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2901 1846 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2906 1848 NOP  <||@
  Comment 2907 1850 NOP  <||@
  Comment 2908 1852 NOP  <||@
  Comment 2909 1854 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2916 1856 r10|DWORD = MOVE input: int[-113971|0xfffffffffffe42cd]  <||@
  Comment 2922 1858 JUMP ~outgoingValues: [] destination: B67 -> B68  <||@
  Comment 2927 block B27 null  <||@
  Comment 2927 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2927 978 stack:88|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2932 980 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2937 982 stack:56|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2942 984 NOP  <||@
  Comment 2943 986 NOP  <||@
  Comment 2944 988 NOP  <||@
  Comment 2945 990 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2952 992 r10|DWORD = MOVE input: int[-181267|0xfffffffffffd3bed]  <||@
  Comment 2958 1006 JUMP ~outgoingValues: [] destination: B27 -> B65  <||@
  Comment 2968 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2983 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2998 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3013 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3028 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3043 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3058 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3083 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3111 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3116 [rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 3146 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3151 [rsi:0, r10:0, stack:68, stack:72]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:159) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 3181 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3186 [rax:0, rsi:0, r9:0, r10:0, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3216 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3221 [rsi:0, r8:0, r9:0, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3251 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3256 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3286 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3291 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3321 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3326 [rax:0, rbx:0, rsi:0, r8:0, r9:0, stack:44, stack:68, stack:72]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0           
     locals:  |r9|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:161) [bci: 18, duringCall: true, rethrow: false]
              |0             |1            |2            |3  |4 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |r9|QWORD[.]  |-  |-   <||@
  Comment 3356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3361 [rsi:0, stack:24, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 3391 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3396 [rsi:0, r10:0, stack:24, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  |- 
  at java.io.OutputStreamWriter.write(OutputStreamWriter.java:219) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedWriter.implFlushBuffer(BufferedWriter.java:178) [bci: 25, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:163) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 3426 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3431 [rsi:0, stack:56]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 3461 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3466 [rsi:0, r10:0, stack:56]at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:165) [bci: 25, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4 
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 3474 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3474 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3480 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3480 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
