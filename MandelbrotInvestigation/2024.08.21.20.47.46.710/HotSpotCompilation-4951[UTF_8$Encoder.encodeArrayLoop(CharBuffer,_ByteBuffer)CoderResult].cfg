begin_compilation
  name " HotSpotCompilation-4951[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  method "HotSpotCompilation-4951[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  date 1724269747397
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a363  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.UTF_8$Encoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?58 v231 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.nio.HeapCharBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v391 v231 v385 ?58 v382 v381 v383 ?166 ?165 v384 ?155 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.nio.ByteBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v231 ?58 v392 v389 ?167 v390 v387 v386 v388 v393 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 447
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v314 a363 a369 v378 v380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a363 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: int[-51211|0xffffffffffff37f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1504) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: n# char[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v381 
lastLocationAccess: - 
=== Succesors ===
next: i364 
=== Usages ===
a204 v394 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v381 lastLocationAccess: - #next: i364  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v382 
lastLocationAccess: - 
=== Succesors ===
next: i365 
=== Usages ===
v242 
=== Predecessor ===
a363 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v382 lastLocationAccess: - #next: i365  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i365 v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:309) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v384 
lastLocationAccess: - 
=== Succesors ===
next: i366 
=== Usages ===
i15 
=== Predecessor ===
i364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v384 lastLocationAccess: - #next: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 6]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v383 
lastLocationAccess: - 
=== Succesors ===
next: i367 
=== Usages ===
i15 i22 i139 
=== Predecessor ===
i365 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v383 lastLocationAccess: - #next: i367  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:361) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:449) [bci: 21]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v385 
lastLocationAccess: - 
=== Succesors ===
next: i368 
=== Usages ===
i22 v157 
=== Predecessor ===
i366 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v385 lastLocationAccess: - #next: i368  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v391 
lastLocationAccess: - 
=== Succesors ===
next: a369 
=== Usages ===
v162 
=== Predecessor ===
i367 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v391 lastLocationAccess: - #next: a369  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a369 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-55819|0xffffffffffff25f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1504) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v386 
lastLocationAccess: - 
=== Succesors ===
next: i370 
=== Usages ===
a221 v395 
=== Predecessor ===
i368 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v386 lastLocationAccess: - #next: i370  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i370 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1506) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v387 
lastLocationAccess: - 
=== Succesors ===
next: i371 
=== Usages ===
v244 
=== Predecessor ===
a369 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v387 lastLocationAccess: - #next: i371  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i371 v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:309) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v389 
lastLocationAccess: - 
=== Succesors ===
next: i372 
=== Usages ===
i33 
=== Predecessor ===
i370 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v389 lastLocationAccess: - #next: i372  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 34]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v388 
lastLocationAccess: - 
=== Succesors ===
next: i373 
=== Usages ===
i33 i40 i140 
=== Predecessor ===
i371 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v388 lastLocationAccess: - #next: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:361) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 49]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v390 
lastLocationAccess: - 
=== Succesors ===
next: v374 
=== Usages ===
i40 v186 
=== Predecessor ===
i372 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v390 lastLocationAccess: - #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v393 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
v362 
=== Predecessor ===
i373 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v393 lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a363 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: v394 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: v394 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 v244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i364 
y: i241 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i364 y: i241  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v270 #falseSuccessor: v271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1508) [bci: 30]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a369 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: v395 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: v395 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i370 
y: i241 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i370 y: i241  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v278 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1508) [bci: 30]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: j355 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j355  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1504) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a363 
=== Succesors ===
=== Usages ===
?58 j355 v231 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64
=== Inputs ===
object: a204 
=== Succesors ===
next: j357 
=== Usages ===
j356 
=== Predecessor ===
v278 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a204 #next: j357  <|@  <|@
f <@~|@floating>@ <|@
tid a221 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1504) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a369 
=== Succesors ===
=== Usages ===
?58 j357 v231 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64
=== Inputs ===
object: a221 
=== Succesors ===
next: i57 
=== Usages ===
j358 
=== Predecessor ===
j355 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a221 #next: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 13]
stamp: i32
=== Inputs ===
x: i365 
y: i366 
=== Succesors ===
=== Usages ===
j48 i60 ?58 i42 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i365 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i15 
=== Succesors ===
=== Usages ===
j50 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i15  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64 [-4294967296 - 4294967294] bits:x...x0
=== Inputs ===
x: j48 
y: i49 
=== Succesors ===
=== Usages ===
j75 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j48 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid j51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j75 j76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64 [-4294967280 - 4294967310] bits:x...x0
=== Inputs ===
x: j50 
y: j51 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j50 y: j51  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64
=== Inputs ===
x: j75 
y: j355 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j75 y: j355  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 41]
stamp: i32
=== Inputs ===
x: i371 
y: i372 
=== Succesors ===
=== Usages ===
j54 i43 ?58 i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i371 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
j76 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid j76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64 [-2147483632 - 2147483663]
=== Inputs ===
x: j54 
y: j51 
=== Succesors ===
=== Usages ===
j358 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j54 y: j51  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64
=== Inputs ===
x: j76 
y: j357 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j76 y: j357  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 52]
stamp: i32
=== Inputs ===
x: i372 
y: i373 
=== Succesors ===
=== Usages ===
i43 ?58 v231 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i372 y: i373  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 74]
stamp: i32
=== Inputs ===
x: i40 
y: i33 
=== Succesors ===
=== Usages ===
i138 v136 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i40 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:449) [bci: 24]
stamp: i32
=== Inputs ===
x: i366 
y: i367 
=== Succesors ===
=== Usages ===
v62 ?58 v231 i42 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i366 y: i367  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 69]
stamp: i32
=== Inputs ===
x: i22 
y: i15 
=== Succesors ===
=== Usages ===
i138 v136 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i22 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i42 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
stamp: i32
=== Inputs ===
condition: v136 
trueValue: i43 
falseValue: i42 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v136 trueValue: i43 falseValue: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
charset: ASCII
locationIdentity: Array: char
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j356 
dst: j358 
len: i138 
=== Succesors ===
next: v65 
=== Usages ===
?59 i60 i61 
=== Predecessor ===
j357 >@ <|@
instruction <@EncodeArray|@jdk.graal.compiler.replacements.nodes.EncodeArrayNode>@ stateAfter: - lastLocationAccess: - src: j356 dst: j358 len: i138 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:458) [bci: 96]
stamp: i32
=== Inputs ===
x: i33 
y: i57 
=== Succesors ===
=== Usages ===
v231 ?167 i140 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i33 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:457) [bci: 89]
stamp: i32
=== Inputs ===
x: i15 
y: i57 
=== Succesors ===
=== Usages ===
v62 v231 i139 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i15 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i22 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
profileData: PROFILED designatedSuccessorProbability: 8.274506761773992E-6
stamp: void
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i57 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v64 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: a67 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a67  <|@  <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
referencedType: [null]
returnStamp: a# java.nio.charset.CoderResult
signature: [HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>, UnresolvedJavaType<Ljava/nio/CharBuffer;>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/nio/ByteBuffer;>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>
=== Inputs ===
arguments: a1 a2 a204 i60 i22 a3 a221 i61 i40 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a204 i60 i22 a3 a221 i61 i40  <|@  <|@
tid ?305 <|@
d <@d|@=== Debug Properties ===
bci: 120
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 461
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a67 <|@
d <@d|@=== Debug Properties ===
bci: 120
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
polymorphic: false
stamp: a# java.nio.charset.CoderResult
targetMethod: Direct#UTF_8$Encoder.encodeArrayLoopSlow
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v231 
stateDuring: ?305 
=== Succesors ===
next: v69 
=== Usages ===
v69 
=== Predecessor ===
v64 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v231 stateDuring: ?305 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 123]
stamp: void
=== Inputs ===
memoryMap: - 
result: a67 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a67 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 124]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32
=== Inputs ===
x: i60 
y: i366 
=== Succesors ===
=== Usages ===
?155 v157 v159 v162 v235 ?165 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i60 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i367 
y: i139 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i367 y: i139  <|@  <|@
f <@~|@floating>@ <|@
tid j332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 j346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v282 #falseSuccessor: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -71955
stableDimension: 0
stamp: i32 [-71955]
stampKind: i32
value: int[-71955|0xfffffffffffee6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i83 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i139 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 j346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v286 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v286 #falseSuccessor: v287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -72979
stableDimension: 0
stamp: i32 [-72979]
stampKind: i32
value: int[-72979|0xfffffffffffee2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i368 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i139 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid j341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: 6420
stableDimension: 0
stamp: i64 [6420]
stampKind: i64
value: long[6420|0x1914]
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 j346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v290 #falseSuccessor: v291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -74003
stableDimension: 0
stamp: i32 [-74003]
stampKind: i32
value: int[-74003|0xfffffffffffedeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32 [-74003 - -71955] bits:1...1011xxxx1011101101
valueDescription: i32
=== Inputs ===
merge: v329 
values: i331 i337 i340 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v329 values: i331 i337 i340  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i64 [5140 - 6420] bits:0...01xxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v329 
values: j332 j338 j341 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v329 values: j332 j338 j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v330 v336 v339 
=== Succesors ===
next: v335 
=== Usages ===
i333 j334 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v330 v336 v339 #next: v335  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 78
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
sourceFile: UTF_8.java
sourceLine: 456
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a204 i15 i22 a221 i33 i40 
=== Succesors ===
=== Usages ===
?59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a204 i15 i22 a221 i33 i40  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: ireturn
code: ResolvedJavaMethodBytecode<System$2.encodeASCII(char[], int, byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
sourceFile: System.java
sourceLine: 2506
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
values: i57 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58 values: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
stateBefore: ?59 
actionAndReason: i333 
speculation: j334 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?59 actionAndReason: i333 speculation: j334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v384 
lastLocationAccess: - 
value: i139 
stateAfter: - 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v384 lastLocationAccess: - value: i139 stateAfter: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v374 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}]
keySuccessors: [I@45c342d7
keys: [HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>]
profileData: PROFILED keyProbabilities: [1.0, 0.0]
stamp: void
=== Inputs ===
value: v362 
=== Succesors ===
successors: v178 v180 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v362 #successors: v178 v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 17]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32
=== Inputs ===
x: i61 
y: i372 
=== Succesors ===
=== Usages ===
v239 v186 v188 v191 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i61 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i140 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i373 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v294 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v294 #falseSuccessor: v295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027]
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i140 
y: i83 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i140 y: i83  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v298 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v298 #falseSuccessor: v299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -76051
stableDimension: 0
stamp: i32 [-76051]
stampKind: i32
value: int[-76051|0xfffffffffffed6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: i375 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i375  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v392 
lastLocationAccess: - 
=== Succesors ===
next: v304 
=== Usages ===
v191 
=== Predecessor ===
v299 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v392 lastLocationAccess: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i140 
y: i375 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i140 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v303 
=== Usages ===
=== Predecessor ===
i375 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v302 #falseSuccessor: v303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -77075
stableDimension: 0
stamp: i32 [-77075]
stampKind: i32
value: int[-77075|0xfffffffffffed2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v389 
lastLocationAccess: - 
value: i140 
stateAfter: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v389 lastLocationAccess: - value: i140 stateAfter: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid a73 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:464) [bci: 133]
rawvalue: CoderResult@167784470
stableDimension: 0
stamp: a!# java.nio.charset.CoderResult
stampKind: a java.lang.Object
value: Object[CoderResult@167784470]
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:464) [bci: 136]
stamp: void
=== Inputs ===
memoryMap: - 
result: a73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: 7060
stableDimension: 0
stamp: i64 [7060]
stampKind: i64
value: long[7060|0x1b94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -45875
stableDimension: 0
stamp: i32 [-45875]
stampKind: i32
value: int[-45875|0xffffffffffff4ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32 [-77075 - -45875] bits:1...1xx10xxxx011x01101
valueDescription: i32
=== Inputs ===
merge: v342 
values: i344 i349 i352 i354 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v342 values: i344 i349 i352 i354  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i64 [5140 - 7060] bits:0...01xxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v342 
values: j332 j350 j338 j341 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v342 values: j332 j350 j338 j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v348 v351 v353 
=== Succesors ===
next: v347 
=== Usages ===
i345 j346 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v348 v351 v353 #next: v347  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 130
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 463
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
localsSize: 4
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 82
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?199 
values: - - a3 i61 
=== Succesors ===
=== Usages ===
?155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?199 values: - - a3 i61  <|@  <|@
tid ?155 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
sourceFile: CharBuffer.java
sourceLine: 285
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?167 
values: a2 i139 
=== Succesors ===
=== Usages ===
?166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?167 values: a2 i139  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 1551
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a2 
=== Succesors ===
=== Usages ===
?165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a2  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
sourceFile: Buffer.java
sourceLine: 330
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?166 
values: a2 i139 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?166 values: a2 i139  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
stateBefore: ?165 
actionAndReason: i345 
speculation: j346 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?165 actionAndReason: i345 speculation: j346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid j328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: -70931
stableDimension: 0
stamp: i32 [-70931]
stampKind: i32
value: int[-70931|0xfffffffffffeeaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v279 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: -68883
stableDimension: 0
stamp: i32 [-68883]
stampKind: i32
value: int[-68883|0xfffffffffffef2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: i32 [-70931 - -68883] bits:1...10111xx01011101101
valueDescription: i32
=== Inputs ===
merge: v308 
values: i324 i327 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v308 values: i324 i327  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: i64 [660 - 3220] bits:0...0xxx010010100
valueDescription: i64
=== Inputs ===
merge: v308 
values: j325 j328 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v308 values: j325 j328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v326 
=== Succesors ===
next: v314 
=== Usages ===
i312 j313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v326 #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i312 
speculation: j313 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i312 speculation: j313  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a363  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.UTF_8$Encoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?58 v231 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.nio.HeapCharBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v391 v231 v385 ?58 v382 v381 v383 ?166 ?165 v384 ?155 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.nio.ByteBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v231 ?58 v392 v389 ?167 v390 v387 v386 v388 v393 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 447
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v314 a363 a369 v378 v380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
result [v1|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a363 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: int[-51211|0xffffffffffff37f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1504) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: n# char[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v381 
lastLocationAccess: - 
=== Succesors ===
next: i364 
=== Usages ===
a204 v394 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v381 lastLocationAccess: - #next: i364  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
result [v1|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i364 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v382 
lastLocationAccess: - 
=== Succesors ===
next: i365 
=== Usages ===
v242 
=== Predecessor ===
a363 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v382 lastLocationAccess: - #next: i365  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i365 v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i365 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:309) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v384 
lastLocationAccess: - 
=== Succesors ===
next: i366 
=== Usages ===
i15 
=== Predecessor ===
i364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v384 lastLocationAccess: - #next: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
result [v1|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i366 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 6]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v383 
lastLocationAccess: - 
=== Succesors ===
next: i367 
=== Usages ===
i15 i22 i139 
=== Predecessor ===
i365 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v383 lastLocationAccess: - #next: i367  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i367 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:361) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:449) [bci: 21]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v385 
lastLocationAccess: - 
=== Succesors ===
next: i368 
=== Usages ===
i22 v157 
=== Predecessor ===
i366 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v385 lastLocationAccess: - #next: i368  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i368 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v391 
lastLocationAccess: - 
=== Succesors ===
next: a369 
=== Usages ===
v162 
=== Predecessor ===
i367 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v391 lastLocationAccess: - #next: a369  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
result [v2|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a369 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-55819|0xffffffffffff25f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1504) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v386 
lastLocationAccess: - 
=== Succesors ===
next: i370 
=== Usages ===
a221 v395 
=== Predecessor ===
i368 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v386 lastLocationAccess: - #next: i370  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
result [v2|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i370 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1506) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v387 
lastLocationAccess: - 
=== Succesors ===
next: i371 
=== Usages ===
v244 
=== Predecessor ===
a369 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v387 lastLocationAccess: - #next: i371  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
result [v2|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i371 v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i371 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:309) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v389 
lastLocationAccess: - 
=== Succesors ===
next: i372 
=== Usages ===
i33 
=== Predecessor ===
i370 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v389 lastLocationAccess: - #next: i372  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
result [v2|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i372 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 34]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v388 
lastLocationAccess: - 
=== Succesors ===
next: i373 
=== Usages ===
i33 i40 i140 
=== Predecessor ===
i371 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v388 lastLocationAccess: - #next: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
result [v2|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:361) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 49]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v390 
lastLocationAccess: - 
=== Succesors ===
next: v374 
=== Usages ===
i40 v186 
=== Predecessor ===
i372 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v390 lastLocationAccess: - #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v393 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
v362 
=== Predecessor ===
i373 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v393 lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
result [v3|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a363 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: v394 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: v394 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 v244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i364 
y: i241 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i364 y: i241  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v270 #falseSuccessor: v271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1508) [bci: 30]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
result [v9|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a369 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: v395 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: v395 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i370 
y: i241 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i370 y: i241  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v278 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1508) [bci: 30]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: j355 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j355  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1504) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a363 
=== Succesors ===
=== Usages ===
?58 j355 v231 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j355 <|@
result v16|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64
=== Inputs ===
object: a204 
=== Succesors ===
next: j357 
=== Usages ===
j356 
=== Predecessor ===
v278 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a204 #next: j357  <|@  <|@
f <@~|@floating>@ <|@
tid a221 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1504) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a369 
=== Succesors ===
=== Usages ===
?58 j357 v231 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j357 <|@
result v18|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64
=== Inputs ===
object: a221 
=== Succesors ===
next: i57 
=== Usages ===
j358 
=== Predecessor ===
j355 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a221 #next: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 13]
stamp: i32
=== Inputs ===
x: i365 
y: i366 
=== Succesors ===
=== Usages ===
j48 i60 ?58 i42 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i365 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i15 
=== Succesors ===
=== Usages ===
j50 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i15  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j50 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64 [-4294967296 - 4294967294] bits:x...x0
=== Inputs ===
x: j48 
y: i49 
=== Succesors ===
=== Usages ===
j75 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j48 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid j51 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j75 j76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64 [-4294967280 - 4294967310] bits:x...x0
=== Inputs ===
x: j50 
y: j51 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j50 y: j51  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64
=== Inputs ===
x: j75 
y: j355 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j75 y: j355  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 41]
stamp: i32
=== Inputs ===
x: i371 
y: i372 
=== Succesors ===
=== Usages ===
j54 i43 ?58 i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i371 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
j76 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid j76 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64 [-2147483632 - 2147483663]
=== Inputs ===
x: j54 
y: j51 
=== Succesors ===
=== Usages ===
j358 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j54 y: j51  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
result v27|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
stamp: i64
=== Inputs ===
x: j76 
y: j357 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j76 y: j357  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 52]
stamp: i32
=== Inputs ===
x: i372 
y: i373 
=== Succesors ===
=== Usages ===
i43 ?58 v231 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i372 y: i373  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 74]
stamp: i32
=== Inputs ===
x: i40 
y: i33 
=== Succesors ===
=== Usages ===
i138 v136 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i40 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:449) [bci: 24]
stamp: i32
=== Inputs ===
x: i366 
y: i367 
=== Succesors ===
=== Usages ===
v62 ?58 v231 i42 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i366 y: i367  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 69]
stamp: i32
=== Inputs ===
x: i22 
y: i15 
=== Succesors ===
=== Usages ===
i138 v136 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i22 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i42 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
stamp: i32
=== Inputs ===
condition: v136 
trueValue: i43 
falseValue: i42 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v136 trueValue: i43 falseValue: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
charset: ASCII
locationIdentity: Array: char
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j356 
dst: j358 
len: i138 
=== Succesors ===
next: v65 
=== Usages ===
?59 i60 i61 
=== Predecessor ===
j357 >@ <|@
instruction <@EncodeArray|@jdk.graal.compiler.replacements.nodes.EncodeArrayNode>@ stateAfter: - lastLocationAccess: - src: j356 dst: j358 len: i138 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:458) [bci: 96]
stamp: i32
=== Inputs ===
x: i33 
y: i57 
=== Succesors ===
=== Usages ===
v231 ?167 i140 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i33 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:457) [bci: 89]
stamp: i32
=== Inputs ===
x: i15 
y: i57 
=== Succesors ===
=== Usages ===
v62 v231 i139 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i15 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i22 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
profileData: PROFILED designatedSuccessorProbability: 8.274506761773992E-6
stamp: void
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i57 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v64 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: a67 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a67  <|@  <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
referencedType: [null]
returnStamp: a# java.nio.charset.CoderResult
signature: [HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>, UnresolvedJavaType<Ljava/nio/CharBuffer;>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/nio/ByteBuffer;>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>
=== Inputs ===
arguments: a1 a2 a204 i60 i22 a3 a221 i61 i40 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a204 i60 i22 a3 a221 i61 i40  <|@  <|@
tid ?305 <|@
d <@d|@=== Debug Properties ===
bci: 120
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 461
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a67 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 120
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
polymorphic: false
stamp: a# java.nio.charset.CoderResult
targetMethod: Direct#UTF_8$Encoder.encodeArrayLoopSlow
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v231 
stateDuring: ?305 
=== Succesors ===
next: v69 
=== Usages ===
v69 
=== Predecessor ===
v64 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v231 stateDuring: ?305 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 123]
stamp: void
=== Inputs ===
memoryMap: - 
result: a67 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a67 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 124]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32
=== Inputs ===
x: i60 
y: i366 
=== Succesors ===
=== Usages ===
?155 v157 v159 v162 v235 ?165 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i60 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i367 
y: i139 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i367 y: i139  <|@  <|@
f <@~|@floating>@ <|@
tid j332 <|@
result long[5140|0x1414] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 j346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v282 #falseSuccessor: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result int[-71955|0xfffffffffffee6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -71955
stableDimension: 0
stamp: i32 [-71955]
stampKind: i32
value: int[-71955|0xfffffffffffee6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i83 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i139 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
result long[5780|0x1694] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 j346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v286 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v286 #falseSuccessor: v287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result int[-72979|0xfffffffffffee2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -72979
stableDimension: 0
stamp: i32 [-72979]
stampKind: i32
value: int[-72979|0xfffffffffffee2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i368 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i139 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid j341 <|@
result long[6420|0x1914] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: 6420
stableDimension: 0
stamp: i64 [6420]
stampKind: i64
value: long[6420|0x1914]
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 j346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v290 #falseSuccessor: v291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
result int[-74003|0xfffffffffffedeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -74003
stableDimension: 0
stamp: i32 [-74003]
stampKind: i32
value: int[-74003|0xfffffffffffedeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i333 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32 [-74003 - -71955] bits:1...1011xxxx1011101101
valueDescription: i32
=== Inputs ===
merge: v329 
values: i331 i337 i340 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v329 values: i331 i337 i340  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i64 [5140 - 6420] bits:0...01xxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v329 
values: j332 j338 j341 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v329 values: j332 j338 j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v330 v336 v339 
=== Succesors ===
next: v335 
=== Usages ===
i333 j334 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v330 v336 v339 #next: v335  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 78
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
sourceFile: UTF_8.java
sourceLine: 456
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a204 i15 i22 a221 i33 i40 
=== Succesors ===
=== Usages ===
?59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a204 i15 i22 a221 i33 i40  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: ireturn
code: ResolvedJavaMethodBytecode<System$2.encodeASCII(char[], int, byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
sourceFile: System.java
sourceLine: 2506
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
values: i57 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58 values: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
stateBefore: ?59 
actionAndReason: i333 
speculation: j334 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?59 actionAndReason: i333 speculation: j334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v384 
lastLocationAccess: - 
value: i139 
stateAfter: - 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v384 lastLocationAccess: - value: i139 stateAfter: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v374 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}]
keySuccessors: [I@45c342d7
keys: [HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>]
profileData: PROFILED keyProbabilities: [1.0, 0.0]
stamp: void
=== Inputs ===
value: v362 
=== Succesors ===
successors: v178 v180 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v362 #successors: v178 v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 17]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32
=== Inputs ===
x: i61 
y: i372 
=== Succesors ===
=== Usages ===
v239 v186 v188 v191 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i61 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i140 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i373 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v294 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v294 #falseSuccessor: v295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result int[-75027|0xfffffffffffedaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027]
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i140 
y: i83 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i140 y: i83  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v298 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v298 #falseSuccessor: v299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
result int[-76051|0xfffffffffffed6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -76051
stableDimension: 0
stamp: i32 [-76051]
stampKind: i32
value: int[-76051|0xfffffffffffed6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: i375 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i375  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v392 
lastLocationAccess: - 
=== Succesors ===
next: v304 
=== Usages ===
v191 
=== Predecessor ===
v299 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v392 lastLocationAccess: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i140 
y: i375 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i140 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v303 
=== Usages ===
=== Predecessor ===
i375 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v302 #falseSuccessor: v303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
result int[-77075|0xfffffffffffed2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -77075
stableDimension: 0
stamp: i32 [-77075]
stampKind: i32
value: int[-77075|0xfffffffffffed2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v389 
lastLocationAccess: - 
value: i140 
stateAfter: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v389 lastLocationAccess: - value: i140 stateAfter: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid a73 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:464) [bci: 133]
rawvalue: CoderResult@167784470
stableDimension: 0
stamp: a!# java.nio.charset.CoderResult
stampKind: a java.lang.Object
value: Object[CoderResult@167784470]
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:464) [bci: 136]
stamp: void
=== Inputs ===
memoryMap: - 
result: a73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result long[7060|0x1b94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: 7060
stableDimension: 0
stamp: i64 [7060]
stampKind: i64
value: long[7060|0x1b94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result int[-45875|0xffffffffffff4ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
rawvalue: -45875
stableDimension: 0
stamp: i32 [-45875]
stampKind: i32
value: int[-45875|0xffffffffffff4ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i345 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i32 [-77075 - -45875] bits:1...1xx10xxxx011x01101
valueDescription: i32
=== Inputs ===
merge: v342 
values: i344 i349 i352 i354 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v342 values: i344 i349 i352 i354  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: i64 [5140 - 7060] bits:0...01xxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v342 
values: j332 j350 j338 j341 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v342 values: j332 j350 j338 j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v348 v351 v353 
=== Succesors ===
next: v347 
=== Usages ===
i345 j346 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v348 v351 v353 #next: v347  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 130
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 463
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
localsSize: 4
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 82
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?199 
values: - - a3 i61 
=== Succesors ===
=== Usages ===
?155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?199 values: - - a3 i61  <|@  <|@
tid ?155 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
sourceFile: CharBuffer.java
sourceLine: 285
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?167 
values: a2 i139 
=== Succesors ===
=== Usages ===
?166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?167 values: a2 i139  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 1551
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a2 
=== Succesors ===
=== Usages ===
?165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a2  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
sourceFile: Buffer.java
sourceLine: 330
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?166 
values: a2 i139 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?166 values: a2 i139  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
stamp: void
=== Inputs ===
stateBefore: ?165 
actionAndReason: i345 
speculation: j346 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?165 actionAndReason: i345 speculation: j346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:451) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid j328 <|@
result long[3220|0xc94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result int[-70931|0xfffffffffffeeaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: -70931
stableDimension: 0
stamp: i32 [-70931]
stampKind: i32
value: int[-70931|0xfffffffffffeeaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v279 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:1506) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result int[-68883|0xfffffffffffef2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
rawvalue: -68883
stableDimension: 0
stamp: i32 [-68883]
stampKind: i32
value: int[-68883|0xfffffffffffef2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i312 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: i32 [-70931 - -68883] bits:1...10111xx01011101101
valueDescription: i32
=== Inputs ===
merge: v308 
values: i324 i327 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v308 values: i324 i327  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: i64 [660 - 3220] bits:0...0xxx010010100
valueDescription: i64
=== Inputs ===
merge: v308 
values: j325 j328 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v308 values: j325 j328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v326 
=== Succesors ===
next: v314 
=== Usages ===
i312 j313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v326 #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i312 
speculation: j313 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i312 speculation: j313  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   78  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   82  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr  192  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  294  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  296  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  434  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  500  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   78  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   82  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr  192  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  294  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  296  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  434  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  500  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v44|q [0, 1[[220, 222[[366, 368[[432, 434[[436, 438[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v32|d [0, 54[[218, 220[[418, 433[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v27|q [0, 52[[216, 220[[416, 433[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 46[[432, 433[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 50[[214, 220[[414, 433[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v2|q [0, 1[[424, 433[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v35|d [0, 1[[220, 221[[420, 433[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- v30|d [0, 1[[220, 221[[422, 433[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [50, 270[[370, 414[[440, 450[[480, 490[[522, 563[[564, 595[50 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [52, 340[[370, 416[[440, 521[[522, 563[[564, 595[52 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister 64 MustHaveRegister 66 MustHaveRegister 290 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [54, 362[[370, 424[[440, 521[[522, 563[[564, 595[54 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 338 MustHaveRegister 362 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [56, 176[56 MustHaveRegister 80 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [58, 82[58 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [60, 184[60 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [62, 243[62 MustHaveRegister 184 ShouldHaveRegister 206 ShouldHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [64, 244[64 MustHaveRegister 206 ShouldHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [66, 268[66 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [68, 180[68 MustHaveRegister 96 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [70, 98[70 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [72, 194[72 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [74, 313[74 MustHaveRegister 194 ShouldHaveRegister 202 ShouldHaveRegister 312 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [76, 314[76 MustHaveRegister 202 ShouldHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [78, 294[78 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v3|d [176, 270[[370, 418[[480, 490[[522, 532[[564, 595[176 MustHaveRegister 178 ShouldHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v15|q [178, 192[178 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v9|d [180, 270[[370, 426[[480, 490[[522, 532[[564, 595[180 MustHaveRegister 182 ShouldHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v17|q [182, 200[182 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v5|d [184, 270[[480, 490[[522, 532[[564, 595[184 MustHaveRegister 186 ShouldHaveRegister 208 ShouldHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [186, 188[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|q [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [190, 192[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|q [192, 214[192 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v11|d [194, 270[[480, 490[[522, 532[[564, 595[194 MustHaveRegister 196 ShouldHaveRegister 204 ShouldHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [196, 198[196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [198, 200[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|q [200, 216[200 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v13|d [202, 270[[370, 430[[480, 490[[522, 532[[564, 595[202 MustHaveRegister 204 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v28|d [204, 213[204 MustHaveRegister 210 ShouldHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v7|d [206, 270[[370, 422[[480, 490[[522, 532[[564, 595[206 MustHaveRegister 208 MustHaveRegister 228 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v30|d [208, 212[208 MustHaveRegister 210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v31|d [212, 218[212 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d rax|q [222, 270[[480, 490[[522, 532[[564, 595[222 MustHaveRegister 224 ShouldHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d v33|d [224, 340[[370, 428[[450, 480[[490, 521[224 MustHaveRegister 312 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v19|d [226, 242[[370, 420[226 MustHaveRegister 228 ShouldHaveRegister 242 MustHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q rax|q [434, 436[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v35|d [242, 340[[450, 480[[490, 521[242 MustHaveRegister 244 MustHaveRegister 256 MustHaveRegister 268 ShouldHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [574, 590[590 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [574, 592[592 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v14|d [294, 298[294 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [292, 295[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v34|d [312, 362[312 MustHaveRegister 314 MustHaveRegister 326 MustHaveRegister 338 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [500, 516[516 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [500, 518[518 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [542, 558[558 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [542, 560[560 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v44|q [0, 1[[220, 222[[366, 368[[432, 434[[436, 438[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v32|d [0, 54[[218, 220[[418, 433[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v27|q [0, 52[[216, 220[[416, 433[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 46[[432, 433[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 50[[214, 220[[414, 433[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v2|q [0, 1[[424, 433[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v35|d [0, 1[[220, 221[[420, 433[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- v30|d [0, 1[[220, 221[[422, 433[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  v0|q QWORD "[rbx|q]" v0|q rsi|- [50, 75[50 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdi|q]" v1|q rdx|- [52, 77[52 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister 64 MustHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rbp|q]" v2|q rcx|- [54, 100[54 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[rsi|d]" v3|d -1 [56, 176[56 MustHaveRegister 80 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d -1 [58, 82[58 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [60, 184[60 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r13|d]" v6|d -1 [62, 243[62 MustHaveRegister 184 ShouldHaveRegister 206 ShouldHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r14|d]" v7|d -1 [64, 207[64 MustHaveRegister 206 ShouldHaveRegister  "OneSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [66, 100[66 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [68, 180[68 MustHaveRegister 96 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d -1 [70, 98[70 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [72, 194[72 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [74, 219[74 MustHaveRegister 194 ShouldHaveRegister 202 ShouldHaveRegister  "OneSpillStore"
  v13|d DWORD "[rbx|d]" v13|d -1 [76, 203[76 MustHaveRegister 202 ShouldHaveRegister  "OneSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [78, 100[78 MustHaveRegister  "OneSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v3|d [176, 213[176 MustHaveRegister 178 ShouldHaveRegister  "OneSpillStore"
  v16|q QWORD "[rdx|q]" v16|q v15|q [178, 192[178 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q v9|d [180, 219[180 MustHaveRegister 182 ShouldHaveRegister  "OneSpillStore"
  v18|q QWORD "[r8|q]" v18|q v17|q [182, 200[182 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d v5|d [184, 217[184 MustHaveRegister 186 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q -1 [186, 188[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rbp|q]" v21|q v20|q [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rbp|q]" v22|q -1 [190, 192[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbp|q]" v23|q v22|q [192, 214[192 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r9|d]" v24|d v11|d [194, 219[194 MustHaveRegister 196 ShouldHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [196, 198[196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q -1 [198, 200[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdx|q]" v27|q v26|q [200, 216[200 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d v13|d [202, 219[202 MustHaveRegister 204 MustHaveRegister  "OneSpillStore"
  v29|d DWORD "[rbx|d]" v29|d v28|d [204, 213[204 MustHaveRegister 210 ShouldHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdi|d]" v30|d v7|d [206, 270[[370, 422[[480, 490[[522, 532[[564, 595[206 MustHaveRegister 208 MustHaveRegister 228 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r14|d]" v31|d v30|d [208, 212[208 MustHaveRegister 210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r14|d]" v32|d v31|d [212, 218[212 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d rax|q [222, 270[[480, 490[[522, 532[[564, 595[222 MustHaveRegister 224 ShouldHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v33|d [224, 340[[370, 428[[450, 480[[490, 521[224 MustHaveRegister 312 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d v19|d [226, 242[[370, 420[226 MustHaveRegister 228 ShouldHaveRegister 242 MustHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [434, 436[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d v35|d [242, 340[[450, 480[[490, 521[242 MustHaveRegister 244 MustHaveRegister 256 MustHaveRegister 268 ShouldHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [574, 590[590 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r9|q]" v39|q -1 [574, 592[592 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q v14|d [294, 298[294 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q -1 [292, 295[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rsi|d]" v43|d v34|d [312, 362[312 MustHaveRegister 314 MustHaveRegister 326 MustHaveRegister 338 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q -1 [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d -1 [500, 516[516 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q -1 [500, 518[518 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d -1 [542, 558[558 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[r8|q]" v48|q -1 [542, 560[560 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v8|d v8|d [100, 219[ "NoSpillStore"
  v50|d DWORD "[vstack:7|d]" v12|d v12|d [219, 300[ "OneSpillStore"
  v51|q QWORD "[rcx|q]" v0|q v0|q [574, 595[ "OneSpillStore"
  v52|q QWORD "[vstack:0|q]" v0|q v0|q [75, 270[[370, 414[[440, 450[[480, 490[[522, 563[[564, 574[414 ShouldHaveRegister  "OneSpillStore"
  v53|q QWORD "[r11|q]" v1|q v1|q [270, 340[[370, 416[[440, 521[[522, 563[[564, 595[290 MustHaveRegister 416 ShouldHaveRegister  "OneSpillStore"
  v54|q QWORD "[vstack:1|q]" v1|q v1|q [77, 270[ "OneSpillStore"
  v55|d DWORD "[rbx|d]" v8|d v8|d [219, 268[268 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[vstack:6|q]" v15|q v15|q [213, 270[[370, 418[[480, 490[[522, 532[[564, 574[418 ShouldHaveRegister  "OneSpillStore"
  v57|q QWORD "[vstack:8|q]" v17|q v17|q [219, 270[ "OneSpillStore"
  v58|d DWORD "[rbp|d]" v19|d v19|d [217, 270[[480, 490[[522, 532[[564, 595[226 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbx|q]" v2|q v2|q [328, 362[[370, 424[[440, 521[[522, 563[[564, 595[338 MustHaveRegister 362 MustHaveRegister 424 ShouldHaveRegister  "OneSpillStore"
  v60|q QWORD "[vstack:2|q]" v2|q v2|q [100, 328[ "OneSpillStore"
  v61|d DWORD "[r14|d]" v24|d v24|d [219, 270[[480, 490[[522, 532[[564, 595[224 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[vstack:9|d]" v28|d v28|d [219, 270[ "OneSpillStore"
  v63|d DWORD "[rbx|d]" v13|d v13|d [300, 314[314 ShouldHaveRegister  "OneSpillStore"
  v64|d DWORD "[vstack:3|d]" v13|d v13|d [203, 300[ "OneSpillStore"
  v65|d DWORD "[rdi|d]" v14|d v14|d [270, 294[294 MustHaveRegister  "OneSpillStore"
  v66|d DWORD "[vstack:4|d]" v14|d v14|d [100, 270[ "OneSpillStore"
  v67|d DWORD "[rsi|d]" v7|d v7|d [230, 244[244 ShouldHaveRegister  "OneSpillStore"
  v68|d DWORD "[vstack:5|d]" v7|d v7|d [207, 230[ "OneSpillStore"
  v69|q QWORD "[rsi|q]" v15|q v15|q [574, 595[ "OneSpillStore"
  v70|d DWORD "[rax|d]" v12|d v12|d [300, 313[312 ShouldHaveRegister  "OneSpillStore"
  v71|q QWORD "[r13|q]" v17|q v17|q [370, 426[[480, 490[[522, 532[[564, 595[426 MustHaveRegister  "OneSpillStore"
  v72|d DWORD "[rax|d]" v28|d v28|d [370, 430[430 MustHaveRegister  "OneSpillStore"
  v73|d DWORD "[r8|d]" v28|d v28|d [480, 490[[522, 532[[564, 595[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   82  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr  192  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  294  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  296  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  434  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  500  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v44|q [0, 1[[220, 222[[366, 368[[432, 434[[436, 438[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v32|d [0, 54[[218, 220[[418, 433[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v27|q [0, 52[[216, 220[[416, 433[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 46[[432, 433[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 50[[214, 220[[414, 433[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v2|q [0, 1[[424, 433[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v35|d [0, 1[[220, 221[[420, 433[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- v30|d [0, 1[[220, 221[[422, 433[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  v0|q QWORD "[rbx|q]" v0|q rsi|- [50, 75[50 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdi|q]" v1|q rdx|- [52, 77[52 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister 64 MustHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rbp|q]" v2|q rcx|- [54, 100[54 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[rsi|d]" v3|d -1 [56, 176[56 MustHaveRegister 80 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d -1 [58, 82[58 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [60, 184[60 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r13|d]" v6|d -1 [62, 243[62 MustHaveRegister 184 ShouldHaveRegister 206 ShouldHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r14|d]" v7|d -1 [64, 207[64 MustHaveRegister 206 ShouldHaveRegister  "OneSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [66, 100[66 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [68, 180[68 MustHaveRegister 96 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d -1 [70, 98[70 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [72, 194[72 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [74, 219[74 MustHaveRegister 194 ShouldHaveRegister 202 ShouldHaveRegister  "OneSpillStore"
  v13|d DWORD "[rbx|d]" v13|d -1 [76, 203[76 MustHaveRegister 202 ShouldHaveRegister  "OneSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [78, 100[78 MustHaveRegister  "OneSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v3|d [176, 213[176 MustHaveRegister 178 ShouldHaveRegister  "OneSpillStore"
  v16|q QWORD "[rdx|q]" v16|q v15|q [178, 192[178 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q v9|d [180, 219[180 MustHaveRegister 182 ShouldHaveRegister  "OneSpillStore"
  v18|q QWORD "[r8|q]" v18|q v17|q [182, 200[182 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d v5|d [184, 217[184 MustHaveRegister 186 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q -1 [186, 188[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rbp|q]" v21|q v20|q [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rbp|q]" v22|q -1 [190, 192[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbp|q]" v23|q v22|q [192, 214[192 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r9|d]" v24|d v11|d [194, 219[194 MustHaveRegister 196 ShouldHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [196, 198[196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q -1 [198, 200[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdx|q]" v27|q v26|q [200, 216[200 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d v13|d [202, 219[202 MustHaveRegister 204 MustHaveRegister  "OneSpillStore"
  v29|d DWORD "[rbx|d]" v29|d v28|d [204, 213[204 MustHaveRegister 210 ShouldHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdi|d]" v30|d v7|d [206, 270[[370, 422[[480, 490[[522, 532[[564, 595[206 MustHaveRegister 208 MustHaveRegister 228 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r14|d]" v31|d v30|d [208, 212[208 MustHaveRegister 210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r14|d]" v32|d v31|d [212, 218[212 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d rax|q [222, 270[[480, 490[[522, 532[[564, 595[222 MustHaveRegister 224 ShouldHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v33|d [224, 340[[370, 428[[450, 480[[490, 521[224 MustHaveRegister 312 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d v19|d [226, 242[[370, 420[226 MustHaveRegister 228 ShouldHaveRegister 242 MustHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [434, 436[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d v35|d [242, 340[[450, 480[[490, 521[242 MustHaveRegister 244 MustHaveRegister 256 MustHaveRegister 268 ShouldHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [574, 590[590 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r9|q]" v39|q -1 [574, 592[592 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q v14|d [294, 298[294 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q -1 [292, 295[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rsi|d]" v43|d v34|d [312, 362[312 MustHaveRegister 314 MustHaveRegister 326 MustHaveRegister 338 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q -1 [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d -1 [500, 516[516 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q -1 [500, 518[518 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d -1 [542, 558[558 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[r8|q]" v48|q -1 [542, 560[560 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v8|d v8|d [100, 219[ "NoSpillStore"
  v50|d DWORD "[vstack:7|d]" v12|d v12|d [219, 300[ "OneSpillStore"
  v51|q QWORD "[rcx|q]" v0|q v0|q [574, 595[ "OneSpillStore"
  v52|q QWORD "[vstack:0|q]" v0|q v0|q [75, 270[[370, 414[[440, 450[[480, 490[[522, 563[[564, 574[414 ShouldHaveRegister  "OneSpillStore"
  v53|q QWORD "[r11|q]" v1|q v1|q [270, 340[[370, 416[[440, 521[[522, 563[[564, 595[290 MustHaveRegister 416 ShouldHaveRegister  "OneSpillStore"
  v54|q QWORD "[vstack:1|q]" v1|q v1|q [77, 270[ "OneSpillStore"
  v55|d DWORD "[rbx|d]" v8|d v8|d [219, 268[268 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[vstack:6|q]" v15|q v15|q [213, 270[[370, 418[[480, 490[[522, 532[[564, 574[418 ShouldHaveRegister  "OneSpillStore"
  v57|q QWORD "[vstack:8|q]" v17|q v17|q [219, 270[ "OneSpillStore"
  v58|d DWORD "[rbp|d]" v19|d v19|d [217, 270[[480, 490[[522, 532[[564, 595[226 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbx|q]" v2|q v2|q [328, 362[[370, 424[[440, 521[[522, 563[[564, 595[338 MustHaveRegister 362 MustHaveRegister 424 ShouldHaveRegister  "OneSpillStore"
  v60|q QWORD "[vstack:2|q]" v2|q v2|q [100, 328[ "OneSpillStore"
  v61|d DWORD "[r14|d]" v24|d v24|d [219, 270[[480, 490[[522, 532[[564, 595[224 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[vstack:9|d]" v28|d v28|d [219, 270[ "OneSpillStore"
  v63|d DWORD "[rbx|d]" v13|d v13|d [300, 314[314 ShouldHaveRegister  "OneSpillStore"
  v64|d DWORD "[vstack:3|d]" v13|d v13|d [203, 300[ "OneSpillStore"
  v65|d DWORD "[rdi|d]" v14|d v14|d [270, 294[294 MustHaveRegister  "OneSpillStore"
  v66|d DWORD "[vstack:4|d]" v14|d v14|d [100, 270[ "OneSpillStore"
  v67|d DWORD "[rsi|d]" v7|d v7|d [230, 244[244 ShouldHaveRegister  "OneSpillStore"
  v68|d DWORD "[vstack:5|d]" v7|d v7|d [207, 230[ "OneSpillStore"
  v69|q QWORD "[rsi|q]" v15|q v15|q [574, 595[ "OneSpillStore"
  v70|d DWORD "[rax|d]" v12|d v12|d [300, 313[312 ShouldHaveRegister  "OneSpillStore"
  v71|q QWORD "[r13|q]" v17|q v17|q [370, 426[[480, 490[[522, 532[[564, 595[426 MustHaveRegister  "OneSpillStore"
  v72|d DWORD "[rax|d]" v28|d v28|d [370, 430[430 MustHaveRegister  "OneSpillStore"
  v73|d DWORD "[r8|d]" v28|d v28|d [480, 490[[522, 532[[564, 595[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   82  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr  192  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  294  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  296  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  434  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [int[-68883|0xfffffffffffef2ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [int[-45875|0xffffffffffff4ccd], long[7060|0x1b94]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [int[-77075|0xfffffffffffed2ed], long[6420|0x1914]] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [int[-76051|0xfffffffffffed6ed], long[5780|0x1694]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [int[-74003|0xfffffffffffedeed], long[6420|0x1914]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [int[-75027|0xfffffffffffedaed], long[5140|0x1414]] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  500  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [int[-72979|0xfffffffffffee2ed], long[5780|0x1694]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [int[-70931|0xfffffffffffeeaed], long[3220|0xc94]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [int[-71955|0xfffffffffffee6ed], long[5140|0x1414]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v44|q [0, 1[[220, 222[[366, 368[[432, 434[[436, 438[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v32|d [0, 54[[218, 220[[418, 433[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v27|q [0, 52[[216, 220[[416, 433[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 46[[432, 433[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 50[[214, 220[[414, 433[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v2|q [0, 1[[424, 433[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v35|d [0, 1[[220, 221[[420, 433[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- v30|d [0, 1[[220, 221[[422, 433[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[220, 221[[432, 433[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[432, 433[ "NoDefinitionFound"
  v0|q QWORD "[rbx|q]" v0|q rsi|- [50, 75[50 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdi|q]" v1|q rdx|- [52, 77[52 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister 64 MustHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rbp|q]" v2|q rcx|- [54, 100[54 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[rsi|d]" v3|d -1 [56, 176[56 MustHaveRegister 80 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d -1 [58, 82[58 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [60, 184[60 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r13|d]" v6|d -1 [62, 243[62 MustHaveRegister 184 ShouldHaveRegister 206 ShouldHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r14|d]" v7|d -1 [64, 207[64 MustHaveRegister 206 ShouldHaveRegister  "OneSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [66, 100[66 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [68, 180[68 MustHaveRegister 96 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d -1 [70, 98[70 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [72, 194[72 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [74, 219[74 MustHaveRegister 194 ShouldHaveRegister 202 ShouldHaveRegister  "OneSpillStore"
  v13|d DWORD "[rbx|d]" v13|d -1 [76, 203[76 MustHaveRegister 202 ShouldHaveRegister  "OneSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [78, 100[78 MustHaveRegister  "OneSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v3|d [176, 213[176 MustHaveRegister 178 ShouldHaveRegister  "OneSpillStore"
  v16|q QWORD "[rdx|q]" v16|q v15|q [178, 192[178 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q v9|d [180, 219[180 MustHaveRegister 182 ShouldHaveRegister  "OneSpillStore"
  v18|q QWORD "[r8|q]" v18|q v17|q [182, 200[182 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d v5|d [184, 217[184 MustHaveRegister 186 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q -1 [186, 188[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rbp|q]" v21|q v20|q [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rbp|q]" v22|q -1 [190, 192[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbp|q]" v23|q v22|q [192, 214[192 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r9|d]" v24|d v11|d [194, 219[194 MustHaveRegister 196 ShouldHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [196, 198[196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q -1 [198, 200[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdx|q]" v27|q v26|q [200, 216[200 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d v13|d [202, 219[202 MustHaveRegister 204 MustHaveRegister  "OneSpillStore"
  v29|d DWORD "[rbx|d]" v29|d v28|d [204, 213[204 MustHaveRegister 210 ShouldHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdi|d]" v30|d v7|d [206, 270[[370, 422[[480, 490[[522, 532[[564, 595[206 MustHaveRegister 208 MustHaveRegister 228 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r14|d]" v31|d v30|d [208, 212[208 MustHaveRegister 210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r14|d]" v32|d v31|d [212, 218[212 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d rax|q [222, 270[[480, 490[[522, 532[[564, 595[222 MustHaveRegister 224 ShouldHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v33|d [224, 340[[370, 428[[450, 480[[490, 521[224 MustHaveRegister 312 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d v19|d [226, 242[[370, 420[226 MustHaveRegister 228 ShouldHaveRegister 242 MustHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [434, 436[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d v35|d [242, 340[[450, 480[[490, 521[242 MustHaveRegister 244 MustHaveRegister 256 MustHaveRegister 268 ShouldHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [574, 590[590 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r9|q]" v39|q -1 [574, 592[592 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q v14|d [294, 298[294 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q -1 [292, 295[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rsi|d]" v43|d v34|d [312, 362[312 MustHaveRegister 314 MustHaveRegister 326 MustHaveRegister 338 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q -1 [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d -1 [500, 516[516 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q -1 [500, 518[518 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d -1 [542, 558[558 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[r8|q]" v48|q -1 [542, 560[560 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v8|d v8|d [100, 219[ "NoSpillStore"
  v50|d DWORD "[vstack:7|d]" v12|d v12|d [219, 300[ "OneSpillStore"
  v51|q QWORD "[rcx|q]" v0|q v0|q [574, 595[ "OneSpillStore"
  v52|q QWORD "[vstack:0|q]" v0|q v0|q [75, 270[[370, 414[[440, 450[[480, 490[[522, 563[[564, 574[414 ShouldHaveRegister  "OneSpillStore"
  v53|q QWORD "[r11|q]" v1|q v1|q [270, 340[[370, 416[[440, 521[[522, 563[[564, 595[290 MustHaveRegister 416 ShouldHaveRegister  "OneSpillStore"
  v54|q QWORD "[vstack:1|q]" v1|q v1|q [77, 270[ "OneSpillStore"
  v55|d DWORD "[rbx|d]" v8|d v8|d [219, 268[268 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[vstack:6|q]" v15|q v15|q [213, 270[[370, 418[[480, 490[[522, 532[[564, 574[418 ShouldHaveRegister  "OneSpillStore"
  v57|q QWORD "[vstack:8|q]" v17|q v17|q [219, 270[ "OneSpillStore"
  v58|d DWORD "[rbp|d]" v19|d v19|d [217, 270[[480, 490[[522, 532[[564, 595[226 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbx|q]" v2|q v2|q [328, 362[[370, 424[[440, 521[[522, 563[[564, 595[338 MustHaveRegister 362 MustHaveRegister 424 ShouldHaveRegister  "OneSpillStore"
  v60|q QWORD "[vstack:2|q]" v2|q v2|q [100, 328[ "OneSpillStore"
  v61|d DWORD "[r14|d]" v24|d v24|d [219, 270[[480, 490[[522, 532[[564, 595[224 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[vstack:9|d]" v28|d v28|d [219, 270[ "OneSpillStore"
  v63|d DWORD "[rbx|d]" v13|d v13|d [300, 314[314 ShouldHaveRegister  "OneSpillStore"
  v64|d DWORD "[vstack:3|d]" v13|d v13|d [203, 300[ "OneSpillStore"
  v65|d DWORD "[rdi|d]" v14|d v14|d [270, 294[294 MustHaveRegister  "OneSpillStore"
  v66|d DWORD "[vstack:4|d]" v14|d v14|d [100, 270[ "OneSpillStore"
  v67|d DWORD "[rsi|d]" v7|d v7|d [230, 244[244 ShouldHaveRegister  "OneSpillStore"
  v68|d DWORD "[vstack:5|d]" v7|d v7|d [207, 230[ "OneSpillStore"
  v69|q QWORD "[rsi|q]" v15|q v15|q [574, 595[ "OneSpillStore"
  v70|d DWORD "[rax|d]" v12|d v12|d [300, 313[312 ShouldHaveRegister  "OneSpillStore"
  v71|q QWORD "[r13|q]" v17|q v17|q [370, 426[[480, 490[[522, 532[[564, 595[426 MustHaveRegister  "OneSpillStore"
  v72|d DWORD "[rax|d]" v28|d v28|d [370, 430[430 MustHaveRegister  "OneSpillStore"
  v73|d DWORD "[r8|d]" v28|d v28|d [480, 490[[522, 532[[564, 595[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   82  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr  192  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v66|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  294  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  296  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v50|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  434  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  500  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v2|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v10|DWORD = MOVSXB input: [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction v11|DWORD = MOV input: [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction v14|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   82  <|@ instruction TESTBYTEBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction v18|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction v19|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v20|QWORD = MOVSXD value: v19|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction v21|QWORD = SHL value: v20|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 16] size: QWORD <|@ <|@
      nr  192  <|@ instruction v23|QWORD[*] = ADD (x: v22|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = ADD (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v18|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v28|DWORD = ADD (x: v13|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction v30|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: v31|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction v32|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v29|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v33|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction v34|DWORD = ADD (x: v33|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction v35|DWORD = ADD (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v35|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v37|DWORD = SUB (x: v35|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v66|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v37|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  294  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  296  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v40|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v50|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v43|DWORD = SUB (x: v34|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPBRANCH (x: v43|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction CMPBRANCH (x: v43|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v43|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rdi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction out:0|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction out:8|DWORD = MOVE input: v34|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction out:16|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  434  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rax|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v37|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v37|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v2|QWORD[.] v34|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v33|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v15|QWORD[.] v19|DWORD v30|DWORD v17|QWORD[.] v24|DWORD v28|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   82  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  192  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  194  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  224  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  294  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  296  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: vstack:0|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   82  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   98  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  192  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  194  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  224  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  294  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  296  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: vstack:0|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction vstack:4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction vstack:2|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction vstack:3|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction vstack:5|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction vstack:8|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: vstack:0|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [76, 716[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [80, 682[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [108, 624[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [212, 504[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [106, 470[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [218, 328[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [226, 440[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [240, 506[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [238, 424[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [236, 422[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:56|q]" vstack:0|q -1 [76, 716[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:64|q]" vstack:1|q -1 [80, 682[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:72|q]" vstack:2|q -1 [108, 624[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:32|d]" vstack:3|d -1 [212, 504[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:28|d]" vstack:4|d -1 [106, 470[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:36|d]" vstack:5|d -1 [218, 328[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:80|q]" vstack:6|q -1 [226, 440[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:44|d]" vstack:7|d -1 [240, 506[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:88|q]" vstack:8|q -1 [238, 424[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:40|d]" vstack:9|d -1 [236, 422[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rbx:0, rbp:0, rdi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rbx:0, rbp:0, rsi:0, rdi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rbp:0, rsi:0, r11:0, stack:48, stack:56]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rbp:0, rsi:0, r11:0, stack:48, stack:56]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:56]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@reference-map: [rbx:0, r11:0]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r11:0, r13:0]
live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rbx:0, rbp:0, rdi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rbx:0, rbp:0, rsi:0, rdi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: rbx|QWORD[.] rdi|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rbp:0, rsi:0, r11:0, stack:48, stack:56]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   86  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rbp:0, rsi:0, r11:0, stack:48, stack:56]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] stack:64|QWORD[.] rbp|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction rbp|QWORD = SHL value: rbp|QWORD size: QWORD <|@ <|@
      nr  198  <|@ instruction rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  248  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B19" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4607182344269886270
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4531002032181608448
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120] <|@ <|@
      nr  324  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:56]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0]
locals: stack:56|QWORD[.] r11|QWORD[.] rbx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" "B19" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@reference-map: [rbx:0, r11:0]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: r11|QWORD[.] r8|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: r11|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: r11|QWORD[.] r8|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - rbx|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed] <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r11:0, r13:0]
live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rcx|QWORD[.] r11|QWORD[.] rbx|QWORD[.] rsi|QWORD[.] rbp|DWORD rdi|DWORD r13|QWORD[.] r14|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:10, 78] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  534  <|@ instruction r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction r9|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed] <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r9|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed] <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #6          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #8          // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #9          // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #10         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #12         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #11         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #13         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: getstatic     #14         // sun.nio.cs.UTF_8.JLA:jdk.internal.access.JavaLangAccess
    58: aload_3       
    59: iload         4
    61: aload         6
    63: iload         7
    65: iload         5
    67: iload         4
    69: isub          
    70: iload         8
    72: iload         7
    74: isub          
    75: invokestatic  #15         // java.lang.Math.min:(int, int)int
    78: invokeinterface#16, 6      // jdk.internal.access.JavaLangAccess.encodeASCII:(char[], int, byte[], int, int)int
    83: istore        9
    85: iload         4
    87: iload         9
    89: iadd          
    90: istore        4
    92: iload         7
    94: iload         9
    96: iadd          
    97: istore        7
    99: iload         4
   101: iload         5
   103: if_icmpge     124
   106: aload_0       
   107: aload_1       
   108: aload_3       
   109: iload         4
   111: iload         5
   113: aload_2       
   114: aload         6
   116: iload         7
   118: iload         8
   120: invokevirtual #17         // encodeArrayLoopSlow:(java.nio.CharBuffer, char[], int, int, java.nio.ByteBuffer, byte[], int, int)java.nio.charset.CoderResult
   123: areturn       
   124: aload_1       
   125: iload         4
   127: aload_2       
   128: iload         7
   130: invokestatic  #3          // sun.nio.cs.UTF_8.updatePositions:(java.nio.Buffer, int, java.nio.Buffer, int)void
   133: getstatic     #18         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   136: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec689041817f20000000000f85ec0300009090909090909090909090909090909090909090909048896c2460488bde488bfa488be98b77300fbe572c8b4f18448b6f28448b771c448b570c448b5d30440fbe452c448b4d188b452848895c24388b5d1c48897c24308b7d088504f50000000084d20f85130200009090909090428504dd000000004584c00f8527030000897c245448896c24289090909090909090909090909090909090909090909090909090909090909090909090909048c1e603488bd649c1e3034d8bc34103cd4863e948d1e5488d6d104803ea4403c84963d1488d52104903d0448bc34403c0895c2450418bd8412bd9418bfe4103fd448974244c448bf7442bf1443bf3440f4ff34889742420488bf58be9418bce44894424484c895c241889442444418bda458bf1e800000000448bd04503d6448bc54403c0413bf80f8fcf0000008b74244c9090909090452bc5443bc60f8f73020000909090904585c00f8c2302000090909090413bd80f8fac0100008b7c24544c8b5c24309090909090909090904589431848b80000002b787f0000488d3c3848b8addeaddeaddeadde483bc70f85150100008b5c24508b4424449090909090418bf22bf03bf30f8fab0100009090909085f60f8c38010000488b5c2428909090903b730c0f8c140100009090909090909090909089731848b8addeaddeaddeadde488b6c24604883c468493ba7500400000f87f6010000c5f877c38b4424484c8b6c2418488b5c24284c8b5c2430909090909090909090909090909090909090909090488b742438498bd3488b4c2420448bcf488bfb4c892c24448954240889442410666690e8000000000f1f840000000000488b6c24604883c468493ba7500400000f8798010000c5f877c3488bdd4c8b5c243090909049c7c09402000041baedf2feff90909090909090458997840400004d898790040000e8000000000f1f840000000000488b5c242890909048c7c1941b000041b9cd4cffff9090909090909045898f8404000049898f90040000e8000000000f1f84000000000090909048c7c11419000041b9edd2feffebcc488b5c242890909048c7c19416000041b9edd6feffebb5448b4424484c8b6c2418488b5c24284c8b5c243090909049c7c11419000041baeddefeff488b742420488b4c243890909090909090458997840400004d898f90040000e8000000000f1f840000000000488b5c242890909048c7c11414000041b9eddafeffe94bffffff448b4424484c8b6c2418488b5c24284c8b5c243090909049c7c19416000041baede2feffeb94488bdd4c8b5c243090909049c7c0940c000041baedeafeffe9d1feffff448b4424484c8b6c2418488b5c24284c8b5c243090909049c7c11414000041baede6feffe94effffff48896c2460e800000000e905fcfffff4488d0df6fdffff49898f68040000e9b7fbfffff4488d0d54feffff49898f68040000e9a3fbfffff441c78784040000f537ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f525ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 85 48 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD  <||@
  Comment 85 50 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 88 52 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 91 54 rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 94 56 rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0]  <||@
  Comment 94 [rbx:0, rbp:0, rdi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdi|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 94 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 58 rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD  <||@
  Comment 101 60 rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD  <||@
  Comment 104 62 r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD  <||@
  Comment 108 64 r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD  <||@
  Comment 112 66 r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 116 68 r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0]  <||@
  Comment 116 [rbx:0, rbp:0, rsi:0, rdi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdi|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 116 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 120 70 r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD  <||@
  Comment 125 72 r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD  <||@
  Comment 129 74 rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD  <||@
  Comment 132 76 stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 137 78 rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD  <||@
  Comment 140 80 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 145 82 rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD  <||@
  Comment 148 84 NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0]  <||@
  Comment 148 [rbp:0, rsi:0, r11:0, stack:48, stack:56]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 148 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 155 86 TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22  <||@
  Comment 163 block B1 null  <||@
  Comment 163 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 163 90 NOP  <||@
  Comment 164 92 NOP  <||@
  Comment 165 94 NOP  <||@
  Comment 166 96 NOP  <||@
  Comment 167 98 NOP  <||@
  Comment 168 100 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0]  <||@
  Comment 168 [rbp:0, rsi:0, r11:0, stack:48, stack:56]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 176 102 TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21  <||@
  Comment 185 block B2 null  <||@
  Comment 185 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 185 106 stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 189 108 stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 194 110 NOP  <||@
  Comment 195 112 NOP  <||@
  Comment 196 114 NOP  <||@
  Comment 197 116 NOP  <||@
  Comment 198 118 NOP  <||@
  Comment 199 120 NOP  <||@
  Comment 200 122 NOP  <||@
  Comment 201 124 NOP  <||@
  Comment 202 126 NOP  <||@
  Comment 203 128 NOP  <||@
  Comment 204 130 NOP  <||@
  Comment 205 132 NOP  <||@
  Comment 206 134 NOP  <||@
  Comment 207 136 NOP  <||@
  Comment 208 138 NOP  <||@
  Comment 209 140 NOP  <||@
  Comment 210 142 NOP  <||@
  Comment 211 144 NOP  <||@
  Comment 212 146 NOP  <||@
  Comment 213 148 NOP  <||@
  Comment 214 150 NOP  <||@
  Comment 215 152 NOP  <||@
  Comment 216 154 NOP  <||@
  Comment 217 156 NOP  <||@
  Comment 218 158 NOP  <||@
  Comment 219 160 NOP  <||@
  Comment 220 162 NOP  <||@
  Comment 221 164 NOP  <||@
  Comment 222 166 NOP  <||@
  Comment 223 168 NOP  <||@
  Comment 224 170 NOP  <||@
  Comment 225 172 NOP  <||@
  Comment 226 174 NOP  <||@
  Comment 227 176 NOP  <||@
  Comment 228 178 NOP  <||@
  Comment 229 180 NOP  <||@
  Comment 230 182 NOP  <||@
  Comment 231 184 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3  <||@
  Comment 235 186 rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 238 188 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3  <||@
  Comment 242 190 r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 245 192 rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 248 194 rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 251 196 rbp|QWORD = SHL value: rbp|QWORD size: QWORD  <||@
  Comment 254 198 rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD  <||@
  Comment 258 200 rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 261 202 r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 264 204 rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 267 206 rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD  <||@
  Comment 271 208 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD  <||@
  Comment 274 210 r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 280 212 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 284 214 rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 290 216 rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 296 218 stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 301 220 r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 307 222 CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 310 224 r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: >  <||@
  Comment 314 226 stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 319 228 rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD  <||@
  Comment 322 230 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 322 232 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 324 234 rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 327 236 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 332 238 stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 337 240 stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 341 242 rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 344 244 r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 347 246 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL  <||@
  Comment 347 {Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 352 248 r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 358 250 r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 364 252 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 373 block B4 null  <||@
  Comment 373 326 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 373 328 rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 377 330 NOP  <||@
  Comment 378 332 NOP  <||@
  Comment 379 334 NOP  <||@
  Comment 380 336 NOP  <||@
  Comment 381 338 NOP  <||@
  Comment 382 340 r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 385 342 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 394 block B6 null  <||@
  Comment 394 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 372 NOP  <||@
  Comment 395 374 NOP  <||@
  Comment 396 376 NOP  <||@
  Comment 397 378 NOP  <||@
  Comment 398 380 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 407 block B8 null  <||@
  Comment 407 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 407 410 NOP  <||@
  Comment 408 412 NOP  <||@
  Comment 409 414 NOP  <||@
  Comment 410 416 NOP  <||@
  Comment 411 418 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD  <||@
  Comment 420 block B11 null  <||@
  Comment 420 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 470 rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 424 472 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 429 474 NOP  <||@
  Comment 430 476 NOP  <||@
  Comment 431 478 NOP  <||@
  Comment 432 480 NOP  <||@
  Comment 433 482 NOP  <||@
  Comment 434 484 NOP  <||@
  Comment 435 486 NOP  <||@
  Comment 436 488 NOP  <||@
  Comment 437 490 NOP  <||@
  Comment 438 492 MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD  <||@
  Comment 442 494 rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 452 496 rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0  <||@
  Comment 456 498 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}  <||@
  Comment 456 {meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}}  <||@
  Comment 466 500 CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD  <||@
  Comment 475 block B12 null  <||@
  Comment 475 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 475 504 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 479 506 rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 483 508 NOP  <||@
  Comment 484 510 NOP  <||@
  Comment 485 512 NOP  <||@
  Comment 486 514 NOP  <||@
  Comment 487 516 NOP  <||@
  Comment 488 518 rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 493 520 CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 501 block B14 null  <||@
  Comment 501 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 501 540 NOP  <||@
  Comment 502 542 NOP  <||@
  Comment 503 544 NOP  <||@
  Comment 504 546 NOP  <||@
  Comment 505 548 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 513 block B16 null  <||@
  Comment 513 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 513 568 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 518 570 NOP  <||@
  Comment 519 572 NOP  <||@
  Comment 520 574 NOP  <||@
  Comment 521 576 NOP  <||@
  Comment 522 578 CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 531 block B18 null  <||@
  Comment 531 594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 531 596 NOP  <||@
  Comment 532 598 NOP  <||@
  Comment 533 600 NOP  <||@
  Comment 534 602 NOP  <||@
  Comment 535 604 NOP  <||@
  Comment 536 606 NOP  <||@
  Comment 537 608 NOP  <||@
  Comment 538 610 NOP  <||@
  Comment 539 612 NOP  <||@
  Comment 540 614 NOP  <||@
  Comment 541 616 MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 544 618 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470]  <||@
  Comment 544 {Object[CoderResult@167784470]}  <||@
  Comment 554 620 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 563 POLL_RETURN_FAR  <||@
  Comment 580 block B3 null  <||@
  Comment 580 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 580 256 rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 584 258 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 589 260 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 594 262 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 599 264 NOP  <||@
  Comment 600 266 NOP  <||@
  Comment 601 268 NOP  <||@
  Comment 602 270 NOP  <||@
  Comment 603 272 NOP  <||@
  Comment 604 274 NOP  <||@
  Comment 605 276 NOP  <||@
  Comment 606 278 NOP  <||@
  Comment 607 280 NOP  <||@
  Comment 608 282 NOP  <||@
  Comment 609 284 NOP  <||@
  Comment 610 286 NOP  <||@
  Comment 611 288 NOP  <||@
  Comment 612 290 NOP  <||@
  Comment 613 292 NOP  <||@
  Comment 614 294 NOP  <||@
  Comment 615 296 NOP  <||@
  Comment 616 298 NOP  <||@
  Comment 617 300 NOP  <||@
  Comment 618 302 NOP  <||@
  Comment 619 304 NOP  <||@
  Comment 620 306 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 625 308 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 628 310 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 633 312 r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 636 314 rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 639 316 out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 643 318 out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 648 320 out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 652 322 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120]  <||@
  Comment 655 {HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>}  <||@
  Comment 655 INVOKESPECIAL  <||@
  Comment 660 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 668 324 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 677 POLL_RETURN_FAR  <||@
  Comment 694 block B22 null  <||@
  Comment 694 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 694 680 rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 697 682 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 702 684 NOP  <||@
  Comment 703 686 NOP  <||@
  Comment 704 688 NOP  <||@
  Comment 705 690 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 712 692 r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed]  <||@
  Comment 718 694 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 718 block B23 null  <||@
  Comment 718 696 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 718 698 NOP  <||@
  Comment 719 700 NOP  <||@
  Comment 720 702 NOP  <||@
  Comment 721 704 NOP  <||@
  Comment 722 706 NOP  <||@
  Comment 723 708 NOP  <||@
  Comment 724 710 NOP  <||@
  Comment 725 712 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 732 714 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 739 716 DEOPT info [bci:0]  <||@
  Comment 739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 744 [rbx:0, r11:0, stack:56]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 752 block B19 null  <||@
  Comment 752 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 752 624 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 757 626 NOP  <||@
  Comment 758 628 NOP  <||@
  Comment 759 630 NOP  <||@
  Comment 760 632 rcx|QWORD = MOVE input: long[7060|0x1b94]  <||@
  Comment 767 634 r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd]  <||@
  Comment 773 636 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 773 block B20 null  <||@
  Comment 773 638 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 773 640 NOP  <||@
  Comment 774 642 NOP  <||@
  Comment 775 644 NOP  <||@
  Comment 776 646 NOP  <||@
  Comment 777 648 NOP  <||@
  Comment 778 650 NOP  <||@
  Comment 779 652 NOP  <||@
  Comment 780 654 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 787 656 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 794 658 DEOPT info [bci:50, 2, 2, 7, 130]  <||@
  Comment 794 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 799 [rbx:0, r11:0]at java.nio.Buffer.position(Buffer.java:330) [bci: 50, duringCall: false, rethrow: false]
              |0             |1        
     locals:  |r11|QWORD[.]  |r8|DWORD 
  at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2, duringCall: true, rethrow: false]
              |0             |1        
     locals:  |r11|QWORD[.]  |r8|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2             |3         
     locals:  |-  |-  |rbx|QWORD[.]  |r10|DWORD 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 807 block B17 null  <||@
  Comment 807 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 807 582 NOP  <||@
  Comment 808 584 NOP  <||@
  Comment 809 586 NOP  <||@
  Comment 810 588 rcx|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 817 590 r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed]  <||@
  Comment 823 592 JUMP ~outgoingValues: [] destination: B17 -> B20  <||@
  Comment 825 block B15 null  <||@
  Comment 825 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 825 552 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 830 554 NOP  <||@
  Comment 831 556 NOP  <||@
  Comment 832 558 NOP  <||@
  Comment 833 560 rcx|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 840 562 r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed]  <||@
  Comment 846 564 JUMP ~outgoingValues: [] destination: B15 -> B20  <||@
  Comment 848 block B9 null  <||@
  Comment 848 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 848 422 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 853 424 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 858 426 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 863 428 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 868 430 NOP  <||@
  Comment 869 432 NOP  <||@
  Comment 870 434 NOP  <||@
  Comment 871 436 r9|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 878 438 r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed]  <||@
  Comment 884 444 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 884 block B10 null  <||@
  Comment 884 446 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 884 364 rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 889 366 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 894 448 NOP  <||@
  Comment 895 450 NOP  <||@
  Comment 896 452 NOP  <||@
  Comment 897 454 NOP  <||@
  Comment 898 456 NOP  <||@
  Comment 899 458 NOP  <||@
  Comment 900 460 NOP  <||@
  Comment 901 462 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 908 464 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 915 466 DEOPT info [bci:10, 78]  <||@
  Comment 915 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 920 [rcx:0, rbx:0, rsi:0, r11:0, r13:0]at java.lang.System$2.encodeASCII(System.java:2506) [bci: 10, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4  |5 
     locals:  |-          |-  |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |   |  
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78, duringCall: true, rethrow: false]
              |0             |1             |2             |3             |4          |5          |6             |7          |8         |9 
     locals:  |rcx|QWORD[.]  |r11|QWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |rbp|DWORD  |rdi|DWORD  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-   <||@
  Comment 928 block B13 null  <||@
  Comment 928 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 928 524 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 933 526 NOP  <||@
  Comment 934 528 NOP  <||@
  Comment 935 530 NOP  <||@
  Comment 936 532 rcx|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 943 534 r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 949 536 JUMP ~outgoingValues: [] destination: B13 -> B20  <||@
  Comment 954 block B7 null  <||@
  Comment 954 382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 954 384 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 959 386 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 964 388 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 969 390 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 974 392 NOP  <||@
  Comment 975 394 NOP  <||@
  Comment 976 396 NOP  <||@
  Comment 977 398 r9|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 984 400 r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed]  <||@
  Comment 990 406 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 992 block B21 null  <||@
  Comment 992 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 992 662 rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 995 664 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1000 666 NOP  <||@
  Comment 1001 668 NOP  <||@
  Comment 1002 670 NOP  <||@
  Comment 1003 672 r8|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 1010 674 r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed]  <||@
  Comment 1016 676 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 1021 block B5 null  <||@
  Comment 1021 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1021 346 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1026 348 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1031 350 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1036 352 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1041 354 NOP  <||@
  Comment 1042 356 NOP  <||@
  Comment 1043 358 NOP  <||@
  Comment 1044 360 r9|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1051 362 r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed]  <||@
  Comment 1057 368 JUMP ~outgoingValues: [] destination: B5 -> B10  <||@
  Comment 1067 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1092 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1112 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1140 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1145 [rbx:0, rbp:0, rdi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdi|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1175 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1180 [rbx:0, rbp:0, rsi:0, rdi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdi|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1188 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1188 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1194 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1194 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4951[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  method "HotSpotCompilation-4951[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  date 1724269747731
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae83ba0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c31490fe66669089842400c0feff4883ec689041817f20000000000f85ec0300009090909090909090909090909090909090909090909048896c2460488bde488bfa488be98b77300fbe572c8b4f18448b6f28448b771c448b570c448b5d30440fbe452c448b4d188b452848895c24388b5d1c48897c24308b7d088504f50000000084d20f85130200009090909090428504dd000000004584c00f8527030000897c245448896c24289090909090909090909090909090909090909090909090909090909090909090909090909048c1e603488bd649c1e3034d8bc34103cd4863e948d1e5488d6d104803ea4403c84963d1488d52104903d0448bc34403c0895c2450418bd8412bd9418bfe4103fd448974244c448bf7442bf1443bf3440f4ff34889742420488bf58be9418bce44894424484c895c241889442444418bda458bf1e80079a5fe448bd04503d6448bc54403c0413bf80f8fcf0000008b74244c9090909090452bc5443bc60f8f73020000909090904585c00f8c2302000090909090413bd80f8fac0100008b7c24544c8b5c24309090909090909090904589431848b80000002b787f0000488d3c3848b818281c2b787f0000483bc70f85150100008b5c24508b4424449090909090418bf22bf03bf30f8fab0100009090909085f60f8c38010000488b5c2428909090903b730c0f8c140100009090909090909090909089731848b85807e72d06000000488b6c24604883c468493ba7500400000f87f6010000c5f877c38b4424484c8b6c2418488b5c24284c8b5c2430909090909090909090909090909090909090909090488b742438498bd3488b4c2420448bcf488bfb4c892c24448954240889442410666690e84c1590fe0f1f840024040004488b6c24604883c468493ba7500400000f8798010000c5f877c3488bdd4c8b5c243090909049c7c09402000041baedf2feff90909090909090458997840400004d898790040000e8f27290fe0f1f840000000000488b5c242890909048c7c1941b000041b9cd4cffff9090909090909045898f8404000049898f90040000e8bb7290fe0f1f84000000000090909048c7c11419000041b9edd2feffebcc488b5c242890909048c7c19416000041b9edd6feffebb5448b4424484c8b6c2418488b5c24284c8b5c243090909049c7c11419000041baeddefeff488b742420488b4c243890909090909090458997840400004d898f90040000e8427290fe0f1f840000000000488b5c242890909048c7c11414000041b9eddafeffe94bffffff448b4424484c8b6c2418488b5c24284c8b5c243090909049c7c19416000041baede2feffeb94488bdd4c8b5c243090909049c7c0940c000041baedeafeffe9d1feffff448b4424484c8b6c2418488b5c24284c8b5c243090909049c7c11414000041baede6feffe94effffff48896c2460e850728efee905fcfffff4488d0df6fdffff49898f68040000e9178090fef4488d0d54feffff49898f68040000e9038090fef441c78784040000f537ffff49c7879004000000000000e8617190fe0f1f84000000000041c78784040000f525ffff49c7879004000000000000e83e7190fe0f1f840000000000e8b712a4fef4e8d16e90fef448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 85 48 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@58423d59 slotKind: QWORD  <||@
  Comment 85 50 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 88 52 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 91 54 rbp|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 94 56 rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 48] size: DWORD state [bci:0]  <||@
  Comment 94 [rbx:0, rbp:0, rdi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdi|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 94 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 58 rdx|DWORD = MOVSXB input: [rdi|QWORD[.] + 44] size: DWORD  <||@
  Comment 101 60 rcx|DWORD = MOV input: [rdi|QWORD[.] + 24] size: DWORD  <||@
  Comment 104 62 r13|DWORD = MOV input: [rdi|QWORD[.] + 40] size: DWORD  <||@
  Comment 108 64 r14|DWORD = MOV input: [rdi|QWORD[.] + 28] size: DWORD  <||@
  Comment 112 66 r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 116 68 r11|DWORD[_] = MOV input: [rbp|QWORD[.] + 48] size: DWORD state [bci:0]  <||@
  Comment 116 [rbx:0, rbp:0, rsi:0, rdi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdi|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 116 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 120 70 r8|DWORD = MOVSXB input: [rbp|QWORD[.] + 44] size: DWORD  <||@
  Comment 125 72 r9|DWORD = MOV input: [rbp|QWORD[.] + 24] size: DWORD  <||@
  Comment 129 74 rax|DWORD = MOV input: [rbp|QWORD[.] + 40] size: DWORD  <||@
  Comment 132 76 stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 137 78 rbx|DWORD = MOV input: [rbp|QWORD[.] + 28] size: DWORD  <||@
  Comment 140 80 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 145 82 rdi|DWORD = MOV input: [rbp|QWORD[.] + 8] size: DWORD  <||@
  Comment 148 84 NULLCHECK address: [rsi|DWORD[_] * 8] state [bci:0]  <||@
  Comment 148 [rbp:0, rsi:0, r11:0, stack:48, stack:56]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 148 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 155 86 TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22  <||@
  Comment 163 block B1 null  <||@
  Comment 163 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 163 90 NOP  <||@
  Comment 164 92 NOP  <||@
  Comment 165 94 NOP  <||@
  Comment 166 96 NOP  <||@
  Comment 167 98 NOP  <||@
  Comment 168 100 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:0]  <||@
  Comment 168 [rbp:0, rsi:0, r11:0, stack:48, stack:56]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 176 102 TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B21  <||@
  Comment 185 block B2 null  <||@
  Comment 185 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 185 106 stack:28|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 189 108 stack:72|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 194 110 NOP  <||@
  Comment 195 112 NOP  <||@
  Comment 196 114 NOP  <||@
  Comment 197 116 NOP  <||@
  Comment 198 118 NOP  <||@
  Comment 199 120 NOP  <||@
  Comment 200 122 NOP  <||@
  Comment 201 124 NOP  <||@
  Comment 202 126 NOP  <||@
  Comment 203 128 NOP  <||@
  Comment 204 130 NOP  <||@
  Comment 205 132 NOP  <||@
  Comment 206 134 NOP  <||@
  Comment 207 136 NOP  <||@
  Comment 208 138 NOP  <||@
  Comment 209 140 NOP  <||@
  Comment 210 142 NOP  <||@
  Comment 211 144 NOP  <||@
  Comment 212 146 NOP  <||@
  Comment 213 148 NOP  <||@
  Comment 214 150 NOP  <||@
  Comment 215 152 NOP  <||@
  Comment 216 154 NOP  <||@
  Comment 217 156 NOP  <||@
  Comment 218 158 NOP  <||@
  Comment 219 160 NOP  <||@
  Comment 220 162 NOP  <||@
  Comment 221 164 NOP  <||@
  Comment 222 166 NOP  <||@
  Comment 223 168 NOP  <||@
  Comment 224 170 NOP  <||@
  Comment 225 172 NOP  <||@
  Comment 226 174 NOP  <||@
  Comment 227 176 NOP  <||@
  Comment 228 178 NOP  <||@
  Comment 229 180 NOP  <||@
  Comment 230 182 NOP  <||@
  Comment 231 184 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3  <||@
  Comment 235 186 rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 238 188 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 0 shift: 3  <||@
  Comment 242 190 r8|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 245 192 rcx|DWORD = ADD (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 248 194 rbp|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 251 196 rbp|QWORD = SHL value: rbp|QWORD size: QWORD  <||@
  Comment 254 198 rbp|QWORD = LEA address: [rbp|QWORD + 16] size: QWORD  <||@
  Comment 258 200 rbp|QWORD[*] = ADD (x: rbp|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 261 202 r9|DWORD = ADD (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 264 204 rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 267 206 rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD  <||@
  Comment 271 208 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD  <||@
  Comment 274 210 r8|DWORD = ADD (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 280 212 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 284 214 rbx|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 290 216 rdi|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 296 218 stack:36|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 301 220 r14|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 307 222 CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 310 224 r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rbx|DWORD) condition: >  <||@
  Comment 314 226 stack:80|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 319 228 rsi|QWORD = MOVE input: rbp|QWORD[*] moveKind: QWORD  <||@
  Comment 322 230 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 322 232 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 324 234 rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 327 236 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 332 238 stack:88|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 337 240 stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 341 242 rbx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 344 244 r14|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 347 246 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL  <||@
  Comment 347 {Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 352 248 r10|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 358 250 r8|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 364 252 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 8.274506761773992E-6 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 373 block B4 null  <||@
  Comment 373 326 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 373 328 rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 377 330 NOP  <||@
  Comment 378 332 NOP  <||@
  Comment 379 334 NOP  <||@
  Comment 380 336 NOP  <||@
  Comment 381 338 NOP  <||@
  Comment 382 340 r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 385 342 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 394 block B6 null  <||@
  Comment 394 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 372 NOP  <||@
  Comment 395 374 NOP  <||@
  Comment 396 376 NOP  <||@
  Comment 397 378 NOP  <||@
  Comment 398 380 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 407 block B8 null  <||@
  Comment 407 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 407 410 NOP  <||@
  Comment 408 412 NOP  <||@
  Comment 409 414 NOP  <||@
  Comment 410 416 NOP  <||@
  Comment 411 418 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B11 size: DWORD  <||@
  Comment 420 block B11 null  <||@
  Comment 420 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 470 rdi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 424 472 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 429 474 NOP  <||@
  Comment 430 476 NOP  <||@
  Comment 431 478 NOP  <||@
  Comment 432 480 NOP  <||@
  Comment 433 482 NOP  <||@
  Comment 434 484 NOP  <||@
  Comment 435 486 NOP  <||@
  Comment 436 488 NOP  <||@
  Comment 437 490 NOP  <||@
  Comment 438 492 MOV (x: [r11|QWORD[.] + 24], y: r8|DWORD) size: DWORD  <||@
  Comment 442 494 rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 452 496 rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51bb1a6d encoding: base: 140154094223360 shift: 0  <||@
  Comment 456 498 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}  <||@
  Comment 456 {meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}}  <||@
  Comment 466 500 CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B19 size: QWORD  <||@
  Comment 475 block B12 null  <||@
  Comment 475 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 475 504 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 479 506 rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 483 508 NOP  <||@
  Comment 484 510 NOP  <||@
  Comment 485 512 NOP  <||@
  Comment 486 514 NOP  <||@
  Comment 487 516 NOP  <||@
  Comment 488 518 rsi|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 493 520 CMPBRANCH (x: rsi|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 501 block B14 null  <||@
  Comment 501 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 501 540 NOP  <||@
  Comment 502 542 NOP  <||@
  Comment 503 544 NOP  <||@
  Comment 504 546 NOP  <||@
  Comment 505 548 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 513 block B16 null  <||@
  Comment 513 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 513 568 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 518 570 NOP  <||@
  Comment 519 572 NOP  <||@
  Comment 520 574 NOP  <||@
  Comment 521 576 NOP  <||@
  Comment 522 578 CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 531 block B18 null  <||@
  Comment 531 594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 531 596 NOP  <||@
  Comment 532 598 NOP  <||@
  Comment 533 600 NOP  <||@
  Comment 534 602 NOP  <||@
  Comment 535 604 NOP  <||@
  Comment 536 606 NOP  <||@
  Comment 537 608 NOP  <||@
  Comment 538 610 NOP  <||@
  Comment 539 612 NOP  <||@
  Comment 540 614 NOP  <||@
  Comment 541 616 MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 544 618 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470]  <||@
  Comment 544 {Object[CoderResult@167784470]}  <||@
  Comment 554 620 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 563 POLL_RETURN_FAR  <||@
  Comment 580 block B3 null  <||@
  Comment 580 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 580 256 rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 584 258 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 589 260 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 594 262 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 599 264 NOP  <||@
  Comment 600 266 NOP  <||@
  Comment 601 268 NOP  <||@
  Comment 602 270 NOP  <||@
  Comment 603 272 NOP  <||@
  Comment 604 274 NOP  <||@
  Comment 605 276 NOP  <||@
  Comment 606 278 NOP  <||@
  Comment 607 280 NOP  <||@
  Comment 608 282 NOP  <||@
  Comment 609 284 NOP  <||@
  Comment 610 286 NOP  <||@
  Comment 611 288 NOP  <||@
  Comment 612 290 NOP  <||@
  Comment 613 292 NOP  <||@
  Comment 614 294 NOP  <||@
  Comment 615 296 NOP  <||@
  Comment 616 298 NOP  <||@
  Comment 617 300 NOP  <||@
  Comment 618 302 NOP  <||@
  Comment 619 304 NOP  <||@
  Comment 620 306 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 625 308 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 628 310 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 633 312 r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 636 314 rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 639 316 out:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 643 318 out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 648 320 out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 652 322 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120]  <||@
  Comment 655 {HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>}  <||@
  Comment 655 INVOKESPECIAL  <||@
  Comment 660 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 668 324 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 677 POLL_RETURN_FAR  <||@
  Comment 694 block B22 null  <||@
  Comment 694 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 694 680 rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 697 682 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 702 684 NOP  <||@
  Comment 703 686 NOP  <||@
  Comment 704 688 NOP  <||@
  Comment 705 690 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 712 692 r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed]  <||@
  Comment 718 694 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 718 block B23 null  <||@
  Comment 718 696 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 718 698 NOP  <||@
  Comment 719 700 NOP  <||@
  Comment 720 702 NOP  <||@
  Comment 721 704 NOP  <||@
  Comment 722 706 NOP  <||@
  Comment 723 708 NOP  <||@
  Comment 724 710 NOP  <||@
  Comment 725 712 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 732 714 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 739 716 DEOPT info [bci:0]  <||@
  Comment 739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 744 [rbx:0, r11:0, stack:56]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 752 block B19 null  <||@
  Comment 752 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 752 624 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 757 626 NOP  <||@
  Comment 758 628 NOP  <||@
  Comment 759 630 NOP  <||@
  Comment 760 632 rcx|QWORD = MOVE input: long[7060|0x1b94]  <||@
  Comment 767 634 r9|DWORD = MOVE input: int[-45875|0xffffffffffff4ccd]  <||@
  Comment 773 636 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 773 block B20 null  <||@
  Comment 773 638 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 773 640 NOP  <||@
  Comment 774 642 NOP  <||@
  Comment 775 644 NOP  <||@
  Comment 776 646 NOP  <||@
  Comment 777 648 NOP  <||@
  Comment 778 650 NOP  <||@
  Comment 779 652 NOP  <||@
  Comment 780 654 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 787 656 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 794 658 DEOPT info [bci:50, 2, 2, 7, 130]  <||@
  Comment 794 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 799 [rbx:0, r11:0]at java.nio.Buffer.position(Buffer.java:330) [bci: 50, duringCall: false, rethrow: false]
              |0             |1        
     locals:  |r11|QWORD[.]  |r8|DWORD 
  at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2, duringCall: true, rethrow: false]
              |0             |1        
     locals:  |r11|QWORD[.]  |r8|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2             |3         
     locals:  |-  |-  |rbx|QWORD[.]  |r10|DWORD 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 807 block B17 null  <||@
  Comment 807 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 807 582 NOP  <||@
  Comment 808 584 NOP  <||@
  Comment 809 586 NOP  <||@
  Comment 810 588 rcx|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 817 590 r9|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed]  <||@
  Comment 823 592 JUMP ~outgoingValues: [] destination: B17 -> B20  <||@
  Comment 825 block B15 null  <||@
  Comment 825 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 825 552 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 830 554 NOP  <||@
  Comment 831 556 NOP  <||@
  Comment 832 558 NOP  <||@
  Comment 833 560 rcx|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 840 562 r9|DWORD = MOVE input: int[-76051|0xfffffffffffed6ed]  <||@
  Comment 846 564 JUMP ~outgoingValues: [] destination: B15 -> B20  <||@
  Comment 848 block B9 null  <||@
  Comment 848 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 848 422 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 853 424 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 858 426 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 863 428 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 868 430 NOP  <||@
  Comment 869 432 NOP  <||@
  Comment 870 434 NOP  <||@
  Comment 871 436 r9|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 878 438 r10|DWORD = MOVE input: int[-74003|0xfffffffffffedeed]  <||@
  Comment 884 444 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 884 block B10 null  <||@
  Comment 884 446 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 884 364 rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 889 366 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 894 448 NOP  <||@
  Comment 895 450 NOP  <||@
  Comment 896 452 NOP  <||@
  Comment 897 454 NOP  <||@
  Comment 898 456 NOP  <||@
  Comment 899 458 NOP  <||@
  Comment 900 460 NOP  <||@
  Comment 901 462 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 908 464 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 915 466 DEOPT info [bci:10, 78]  <||@
  Comment 915 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 920 [rcx:0, rbx:0, rsi:0, r11:0, r13:0]at java.lang.System$2.encodeASCII(System.java:2506) [bci: 10, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4  |5 
     locals:  |-          |-  |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |   |  
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78, duringCall: true, rethrow: false]
              |0             |1             |2             |3             |4          |5          |6             |7          |8         |9 
     locals:  |rcx|QWORD[.]  |r11|QWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |rbp|DWORD  |rdi|DWORD  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-   <||@
  Comment 928 block B13 null  <||@
  Comment 928 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 928 524 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 933 526 NOP  <||@
  Comment 934 528 NOP  <||@
  Comment 935 530 NOP  <||@
  Comment 936 532 rcx|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 943 534 r9|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 949 536 JUMP ~outgoingValues: [] destination: B13 -> B20  <||@
  Comment 954 block B7 null  <||@
  Comment 954 382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 954 384 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 959 386 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 964 388 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 969 390 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 974 392 NOP  <||@
  Comment 975 394 NOP  <||@
  Comment 976 396 NOP  <||@
  Comment 977 398 r9|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 984 400 r10|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed]  <||@
  Comment 990 406 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 992 block B21 null  <||@
  Comment 992 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 992 662 rbx|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 995 664 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1000 666 NOP  <||@
  Comment 1001 668 NOP  <||@
  Comment 1002 670 NOP  <||@
  Comment 1003 672 r8|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 1010 674 r10|DWORD = MOVE input: int[-70931|0xfffffffffffeeaed]  <||@
  Comment 1016 676 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 1021 block B5 null  <||@
  Comment 1021 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1021 346 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1026 348 r13|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1031 350 rbx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1036 352 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1041 354 NOP  <||@
  Comment 1042 356 NOP  <||@
  Comment 1043 358 NOP  <||@
  Comment 1044 360 r9|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1051 362 r10|DWORD = MOVE input: int[-71955|0xfffffffffffee6ed]  <||@
  Comment 1057 368 JUMP ~outgoingValues: [] destination: B5 -> B10  <||@
  Comment 1067 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1092 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1112 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1140 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1145 [rbx:0, rbp:0, rdi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdi|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1175 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1180 [rbx:0, rbp:0, rsi:0, rdi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:447) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdi|QWORD[.]  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1188 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1188 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1194 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1194 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
