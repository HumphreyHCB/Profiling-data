begin_compilation
  name " HotSpotCompilation-8206[java.util.ArrayDeque$DeqIterator.next()]"
  method "HotSpotCompilation-8206[java.util.ArrayDeque$DeqIterator.next()]"
  date 1724269759229
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a121 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a121  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.ArrayDeque$DeqIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v129 v130 v132 v135 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a121 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.ArrayDeque
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque$DeqIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 16]
stamp: n java.util.ArrayDeque
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v130 
lastLocationAccess: - 
=== Succesors ===
next: a122 
=== Usages ===
v131 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v130 lastLocationAccess: - #next: a122  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ArrayDeque$DeqIterator.next()>
localsSize: 3
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 696
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v111 a122 i123 v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a121 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: int[-11787|0xffffffffffffd1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.elements
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: n java.lang.Object[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v131 
lastLocationAccess: - 
=== Succesors ===
next: i123 
=== Usages ===
a51 v133 
=== Predecessor ===
a121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v131 lastLocationAccess: - #next: i123  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a122 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-14347|0xffffffffffffc7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: i124 
=== Usages ===
v60 v34 
=== Predecessor ===
a122 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v133 lastLocationAccess: - #next: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i124 v73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque$DeqIterator.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
=== Succesors ===
next: v94 
=== Usages ===
j75 v71 v60 i33 
=== Predecessor ===
i123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i123 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i124 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i124 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i125 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i125  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i125 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque$DeqIterator.remaining
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v129 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
v6 i25 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v129 lastLocationAccess: - #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 i33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 4]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i5 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i125 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
i125 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v96 #falseSuccessor: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339]
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a126 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a126  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a122 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a122  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i124 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a51 
index: j75 
=== Succesors ===
=== Usages ===
a126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: j75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
a69 v136 
=== Predecessor ===
v97 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a126 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: v136 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
a126 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: v136 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque$DeqIterator.lastRet
location: ArrayDeque$DeqIterator.lastRet
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
lastLocationAccess: - 
value: i124 
stateAfter: - 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v135 lastLocationAccess: - value: i124 stateAfter: - #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 0]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 44]
stamp: i32
=== Inputs ===
x: i124 
y: i5 
=== Succesors ===
=== Usages ===
v34 i37 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i124 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i123 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 8]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 44]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 44]
stamp: i32
=== Inputs ===
condition: v34 
trueValue: i33 
falseValue: i35 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v34 trueValue: i33 falseValue: i35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque$DeqIterator.cursor
location: ArrayDeque$DeqIterator.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 47]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
value: i37 
stateAfter: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - value: i37 stateAfter: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:701) [bci: 56]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:701) [bci: 56]
stamp: i32
=== Inputs ===
x: i125 
y: i24 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i125 y: i24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque$DeqIterator.remaining
location: ArrayDeque$DeqIterator.remaining
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:701) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v129 
lastLocationAccess: - 
value: i25 
stateAfter: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v129 lastLocationAccess: - value: i25 stateAfter: - #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid a69 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a126 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a126  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:702) [bci: 61]
stamp: void
=== Inputs ===
memoryMap: - 
result: a69 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a69  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid j108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
rawvalue: -15643
stableDimension: 0
stamp: i32 [-15643]
stampKind: i32
value: int[-15643|0xffffffffffffc2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: i32 [-24339 - -15643] bits:1...1xx000x01110x101
valueDescription: i32
=== Inputs ===
merge: v105 
values: i115 i117 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v105 values: i115 i117  <|@  <|@
f <@~|@floating>@ <|@
tid j110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v105 
values: j48 j108 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v105 values: j48 j108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v114 v116 
=== Succesors ===
next: v111 
=== Usages ===
i109 j110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v114 v116 #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i109 
speculation: j110 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i109 speculation: j110  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a121 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a121  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.ArrayDeque$DeqIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v129 v130 v132 v135 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a121 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.ArrayDeque
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque$DeqIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 16]
stamp: n java.util.ArrayDeque
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v130 
lastLocationAccess: - 
=== Succesors ===
next: a122 
=== Usages ===
v131 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v130 lastLocationAccess: - #next: a122  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ArrayDeque$DeqIterator.next()>
localsSize: 3
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 696
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v111 a122 i123 v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
result [v1|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a121 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: int[-11787|0xffffffffffffd1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.elements
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: n java.lang.Object[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v131 
lastLocationAccess: - 
=== Succesors ===
next: i123 
=== Usages ===
a51 v133 
=== Predecessor ===
a121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v131 lastLocationAccess: - #next: i123  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a122 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i123 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-14347|0xffffffffffffc7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: i124 
=== Usages ===
v60 v34 
=== Predecessor ===
a122 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v133 lastLocationAccess: - #next: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i124 v73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i124 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque$DeqIterator.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
=== Succesors ===
next: v94 
=== Usages ===
j75 v71 v60 i33 
=== Predecessor ===
i123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i123 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i124 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i124 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i125 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i125  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i125 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i125 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque$DeqIterator.remaining
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v129 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
v6 i25 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v129 lastLocationAccess: - #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 i33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 4]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i5 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i125 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
i125 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v96 #falseSuccessor: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result int[-24339|0xffffffffffffa0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339]
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a126 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a126  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a122 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a122  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i124 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
result [v6|QWORD[.] + v4|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a51 
index: j75 
=== Succesors ===
=== Usages ===
a126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: j75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a126 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
a69 v136 
=== Predecessor ===
v97 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
result [v7|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a126 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: v136 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
a126 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: v136 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque$DeqIterator.lastRet
location: ArrayDeque$DeqIterator.lastRet
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
lastLocationAccess: - 
value: i124 
stateAfter: - 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v135 lastLocationAccess: - value: i124 stateAfter: - #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 0]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 44]
stamp: i32
=== Inputs ===
x: i124 
y: i5 
=== Succesors ===
=== Usages ===
v34 i37 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i124 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i123 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 8]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 44]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 44]
stamp: i32
=== Inputs ===
condition: v34 
trueValue: i33 
falseValue: i35 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v34 trueValue: i33 falseValue: i35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque$DeqIterator.cursor
location: ArrayDeque$DeqIterator.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:700) [bci: 47]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
value: i37 
stateAfter: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - value: i37 stateAfter: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:701) [bci: 56]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:701) [bci: 56]
stamp: i32
=== Inputs ===
x: i125 
y: i24 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i125 y: i24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque$DeqIterator.remaining
location: ArrayDeque$DeqIterator.remaining
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:701) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v129 
lastLocationAccess: - 
value: i25 
stateAfter: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v129 lastLocationAccess: - value: i25 stateAfter: - #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid a69 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a126 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a126  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:702) [bci: 61]
stamp: void
=== Inputs ===
memoryMap: - 
result: a69 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a69  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.nonNullElementAt(ArrayDeque.java:267) [bci: 2]
at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:699) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid j108 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result int[-15643|0xffffffffffffc2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
rawvalue: -15643
stableDimension: 0
stamp: i32 [-15643]
stampKind: i32
value: int[-15643|0xffffffffffffc2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i109 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: i32 [-24339 - -15643] bits:1...1xx000x01110x101
valueDescription: i32
=== Inputs ===
merge: v105 
values: i115 i117 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v105 values: i115 i117  <|@  <|@
f <@~|@floating>@ <|@
tid j110 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v105 
values: j48 j108 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v105 values: j48 j108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v114 v116 
=== Succesors ===
next: v111 
=== Usages ===
i109 j110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v114 v116 #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:698) [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i109 
speculation: j110 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i109 speculation: j110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v11|q [0, 1[[122, 124[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 28[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [28, 118[[126, 167[28 MustHaveRegister 30 MustHaveRegister 36 MustHaveRegister 52 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [32, 100[32 MustHaveRegister 34 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [34, 110[34 MustHaveRegister 38 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [36, 108[36 MustHaveRegister 38 ShouldHaveRegister 102 MustHaveRegister 106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [52, 116[52 MustHaveRegister 54 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v2|d [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [102, 120[102 MustHaveRegister 104 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v4|d [108, 113[108 MustHaveRegister 110 ShouldHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [112, 114[112 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v5|d [116, 118[116 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v7|d [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [146, 162[162 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [146, 164[164 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v11|q [0, 1[[122, 124[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 28[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 118[[126, 167[28 MustHaveRegister 30 MustHaveRegister 36 MustHaveRegister 52 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [32, 100[32 MustHaveRegister 34 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 110[34 MustHaveRegister 38 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [36, 108[36 MustHaveRegister 38 ShouldHaveRegister 102 MustHaveRegister 106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [52, 116[52 MustHaveRegister 54 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|d [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [102, 120[102 MustHaveRegister 104 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v4|d [108, 113[108 MustHaveRegister 110 ShouldHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [112, 114[112 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d v5|d [116, 118[116 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v7|d [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [146, 162[162 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q -1 [146, 164[164 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v11|q [0, 1[[122, 124[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 28[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 118[[126, 167[28 MustHaveRegister 30 MustHaveRegister 36 MustHaveRegister 52 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [32, 100[32 MustHaveRegister 34 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 110[34 MustHaveRegister 38 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [36, 108[36 MustHaveRegister 38 ShouldHaveRegister 102 MustHaveRegister 106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [52, 116[52 MustHaveRegister 54 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|d [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [102, 120[102 MustHaveRegister 104 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v4|d [108, 113[108 MustHaveRegister 110 ShouldHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [112, 114[112 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d v5|d [116, 118[116 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v7|d [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [146, 162[162 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q -1 [146, 164[164 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [int[-15643|0xffffffffffffc2e5], long[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[-24339|0xffffffffffffa0ed], long[20|0x14]] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v11|q [0, 1[[122, 124[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 28[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 118[[126, 167[28 MustHaveRegister 30 MustHaveRegister 36 MustHaveRegister 52 MustHaveRegister 106 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [32, 100[32 MustHaveRegister 34 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 110[34 MustHaveRegister 38 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [36, 108[36 MustHaveRegister 38 ShouldHaveRegister 102 MustHaveRegister 106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [52, 116[52 MustHaveRegister 54 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|d [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [102, 120[102 MustHaveRegister 104 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v4|d [108, 113[108 MustHaveRegister 110 ShouldHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [112, 114[112 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d v5|d [116, 118[116 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v7|d [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [146, 162[162 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q -1 [146, 164[164 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v4|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction v7|DWORD[_] = MOV input: [v6|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v8|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v10|DWORD = DEC value: v5|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  106  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  114  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // remaining:int
     4: ifgt          15
     7: new           #32         // java.util.NoSuchElementException
    10: dup           
    11: invokespecial #7          // java.util.NoSuchElementException.<init>:()void
    14: athrow        
    15: aload_0       
    16: getfield      #0          // this$0:java.util.ArrayDeque
    19: getfield      #8          // java.util.ArrayDeque.elements:java.lang.Object[]
    22: astore_1      
    23: aload_1       
    24: aload_0       
    25: getfield      #6          // cursor:int
    28: invokestatic  #9          // java.util.ArrayDeque.nonNullElementAt:(java.lang.Object[], int)java.lang.Object
    31: astore_2      
    32: aload_0       
    33: aload_0       
    34: aload_0       
    35: getfield      #6          // cursor:int
    38: dup_x1        
    39: putfield      #4          // lastRet:int
    42: aload_1       
    43: arraylength   
    44: invokestatic  #10         // java.util.ArrayDeque.inc:(int, int)int
    47: putfield      #6          // cursor:int
    50: aload_0       
    51: dup           
    52: getfield      #3          // remaining:int
    55: iconst_1      
    56: isub          
    57: putfield      #3          // remaining:int
    60: aload_2       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85e5000000909090909090909090909048896c24108b46188b04c514000000448b14c50c000000448b5e0c453bd30f86720000009090909090448b46104183f8010f8c9100000090909090909090909090909090909090909090909048c1e003428b4498108504c50000000044895e1441ffc3453bd341ba00000000450f4fd34489560c41ffc84489461048c1e003488b6c24104883c418493ba7500400000f8755000000c390909049c7c30000000041bae5c2ffff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c31400000041baeda0ffffebcc48896c2410e800000000e90cfffffff4488d0d97ffffff49898f68040000e9befefffff441c78784040000f5d1ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5c7ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD  <||@
  Comment 74 30 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 77 32 rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 77 [rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 34 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 84 [rax:0, rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 36 r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 96 38 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD  <||@
  Comment 105 block B1 null  <||@
  Comment 105 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 105 42 NOP  <||@
  Comment 106 44 NOP  <||@
  Comment 107 46 NOP  <||@
  Comment 108 48 NOP  <||@
  Comment 109 50 NOP  <||@
  Comment 110 52 r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 114 54 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null  <||@
  Comment 124 block B3 null  <||@
  Comment 124 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 124 58 NOP  <||@
  Comment 125 60 NOP  <||@
  Comment 126 62 NOP  <||@
  Comment 127 64 NOP  <||@
  Comment 128 66 NOP  <||@
  Comment 129 68 NOP  <||@
  Comment 130 70 NOP  <||@
  Comment 131 72 NOP  <||@
  Comment 132 74 NOP  <||@
  Comment 133 76 NOP  <||@
  Comment 134 78 NOP  <||@
  Comment 135 80 NOP  <||@
  Comment 136 82 NOP  <||@
  Comment 137 84 NOP  <||@
  Comment 138 86 NOP  <||@
  Comment 139 88 NOP  <||@
  Comment 140 90 NOP  <||@
  Comment 141 92 NOP  <||@
  Comment 142 94 NOP  <||@
  Comment 143 96 NOP  <||@
  Comment 144 98 NOP  <||@
  Comment 145 100 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3  <||@
  Comment 149 102 rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 154 104 NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0]  <||@
  Comment 154 [rax:0, rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 161 106 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 165 108 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 168 110 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 171 112 r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: >  <||@
  Comment 181 114 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 185 116 r8|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 188 118 MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 192 120 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3  <||@
  Comment 196 124 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 205 POLL_RETURN_FAR  <||@
  Comment 219 block B4 null  <||@
  Comment 219 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 219 128 NOP  <||@
  Comment 220 130 NOP  <||@
  Comment 221 132 NOP  <||@
  Comment 222 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 229 -1 r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5]  <||@
  Comment 235 134 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 235 block B5 null  <||@
  Comment 235 146 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 235 148 NOP  <||@
  Comment 236 150 NOP  <||@
  Comment 237 152 NOP  <||@
  Comment 238 154 NOP  <||@
  Comment 239 156 NOP  <||@
  Comment 240 158 NOP  <||@
  Comment 241 160 NOP  <||@
  Comment 242 162 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 249 164 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 256 166 DEOPT info [bci:0]  <||@
  Comment 256 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 261 [rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 269 block B2 null  <||@
  Comment 269 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 269 138 NOP  <||@
  Comment 270 140 NOP  <||@
  Comment 271 142 NOP  <||@
  Comment 272 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 279 -1 r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed]  <||@
  Comment 285 144 JUMP ~outgoingValues: [] destination: B2 -> B5  <||@
  Comment 292 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 317 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 350 [rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 380 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 385 [rax:0, rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 393 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 393 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 399 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 399 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8206[java.util.ArrayDeque$DeqIterator.next()]"
  method "HotSpotCompilation-8206[java.util.ArrayDeque$DeqIterator.next()]"
  date 1724269759322
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af30e80 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e34185fe66669089842400c0feff4883ec189041817f20000000000f85e5000000909090909090909090909048896c24108b46188b04c514000000448b14c50c000000448b5e0c453bd30f86720000009090909090448b46104183f8010f8c9100000090909090909090909090909090909090909090909048c1e003428b4498108504c50000000044895e1441ffc3453bd341ba00000000450f4fd34489560c41ffc84489461048c1e003488b6c24104883c418493ba7500400000f8755000000c390909049c7c30000000041bae5c2ffff90909090909090458997840400004d899f90040000e8f5a185fe0f1f84000000000090909049c7c31400000041baeda0ffffebcc48896c2410e877a283fee90cfffffff4488d0d97ffffff49898f68040000e93eb085fef441c78784040000f5d1ffff49c7879004000000000000e89ca185fe0f1f84000000000041c78784040000f5c7ffff49c7879004000000000000e879a185fe0f1f840000000000e8f24299fef4e80c9f85fef4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3f00d47d slotKind: QWORD  <||@
  Comment 74 30 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 77 32 rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 77 [rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 34 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 84 [rax:0, rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 36 r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 96 38 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD  <||@
  Comment 105 block B1 null  <||@
  Comment 105 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 105 42 NOP  <||@
  Comment 106 44 NOP  <||@
  Comment 107 46 NOP  <||@
  Comment 108 48 NOP  <||@
  Comment 109 50 NOP  <||@
  Comment 110 52 r8|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 114 54 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null  <||@
  Comment 124 block B3 null  <||@
  Comment 124 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 124 58 NOP  <||@
  Comment 125 60 NOP  <||@
  Comment 126 62 NOP  <||@
  Comment 127 64 NOP  <||@
  Comment 128 66 NOP  <||@
  Comment 129 68 NOP  <||@
  Comment 130 70 NOP  <||@
  Comment 131 72 NOP  <||@
  Comment 132 74 NOP  <||@
  Comment 133 76 NOP  <||@
  Comment 134 78 NOP  <||@
  Comment 135 80 NOP  <||@
  Comment 136 82 NOP  <||@
  Comment 137 84 NOP  <||@
  Comment 138 86 NOP  <||@
  Comment 139 88 NOP  <||@
  Comment 140 90 NOP  <||@
  Comment 141 92 NOP  <||@
  Comment 142 94 NOP  <||@
  Comment 143 96 NOP  <||@
  Comment 144 98 NOP  <||@
  Comment 145 100 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3  <||@
  Comment 149 102 rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 154 104 NULLCHECK address: [rax|DWORD[_] * 8] state [bci:0]  <||@
  Comment 154 [rax:0, rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 161 106 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 165 108 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 168 110 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 171 112 r10|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: >  <||@
  Comment 181 114 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 185 116 r8|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 188 118 MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 192 120 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@415285c6 encoding: base: 0 shift: 3  <||@
  Comment 196 124 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 205 POLL_RETURN_FAR  <||@
  Comment 219 block B4 null  <||@
  Comment 219 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 219 128 NOP  <||@
  Comment 220 130 NOP  <||@
  Comment 221 132 NOP  <||@
  Comment 222 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 229 -1 r10|DWORD = MOVE input: int[-15643|0xffffffffffffc2e5]  <||@
  Comment 235 134 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 235 block B5 null  <||@
  Comment 235 146 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 235 148 NOP  <||@
  Comment 236 150 NOP  <||@
  Comment 237 152 NOP  <||@
  Comment 238 154 NOP  <||@
  Comment 239 156 NOP  <||@
  Comment 240 158 NOP  <||@
  Comment 241 160 NOP  <||@
  Comment 242 162 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 249 164 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 256 166 DEOPT info [bci:0]  <||@
  Comment 256 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 261 [rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 269 block B2 null  <||@
  Comment 269 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 269 138 NOP  <||@
  Comment 270 140 NOP  <||@
  Comment 271 142 NOP  <||@
  Comment 272 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 279 -1 r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed]  <||@
  Comment 285 144 JUMP ~outgoingValues: [] destination: B2 -> B5  <||@
  Comment 292 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 317 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 350 [rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 380 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 385 [rax:0, rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:696) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 393 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 393 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 399 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 399 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
